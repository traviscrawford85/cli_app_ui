openapi: 3.0.0
info:
  contact:
    email: api@clio.com
    name: Clio API Support
  description: |+
    # Developer Support and Feedback
    * Clio takes the availability and stability of our API seriously; please report any **degradations** or **breakages** to Clio's API Support team at [api@clio.com](mailto:api@clio.com).
    * For business and partnership inquiries, contact our API Partnerships team at [api.partnerships@clio.com](mailto:api.partnerships@clio.com).
    * For best practices and tips from the Clio development community, join the conversation in the [Clio Developer Slack Channel](https://join.slack.com/t/clio-public/shared_invite/zt-1bd5nfbiv-WloZR3ZjepoUTv28SI1ezw).

    A community-driven [Clio Developers Stack Overflow Group](https://stackoverflow.com/questions/tagged/clio-api) also exists where you can connect and ask questions from other Clio API users.
    # Getting Started
    > **Note:** The API is available in four distinct data regions: Australia (au.app.clio.com), Canada (ca.app.clio.com), EU (eu.app.clio.com) and US (app.clio.com).
    >
    > Likewise, the developer portal is available at region-specific links for the [Australia](https://au.developers.clio.com), [Canada](https://ca.developers.clio.com), [EU](https://eu.developers.clio.com), and [US](https://developers.clio.com) regions.
    >
    > This document assumes the US region is being used (app.clio.com). If you're building in one of the other regions, you should adapt the links and examples as necessary.

    To start building on the Clio API, you’ll need a Clio account – you can review our [Developer Handbook](https://docs.developers.clio.com/) and follow the steps to sign up for an account.

    Once you have an account, you can [create a developer application](https://docs.developers.clio.com/api-docs/applications) from the [Developer Portal](https://developers.clio.com) and start building!
    # Authorization with OAuth 2.0
    See our [Authorization documentation →](https://docs.developers.clio.com/api-docs/authorization)
    # Permissions
    See our [Permissions documentation →](https://docs.developers.clio.com/api-docs/permissions)
    # Fields
    See our [Fields documentation →](https://docs.developers.clio.com/api-docs/fields)
    # Rate Limiting
    See our [Rate Limits documentation →](https://docs.developers.clio.com/api-docs/rate-limits)
    # Paging
    See our [Pagination documentation →](https://docs.developers.clio.com/api-docs/paging)
    # ETags
    See our [ETags documentation →](https://docs.developers.clio.com/api-docs/etags)
    # Minor Versions
    API v4 supports multiple minor versions. Versions are of the form '4.X.Y'. To request a specific version, you can use an `X-API-VERSION` header in your request, with the header value set to the API version you're requesting. If this header is omitted, it will be treated as a request for the default API version. If the header is present but invalid, it will return a `410 Gone` response. If the header is present and valid, but it is no longer supported, it will return a `410 Gone` response.

    An `X-API-VERSION` will be included in all successful responses, with the value being set to the API version used.

    You can find our [API Versioning Policy and Guidelines](https://docs.developers.clio.com/api-docs/api-versioning-policy) in our documentation hub.

    The [API Changelog](https://docs.developers.clio.com/api-docs/api-changelog) explains each version's changes in further detail.
    - 4.0.4

      Update `quantity` field to return values in seconds rather than hours for Activities

    - 4.0.5

      * Remove `matter_balances` field from Bills
      * Standardize status/state enum values
      * Add a Document association to completed DocumentAutomations
      * Add rate visibility handling for Activity's price and total

    - 4.0.6

      Remove `document_versions` collection field from Documents

    - 4.0.7

      Change secure link format

    - 4.0.8

      * `Activity` hours are redacted in the response based on the activity hours visibility setting for the user
      * Add `quantity_redacted` field to activities

    - 4.0.9

      **This is the default version**

      Contacts are filtered and redacted in the response based on the new 'Contacts Visibility' user permission setting.

    - 4.0.10

      Fixed validation of `type` query parameter when querying Notes


  title: Clio API Documentation
  version: v4
  x-logo:
    url: https://www.clio.com/wp-content/uploads/2015/05/Container-5-Logo.png
servers:
- description: US region Production Server
  url: https://app.clio.com/api/v4
- description: Europe region Production Server
  url: https://eu.app.clio.com/api/v4
- description: Canada region Production Server
  url: https://ca.app.clio.com/api/v4
- description: Australia region Production Server
  url: https://au.app.clio.com/api/v4
tags:
- description: |
    Activities (Time Entries and Expense Entries) track work done at a firm. Activities are recorded in Clio and then posted on bills to clients.

    Time Entries can be either be hourly-billable or flat-rate. An hourly-billable Time Entry is valued at the billing rate multiplied by the time entered. Examples could be a phone call, or a research session. A flat-rate Time Entry has a set value. Examples could be a visa application, or a contract review.

    Expenses are reimbursable costs the firm pays on behalf of a client (for example, postage, copy fees, etc.).

    [Support Link](https://help.clio.com/hc/en-us/sections/9036198517915-Activities)

    [Activities in Clio](http://app.clio.com/activities)
  name: Activities
- description: ""
  name: Activity Rates
- description: |
    Activity Descriptions are custom Time Entry templates. Activity Descriptions help firms expedite their process for recording Time Entries, and ensure that their Time Entry descriptions are consistent.

    [Support Link](https://help.clio.com/hc/en-us/articles/9289744400667-Activity-Categories)

    [Activity Descriptions in Clio](https://app.clio.com/nc/#/activity_categories)
  name: Activity Descriptions
- description: |
    Once a [Payment](https://help.clio.com/hc/articles/9285641955355-Record-Edit-and-Delete-Payments) or [Credit Note](https://help.clio.com/hc/en-us/articles/9285299888539-Credit-Notes) has been recorded, an Allocation links it to a Bill.

    It's possible for interest Allocations ("interest" = "true") to not be linked to a Bill. This can happen if the linked interest Bill is deleted (something the system allows.)

    [Support Link](https://help.clio.com/hc/articles/9285641955355-Record-Edit-and-Delete-Payments)
  name: Allocations
- description: |
    These accounts are meant to mirror the firm’s accounts at their financial institution. Users can add a bank account to Clio to use with [Clio Payments](https://help.clio.com/hc/articles/9285631748507-Payments-and-Bank-Accounts), and for use as an audit and [reconciliation](https://help.clio.com/hc/en-us/articles/9290138047899) tool.

    [Support Link](https://help.clio.com/hc/articles/9285631748507-Payments-and-Bank-Accounts)
  name: Bank Accounts
- description: ""
  name: Bank Transactions
- description: ""
  name: Bank Transfers
- description: ""
  name: Bill Themes
- description: |
    Users can view all Billable Clients, or clients with outstanding [Bills](https://help.clio.com/hc/en-us/articles/9285169278747-Generate-Bills), on the Billable Clients page, located under the Bills tab.
  name: Billable Clients
- description: |
    Users can see all [Matters with outstanding bills](https://help.clio.com/hc/en-us/articles/9286116462747#filter-matters-clio-manage-0-0) attached to them by filtering out all non-billable Matters under the Matters tab.

    Users can [disable billing](https://help.clio.com/hc/en-us/articles/9285959663131-Create-Matters#h_01GEK791XBF1JJ0VYC8BQTG9MW) for certain Matters. They can still enter Activities on these Matters, but those Activities will not appear in the [Bills page](https://help.clio.com/hc/en-us/articles/9285169278747-Generate-Bills).
  name: Billable Matters
- description: |
    Bills are statements of what a user’s client owes for their services over a particular billing period, including legal fees, expenses, and taxes.

    Users customize, preview, edit, and approve bills before sending them to a client.

    [Support Link](https://help.clio.com/hc/en-us/articles/9285169278747-Generate-Bills)
  name: Bills
- description: |
    Calendar Entries are used to track appointments or deadlines. Users can view Calendar Entries on any Calendar that they have “Viewer” or “Editor” permission for. Users can create Calendar Entries on any Calendar that they have “Editor” permission for.
    ### Only supports dates on or after January 01 1900 00:00 UTC
    * If you attempt to create a date before 1900, the year of that date will be pulled forward to 1900 before it's persisted.

    ### Calendar Update/Deletion Best Practices
    * Prior to updating or deleting a calendar entry, check for recurrence.
    * If the recurrence_rule parameter is not equal to `null`, offer the following 3 options for the update/deletion, as well as the note:
        1. Only this instance: Update/Delete this event, but leave all future events unchanged.
        2. All following: Updates/Deletes this event and all the future events.
        3. All events in the series: Updates/Deletes all events in the series.
        * Note: If you've modified any future events in this series, those edits will be lost once you make this change.

    [Support Link](https://help.clio.com/hc/en-us/articles/9289905071387-Calendar-Events)
  name: Calendar Entries
- description: ""
  name: Calendar Entry Event Types
- description: |
    Calendars contain Calendar Entries. All Clio accounts contain one firm Calendar ("AccountCalendar"), personal Calendars for each user ("UserCalendar"), and any number of manually created Calendars ("AdhocCalendar"). [Calendar sharing](https://help.clio.com/hc/en-us/articles/9289973325467-Calendar-Sharing-and-Permissions) settings determine if a Calendar is visible to a User, and if that User is able to create or edit Calendar Entries on that Calendar.

    [Support Link](https://help.clio.com/hc/en-us/articles/9290016489883-Calendar-Set-Up-and-Settings)
  name: Calendars
- description: ""
  name: Clio Payments Links
- description: |
    Payments allow users to record that funds (from checks, cash, credit cards, etc.) have been transferred from a client to the firm. In order to pay Bills, Payments must be [allocated](https://help.clio.com/hc/articles/9285641955355-Record-Edit-and-Delete-Payments).

    [Support Link](https://help.clio.com/hc/articles/9285641955355-Record-Edit-and-Delete-Payments)
  name: Clio Payments Payments
- description: |
    Users can view all logged phone calls and emails under the Communications tab in Clio. This is also where they can use [Clio internal messages](https://help.clio.com/hc/en-us/articles/9125264015259-Internal-Messages).

    Communications can be filtered to show those attached to certain Matters or dates, or to show those with or without time entries.

    [Support Link](https://help.clio.com/hc/en-us/sections/9036030931739-Communication)
  name: Communications
- description: |
    Email Addresses are email addresses associated with a Contact. This endpoint returns all email addresses associated with a Contact.
  name: Email Addresses
- description: |
    Phone Numbers are phone numbers associated with a Contact. This endpoint returns all phone numbers associated with a Contact.
  name: Phone Numbers
- description: |
    All clients, prospective clients, companies, and external co-counsels can be viewed as Contacts under the Contacts tab in Clio Manage.

    [Support Link](https://help.clio.com/hc/en-us/articles/9290486281627-Clio-Manage-Contacts-Overview)

    ## Contact Name
    When creating a contact of type "Person" you must provide at least a first name or a last name. This can be done in one of two ways:

    1. Providing the name components explicitly (preferred): Using the `first_name` and `last_name` parameters.
    2. Providing the full name (discouraged): Using the `name` parameter, you can provide the person's full name (e.g. "John Smith") and Clio will attempt to infer the individual components of the name. If it is unable to do so, you will receive a "422 Unprocessable Entity: At least one of first name or last name must be provided" Error.

    **We recommend using the individual name fields when possible to avoid any ambiguities.**

    ## Associations
    A Contact can be persisted with its associations in a single request. The followings detail the nested attributes to persist the associations.

    ### Addresses
    Checkout the sample request to update the Addresses of a Contact:
    ```json
    Request
      PATCH /api/v4/contacts/1.json
      {
        data: {
          addresses: [
            // update
            { id: 1, name: "Work", country: "Canada" },
            // create
            { name: "Home", street: "1234 Main Street", city: "Burnaby", province: "BC", country: "Canada", postal_code: "V1A 1A1" },
            // destroy
            { id: 2, _destroy: true }
          ]
        }
    ```

    ### Custom Field Values
    A CustomFieldValue contains the value of a CustomField for a Contact.
    Below are some examples of how to create, read, update, and destroy the CustomFieldValues of a Contact:
    #### Create
    Note: The value of `id` used here is the value of the `id` parameter in the response received when [creating a new CustomField](https://docs.developers.clio.com/api-reference/#operation/CustomField#create) or one returned in a [query of an existing CustomField](https://docs.developers.clio.com/api-reference/#operation/CustomField#show).
    ```json
    Request
      PATCH /api/v4/contacts/1.json
      {
        data: {
          custom_field_values: [
            { custom_field: { id: 2 }, value: "Initial value" }
          ]
        }
      }
    ```
    #### Read
    Note: The `id` of the CustomFieldValue is a composite value including the custom field type. Use this `id` to update and destroy the CustomFieldValue.
    The `id` of the associated Custom Field can be found by querying the `custom_field` for all CustomFieldValues related to the Contact, e.g.: `/api/v4/contacts/1?fields=id,display_number,custom_field_values{id,value,custom_field}`

    Note: The `id` may be `NULL` when the CustomField is displayed by default but has not yet been given a value.
    ```json
    Request
      GET /api/v4/contacts/1.json?fields=custom_field_values{id,value,custom_field}
      {
        data: {
          custom_field_values: [
            {
              id: "text_line-1",
              value: "Current value",
              custom_field: { id: 2 }
            }
          ]
        }
      }
    ```
    #### Update
    Note: The value of the CustomFieldValue `id` used here is a composite value and can be found by querying for all CustomFieldValues related to the Contact, e.g.: `/api/v4/contacts/1?fields=id,name,custom_field_values{id,value,custom_field}`

    Note: If the `id` is `NULL`, you must provide `custom_field{id}` to create the CustomFieldValue and assign a value (see **Create**).
    ```json
    Request
      PATCH /api/v4/contacts/1.json
      {
        data: {
          custom_field_values: [
            { id: "text_line-1", value: "Updated value" }
          ]
        }
      }
    ```
    #### Destroy
    Note: The value of the CustomFieldValue `id` used here is a composite value and can be found by querying for all CustomFieldValues related to the Contact, e.g.: `/api/v4/contacts/1?fields=id,name,custom_field_values{id,value}`
    ```json
    Request
      PATCH /api/v4/contacts/1.json
      {
        data: {
          custom_field_values: [
            { id: "picklist-2", _destroy: true }
          ]
        }
      }
    ```

    ### Email Addresses
    Checkout the sample request to update the Email Addresses of a Contact:
    ```json
    Request
      PATCH /api/v4/contacts/1.json
      {
        data: {
          email_addresses: [
            // update
            { id: 1, name: "Work", address: "demo@clio.com" },
            // create
            { name: "Home", address: "home@clio.com" },
            // destroy
            { id: 2, _destroy: true }
          ]
        }
    ```

    ### Instant Messengers
    Checkout the sample request to update the Instant Messengers of a Contact:
    ```json
    Request
      PATCH /api/v4/contacts/1.json
      {
        data: {
          instant_messengers: [
            // update
            { id: 1, name: "Work", address: "https://twitter.com/goclio" },
            // create
            { name: "Other", address: "https://www.facebook.com/GoClio/" },
            // destroy
            { id: 2, _destroy: true }
          ]
        }
    ```

    ### Phone Numbers
    Checkout the sample request to update the Phone Numbers of a Contact:
    ```json
    Request
      PATCH /api/v4/contacts/1.json
      {
        data: {
          phone_numbers: [
            // update
            { id: 1, name: "Work", number: "123-456-7890" },
            // create
            { name: "Other", number: "000-000-0000" },
            // destroy
            { id: 2, _destroy: true }
          ]
        }
    ```

    ### Web Site
    Checkout the sample request to update the Web Site of a Contact:
    ```json
    Request
      PATCH /api/v4/contacts/1.json
      {
        data: {
          web_sites: [
            // update
            { id: 1, name: "Work", address: "https://help.clio.com/" },
            // create
            { name: "Other", address: "https://www.clio.com/about/careers/" },
            // destroy
            { id: 2, _destroy: true }
          ]
        }
    ```
  name: Contacts
- description: ""
  name: Conversation Messages
- description: ""
  name: Conversations
- description: |
    Jurisdictions-to-Triggers calculates the effective dates of related court and agency rules that a lawyer must do for a Trigger. A Trigger is an activity or event which a lawyer or court does in a jurisdiction.

    These activities and events have corresponding deadlines, which the firm must be aware of. These deadlines can be before or after the Trigger. Example Triggers are “Mediation-Session Completed, “Notice of Appeal Filed,” ” or “Settlement Conference.”

    Jurisdiction Triggers are part of the [Court Rules](https://help.clio.com/hc/en-us/articles/9289840995867-Court-Rules) feature which is not available to all plan types. See [here](https://www.clio.com/pricing/) for feature support across different plans.

    Note that only account Administrators can add Court Rules jurisdictions.
  name: Jurisdictions To Triggers
- description: |
    There are over 1000 jurisdictions available to choose from when using Court Rules. These jurisdictions contain state, federal, appellate, and bankruptcy courts from across the United States.

    Jurisdictions are part of the [Court Rules](https://help.clio.com/hc/en-us/articles/9289840995867-Court-Rules) feature which is not available to all plan types. See [here](https://www.clio.com/pricing/) for feature support across different plans.

    [Support Link](https://help.clio.com/hc/en-us/articles/9289840995867-Court-Rules)

    [Currently Available Jurisdictions](https://www.calendarrules.com/court-list)
  name: Jurisdictions
- description: |
    A Matter Docket connects a Matter with a Court Rule (and all of the Calendar Entries associated with the Court Rule). Matter Dockets are viewable on the Matter Edit screen under the Court Rules heading.

    Matter Dockets are part of the [Court Rules](https://help.clio.com/hc/en-us/articles/9289840995867-Court-Rules) feature which is not available to all plan types. See [here](https://www.clio.com/pricing/) for feature support across different plans.

    [Support Link](https://help.clio.com/hc/en-us/articles/9289840995867-Court-Rules)
  name: Matter Dockets
- description: |
    Service Types are used when creating new Court Rules involving the delivery of documents. In order to calculate the correct deadline to send the document, an account will specify their Service Type.

    Current Service Types;
    * Express mail outside country
    * Mail outside country
    * Personal/hand
    * Mail outside state
    * Electronic service
    * Fax service
    * Express/Overnight
    * Regular mail
    * Electronic service - 0 days

    Service Types are part of the [Court Rules](https://help.clio.com/hc/en-us/articles/9289840995867-Court-Rules) feature which is not available to all plan types. See [here](https://www.clio.com/pricing/) for feature support across different plans.
  name: Service Types
- description: |
    Credit Memos allow users to write off amounts that clients owe on approved Bills. They can be added in two "ways": when viewing a Bill, or when making a payment on a Bill.

    [Support Link](https://help.clio.com/hc/en-us/articles/9285299888539-Credit-Notes)
  name: Credit Memos
- description: ""
  name: Currencies
- description: ""
  name: Custom Fields
- description: ""
  name: Custom Field Sets
- description: |
    In Clio, applications can create custom actions in our interface. Links are unique across an application, user, location in the UI (`ui_reference`) and label. When the user clicks on a custom action, Clio will open a new browser tab at the `target_url`.

    Clio will add a few URL parameters to the `target_url`, including the custom action ID, the ID of the user who clicked the link and the URL of the object(s) which the link was clicked on. The third party application must then look up the relevant OAuth token associated with the user and custom action, and make an authenticated request to the `subject_url`. This request both lets you validate the request was made by who you expected, that they have access to the record and lets you pull down any extra information you may need.

    Currently supported for: Activities, Contacts, Documents and Matters

    ## Security

    ### Confirming a User's Action

    As custom actions require an unauthorized GET request, which can be faked, Clio has provided a way to validate that a user has actually performed an action.

    When a request is sent to the URL specified on the custom action, we will include a `custom_action_nonce` parameter. If you send us back the `custom_action_nonce` in your next request to the API, Clio will use it to validate that the user who clicked the custom action matches your oauth token request. If no match is made, an error will be returned.
  name: Custom Actions
- description: ""
  name: Damages
- description: |
    Expense Categories are custom Expense Entry templates. Expense Categories help firms expedite their process for recording Expense Entries, and ensure that their Expense Entry descriptions are consistent.

    [Support Link](https://help.clio.com/hc/en-us/articles/9289744400667-Activity-Categories#create-an-expense-category-0-2)

    [Expense Categories in Clio](https://app.clio.com/nc/#/activity_categories)
  name: Expense Categories
- description: ""
  name: Grants
- description: ""
  name: Grant Funding Sources
- description: |
    In Clio, [permission levels](https://help.clio.com/hc/en-us/articles/9200279456667-Account-Users-and-Permissions#user-permissions-clio-manage--0-2) and [Matter permissions](https://help.clio.com/hc/en-us/articles/9286062516123-Matter-Permissions-and-Rates) are controlled using Groups. All accounts contain an “all users” group, as well as individual groups for each user. Admins always have access to all of the account's groups. Users can also create groups manually in order to precisely manage their permissions.

    [Support Link](https://help.clio.com/hc/en-us/articles/9200279456667-Account-Users-and-Permissions#user-groups-0-6)
  name: Groups
- description: "Event metrics keep track of firm users' unread web and mobile [In-app\
    \ notifications](https://help.clio.com/hc/en-us/articles/9290346939547-Set-Up-Clio-Manage#settings-0-3)\
    \ and unread [Clio Internal Messages](https://help.clio.com/hc/en-us/articles/9125264015259-Internal-Messages)."
  name: Event Metrics
- description: "In-app notifications are used to notify firm users of important events\
    \ or changes in Clio, initiated by other firm users. These events are displayed\
    \ in the **Your firm** tab of the notifications panel."
  name: My Events
- description: ""
  name: Interest Charges
- description: ""
  name: Line Items
- description: |
    Log Entries populate the “Recents” dropdown in the header. The “Recent” section displays the ten Matters and Contacts that the user most recently accessed.

    When a user accesses a Contact or a Matter, a Log Entry is created.
  name: Log Entries
- description: |
    [Matters](https://help.clio.com/hc/en-us/articles/9285920226075-Clio-Manage-Matters-Overview) in Clio represent a firm’s cases. All relevant information—Bills, Documents, Time Entries, etc.—are contained in the Matter. A user’s ability to access a Matter is controlled by the [Matter Permission settings](https://help.clio.com/hc/en-us/articles/9286062516123-Matter-Permissions-and-Rates). A user without permission will be unable to view or update a Matter.

    [Support Link](https://help.clio.com/hc/en-us/articles/9285920226075-Clio-Manage-Matters-Overview)

    [Matters in Clio](http://app.clio.com/matters)

    ## Associations
    A Matter can be persisted with its associations in a single request. The followings detail the nested attributes to persist the associations.

    ### Custom Field Values
    A CustomFieldValue contains the value of a CustomField for a Matter.
    Below are some examples of how to create, read, update, and destroy the CustomFieldValues of a Matter:
    #### Create
    Note: The value of `id` used here is the value of the `id` parameter in the response received when [creating a new CustomField](https://docs.developers.clio.com/api-reference/#operation/CustomField#create) or one returned in a [query of an existing CustomField](https://docs.developers.clio.com/api-reference/#operation/CustomField#show).
    ```json
    Request
      PATCH /api/v4/matters/1.json
      {
        data: {
          custom_field_values: [
            { custom_field: { id: 2 }, value: "Initial value" }
          ]
        }
      }
    ```
    #### Read
    Note:  The `id` of the CustomFieldValue is a composite value including the custom field type. Use this `id` to update and destroy the CustomFieldValue.
    The `id` of the associated Custom Field can be found by querying the `custom_field` for all CustomFieldValues related to the Matter, e.g.: `/api/v4/matters/1?fields=id,display_number,custom_field_values{id,value,custom_field}`

    Note: The `id` may be `NULL` when the CustomField is displayed by default but has not yet been given a value.
    ```json
    Request
      GET /api/v4/matters/1.json?fields=custom_field_values{id,value,custom_field}
      {
        data: {
          custom_field_values: [
            {
              id: "text_line-1",
              value: "Current value",
              custom_field: { id: 2 }
            }
          ]
        }
      }
    ```
    #### Update
    Note: The value of the CustomFieldValue `id` used here is a composite value and can be found by querying for all CustomFieldValues related to the Matter, e.g.: `/api/v4/matters/1?fields=id,display_number,custom_field_values{id,value,custom_field}`

    Note: If the `id` is `NULL`, you must provide `custom_field{id}` to create the CustomFieldValue and assign a value (see **Create**).
    ```json
    Request
      PATCH /api/v4/matters/1.json
      {
        data: {
          custom_field_values: [
            { id: "text_line-1", value: "Updated value" }
          ]
        }
      }
    ```
    #### Destroy
    Note: The value of the CustomFieldValue `id` used here is a composite value and can be found by querying for all CustomFieldValues related to the Matter, e.g.: `/api/v4/matters/1?fields=id,display_number,custom_field_values{id,value}`
    ```json
    Request
      PATCH /api/v4/matters/1.json
      {
        data: {
          custom_field_values: [
            { id: "picklist-2", _destroy: true }
          ]
        }
      }
    ```

    ### Custom Rates
    Each Matter can be set up to be billed on an Hourly basis, Flat Fee basis, or on Contingency.
    To set the rate type, assign `custom_rate[type]` with one of the values, `"HourlyRate"`, `"FlatRate"` or `"ContingencyFee"`.
    By default, a Matter is billed on an hourly basis. If the rate type is modified, the persisted rates will be deleted.

    [Support Link](https://help.clio.com/hc/en-us/articles/9289801180187)

    #### Hourly Rates
    Selecting the `"HourlyRate"` type will record time entries based on the custom hourly rates.
    A custom hourly rate can be associated to a User or a Group.
    Checkout the sample request to update the hourly rates of a Matter:
    ```json
    Request
      PATCH /api/v4/matters/1.json
      {
        data: {
          custom_rate: {
            type: "HourlyRate",
            rates: [
              // update a rate for a user
              { id: 1, rate: 100, user: { id: 1 } },
              // update a rate for a group
              { id: 2, rate: 100, group: { id: 1 } },
              // create a rate for a user
              { rate: 100, user: { id: 2 } },
              // create a rate for a group
              { rate: 100, group: { id: 2 } },
              // destroy a rate
              { id: 3, _destroy: true }
            ]
          }
        }
      }
    ```

    #### Flat Rate
    Selecting the `"FlatRate"` type will bill the matter with a flat fee. A Matter can only have one flat rate.
    For associated objects, you can specify `_destroy` attribute to delete the rate.

    Checkout the sample request to update the flat rate of a Matter:
    ```json
    Request
      PATCH /api/v4/matters/1.json
      {
        data: {
          custom_rate: {
            type: "FlatRate",
            rates: [
              {
                id: 1,
                user: { id: 1 },
                activity_description: { id: 1 },
                rate: 100,
              }
            ]
          }
        }
      }
    ```

    #### Contingency Fee
    Selecting the `"ContingencyFee"` type will specify a contingency fee percentage on a Matter and the award or settlement amount won at the completion of the case.
    A Matter can only have one definition of contingency fee.
    For associated objects, you can specify `_destroy` attribute to delete the rate.

    Contingency Fee Matters are not available to all plan types. See [here](https://www.clio.com/pricing/) for feature support across different plans.

    Checkout the sample request to update the contingency fee of a Matter:
    ```json
    Request
      PATCH /api/v4/matters/1.json
      {
        data: {
          custom_rate: {
            type: "ContingencyFee",
            rates: [
              {
                id: 1,
                user: { id: 1 },
                rate: 20,
              }
            ]
          }
        }
      }
    ```
    ### Matter Budget
    Clio supports tracking a matter budget directly within a Matter.
    A Matter can only have one matter budget associated with it.
    A matter budget can not be added to flat rate matters.
    For associated objects, you can specify the `_destroy` attribute to delete the Matter Budget.

    Matter Budget are not available to all plan types. See [here](https://www.clio.com/pricing/) for feature support across different plans.

    Check out the sample request to update the matter budget of a Matter:
    ```json
    Request
      PATCH /api/v4/matters/1.json
      {
        data: {
          matter_budget: {
            budget: 5000000,
            include_expenses: true,
            notification_threshold: 100,
            notify_users: true
            users: [
              { id: 1 },
              // destroy
              { id: 2, _destroy: true }
            ]
          }
        }
      }
    ```
    ### Grant Matter
    Clio supports associating a Grant with a Matter, using Grant Matters.
    A Matter can have up to three Grants (and Grant Matters) associated with it.
    For associated objects, you can specify the `_destroy` attribute to delete Grant Matters.

    Grant Matters are only for legal aid US customers

    Checkout the sample request to update a Grant Matter:
    ```json
    Request
      PATCH /api/v4/matters/1.json
      {
        data: {
        "grant_matters": [
          {"id":{{existing_grant_matter_id}}}
        ]
        }
      }
      ```
    ### Relationships
    There are people and/or companies related to a Matter other than the client of the lawyer. Clio helps define how the entities relate to a Matter.

    #### Please be advised that the use of the relationships field below is discouraged. We plan to deprecate it in the future. Please use [Relationships](https://docs.developers.clio.com/api-reference/#tag/Relationships) instead.

    Checkout the sample request to update Relationships of a Matter:
    ```json
    Request
      PATCH /api/v4/matters/1.json
      {
        data: {
          relationships: [
            // update
            { id: 1, contact: { id: 1 }, description: "Opposing Counsel" },
            // create
            { contact: { id: 2 }, description: "Judge" },
            // destroy
            { id: 2, _destroy: true }
          ]
        }
      }
    ```

    ### Statue Of Limitations
    Clio supports to track a Statute of Limitations date directly within a Matter.
    It can be associated with reminders as a Task.
    A Matter can only have one definition of Statue of Limitations.
    For associated objects, you can specify `_destroy` attribute to delete the Statue of Limitations.

    Check out the sample request to update the Statue of Limitations and its reminders of a Matter:
    ```json
    Request
      PATCH /api/v4/matters/1.json
      {
        data: {
          statue_of_limitations: [
            due_at: "20201231",
            status: "open",
            reminders: [
              // update
              { id: 1, duration_unit: "days", duration_value: 1, notification_method: { id: 1 } },
              // create
              { duration_unit: "days", duration_value: 1, notification_method: { id: 2 } },
              // destroy
              { id: 2, _destroy: true }
            ]
          ]
        }
      }
    ```

    ### Task Template Lists
    Clio supports assigning task template lists to a matter from with the same request that
    creates or updates a matter. Please note that a task template list **can only be
    assigned**. Once a task template list is assigned, it **cannot be modified or destroyed**.

    Checkout the sample request to assign a task template list id to a matter:

    ```json
    Request
      PATCH /api/v4/matters/1.json
      {
        data: {
          task_template_list_instances: [
            {
              notify_assignees: true,
              task_template_list: {id: 1},
            },
            {
              notify_assignees: false,
              task_template_list: {id: 2},
            }
          ],
        }
      }
    ```
  name: Matters
- description: ""
  name: Clients
- description: ""
  name: Related Contacts
- description: |
    All clients, prospective clients, companies, and external co-counsels can be viewed as Contacts under the Contacts tab in Clio Manage.

    [Support Link](https://help.clio.com/hc/en-us/articles/9290486281627-Clio-Manage-Contacts-Overview)

    ## Contact Name
    When creating a contact of type "Person" you must provide at least a first name or a last name. This can be done in one of two ways:

    1. Providing the name components explicitly (preferred): Using the `first_name` and `last_name` parameters.
    2. Providing the full name (discouraged): Using the `name` parameter, you can provide the person's full name (e.g. "John Smith") and Clio will attempt to infer the individual components of the name. If it is unable to do so, you will receive a "422 Unprocessable Entity: At least one of first name or last name must be provided" Error.

    **We recommend using the individual name fields when possible to avoid any ambiguities.**

    ## Associations
    A Contact can be persisted with its associations in a single request. The followings detail the nested attributes to persist the associations.

    ### Addresses
    Checkout the sample request to update the Addresses of a Contact:
    ```json
    Request
      PATCH /api/v4/contacts/1.json
      {
        data: {
          addresses: [
            // update
            { id: 1, name: "Work", country: "Canada" },
            // create
            { name: "Home", street: "1234 Main Street", city: "Burnaby", province: "BC", country: "Canada", postal_code: "V1A 1A1" },
            // destroy
            { id: 2, _destroy: true }
          ]
        }
    ```

    ### Custom Field Values
    A CustomFieldValue contains the value of a CustomField for a Contact.
    Below are some examples of how to create, read, update, and destroy the CustomFieldValues of a Contact:
    #### Create
    Note: The value of `id` used here is the value of the `id` parameter in the response received when [creating a new CustomField](https://docs.developers.clio.com/api-reference/#operation/CustomField#create) or one returned in a [query of an existing CustomField](https://docs.developers.clio.com/api-reference/#operation/CustomField#show).
    ```json
    Request
      PATCH /api/v4/contacts/1.json
      {
        data: {
          custom_field_values: [
            { custom_field: { id: 2 }, value: "Initial value" }
          ]
        }
      }
    ```
    #### Read
    Note: The `id` of the CustomFieldValue is a composite value including the custom field type. Use this `id` to update and destroy the CustomFieldValue.
    The `id` of the associated Custom Field can be found by querying the `custom_field` for all CustomFieldValues related to the Contact, e.g.: `/api/v4/contacts/1?fields=id,display_number,custom_field_values{id,value,custom_field}`

    Note: The `id` may be `NULL` when the CustomField is displayed by default but has not yet been given a value.
    ```json
    Request
      GET /api/v4/contacts/1.json?fields=custom_field_values{id,value,custom_field}
      {
        data: {
          custom_field_values: [
            {
              id: "text_line-1",
              value: "Current value",
              custom_field: { id: 2 }
            }
          ]
        }
      }
    ```
    #### Update
    Note: The value of the CustomFieldValue `id` used here is a composite value and can be found by querying for all CustomFieldValues related to the Contact, e.g.: `/api/v4/contacts/1?fields=id,name,custom_field_values{id,value,custom_field}`

    Note: If the `id` is `NULL`, you must provide `custom_field{id}` to create the CustomFieldValue and assign a value (see **Create**).
    ```json
    Request
      PATCH /api/v4/contacts/1.json
      {
        data: {
          custom_field_values: [
            { id: "text_line-1", value: "Updated value" }
          ]
        }
      }
    ```
    #### Destroy
    Note: The value of the CustomFieldValue `id` used here is a composite value and can be found by querying for all CustomFieldValues related to the Contact, e.g.: `/api/v4/contacts/1?fields=id,name,custom_field_values{id,value}`
    ```json
    Request
      PATCH /api/v4/contacts/1.json
      {
        data: {
          custom_field_values: [
            { id: "picklist-2", _destroy: true }
          ]
        }
      }
    ```

    ### Email Addresses
    Checkout the sample request to update the Email Addresses of a Contact:
    ```json
    Request
      PATCH /api/v4/contacts/1.json
      {
        data: {
          email_addresses: [
            // update
            { id: 1, name: "Work", address: "demo@clio.com" },
            // create
            { name: "Home", address: "home@clio.com" },
            // destroy
            { id: 2, _destroy: true }
          ]
        }
    ```

    ### Instant Messengers
    Checkout the sample request to update the Instant Messengers of a Contact:
    ```json
    Request
      PATCH /api/v4/contacts/1.json
      {
        data: {
          instant_messengers: [
            // update
            { id: 1, name: "Work", address: "https://twitter.com/goclio" },
            // create
            { name: "Other", address: "https://www.facebook.com/GoClio/" },
            // destroy
            { id: 2, _destroy: true }
          ]
        }
    ```

    ### Phone Numbers
    Checkout the sample request to update the Phone Numbers of a Contact:
    ```json
    Request
      PATCH /api/v4/contacts/1.json
      {
        data: {
          phone_numbers: [
            // update
            { id: 1, name: "Work", number: "123-456-7890" },
            // create
            { name: "Other", number: "000-000-0000" },
            // destroy
            { id: 2, _destroy: true }
          ]
        }
    ```

    ### Web Site
    Checkout the sample request to update the Web Site of a Contact:
    ```json
    Request
      PATCH /api/v4/contacts/1.json
      {
        data: {
          web_sites: [
            // update
            { id: 1, name: "Work", address: "https://help.clio.com/" },
            // create
            { name: "Other", address: "https://www.clio.com/about/careers/" },
            // destroy
            { id: 2, _destroy: true }
          ]
        }
    ```
  name: Matter Contacts
- description: ""
  name: Matter Stages
- description: |
    Medical Records are a subset of Medical Records Details and can be used to keep track of documents, start dates, and end dates.

    Note that these endpoints only handle Updating and Destroying a record. Creating records should be handled in the Medical Records Details endpoint.
  name: Medical Records
- description: |
    Medical Records Details allow you to track requests for medical records and medical bills, track treatment dates, follow up on requests, upload medical files, and track liens and outstanding balances that need to be paid out of the settlement all in one place.

    Medical Records Details can be found in the Matters page under the Medical Records sub tab.

    [Support Link](https://help.clio.com/hc/en-us/articles/15815962459931-Medical-Records)
  name: Medical Records Details
- description: |
    Medical Bills are a subset of Medical Records Details and can be used to keep track of documents, bill dates, and liens.

    Note that these endpoints only handle Updating and Destroying a record. Creating records should be handled in the Medical Records Details endpoint.
  name: Medical Bills
- description: |
    Notes can be added to Matters or Contacts in Clio to record meeting notes, research, or anything else a user might want. The field can hold hundreds of pages, so users can add plenty of information.

    Notes can be found either on the Matters or Contacts page under the Notes sub tab.

    [Support Link](https://help.clio.com/hc/en-us/articles/9285920226075-Clio-Manage-Matters-Overview#h_01GHETXG1D1HBK71VEF9HNSPDM)
  name: Notes
- description: ""
  name: Outstanding Client Balances
- description: |
    The practice area field can be added to Matters and used for filtering purposes, or just for reference. Users can create their own practice areas in their [Firm Preferences settings](https://help.clio.com/hc/en-us/articles/9290346939547-Set-Up-Clio-Manage#settings-0-3).

    [Support link](https://help.clio.com/hc/en-us/articles/9285959663131-Create-Matters#h_01GEK791XBF1JJ0VYC8BQTG9MW)

    [Practice areas settings](http://app.clio.com/practice_areas)
  name: Practice Areas
- description: |
    Relationships are used on a Matter to track Contacts related to the Matter. Relationships are can be found on the Contacts sub tab of a Matter.

    [Support Link](https://help.clio.com/hc/en-us/articles/9285959663131-Create-Matters#h_01GEK791XBF1JJ0VYC8BQTG9MW)

    Relationships are used on the Matter detail page under the Contacts tab.
  name: Relationships
- description: |
    Reminders can be added to Tasks or Calendar Entries. Reminder emails can be sent by a User to themselves, other Users, Clio For Co-Counsel/Clio Connect Contacts, or [any authorized email](https://help.clio.com/hc/en-us/articles/9289861195291-Calendar-Notifications-and-Reminders). An in-Clio pop-up reminder can also be sent by a User to themself.

    [Support Link](https://help.clio.com/hc/en-us/articles/9289861195291-Calendar-Notifications-and-Reminders)
  name: Reminders
- description: ""
  name: Reports
- description: |
    Report Presets can be created to streamline report generation workflow by saving report option parameters as a Preset.

    [Support Link](https://help.clio.com/hc/en-us/articles/9290078155803-Generate-Reports-Presets-and-History#reports-presets-0-2)

    ## Creating a Report Preset
    ### Options
    When creating a Report Preset, the options sent in the request body is dependent on the report kind.

    Check out the sample request to create a Report Preset for the Billing History web report for the current year and grouped by client.

    ```
    Request
      POST /api/v4/report_presets.json
      {
        data:
        { name: "Current Yr Billing",
          kind: "billing_history",
          options: {
            date_range: "year",
            format: "html",
            group_by: "client",
            start_date: null,
            end_date: null,
            kind: "billing_history"
          },
          format: "html"
        }
      }
    ```
  name: Report Presets
- description: |
    Schedule report generation for an existing Report Preset using Report Schedules. A Report Schedule will generate reports from the specified Preset's report options on a daily, weekly or monthly basis. Once the report has been generated, users will be notified via email.

    [Support Link](https://help.clio.com/hc/en-us/articles/9290078155803-Generate-Reports-Presets-and-History)
  name: Report Schedules
- description: ""
  name: Billing Settings
- description: |
    Clio's Text Snippets feature allows users to create a list of predefined abbreviations for commonly used phrases. For example, a user could configure their settings to have “meeting with client” show up whenever they type “mwc.”

    This feature can be used in various field in Clio, such as the Matter Description, Note Detail, Calendar Entry Description and Task Description fields.

    Text snippets are created and configured in a user's [personal settings](https://app.clio.com/settings/text_snippets) in Clio Manage.

    [Support link](https://help.clio.com/hc/en-us/articles/9290346939547-Set-Up-Clio-Manage#settings-0-3)
  name: Text Snippets
- description: |
    Tasks are used to assign and track work. Users can set priorities, due dates, and add reminders.

    Tasks can be assigned to firm users as well as Contacts (such as clients or co-counsel).

    [Support Link](https://help.clio.com/hc/en-us/articles/9204917906971-Task-Management)

    [Tasks in Clio](http://app.clio.com/tasks)
  name: Tasks
- description: ""
  name: Calendar Visibilities
- description: |
    Task Templates are the individual [Tasks](https://docs.developers.clio.com/api-reference/#tag/Tasks) which comprise a [Task Template List](https://docs.developers.clio.com/api-reference/#tag/Task-Template-Lists).

    [Support Link](https://help.clio.com/hc/en-us/articles/9206286672155-Task-Lists)
  name: Task Templates
- description: |
    With Task Template Lists, users can create groups of [Task Templates](https://docs.developers.clio.com/api-reference/#tag/Task-Templates) for the types of projects they work on most often. Each Task in a list can be given a separate due date in relation to the due dates for other [Tasks](https://docs.developers.clio.com/api-reference/#tag/Tasks) in the list.

    Users can then assign individual tasks on a list to different users, or they can batch assign an entire list.

    [Support Link](https://help.clio.com/hc/en-us/articles/9206286672155-Task-Lists)

    [Task Template Lists in Clio](http://app.clio.com/list_templates)
  name: Task Template Lists
- description: |
    Task Types are used to better categorize and filter tasks. This is a simple text field which is limited to 50 characters.

    Task Types are part of the Advanced Tasks feature which is not available to all plan types. See [here](https://www.clio.com/pricing/) for feature support across different plans.

    [Support Link] (https://help.clio.com/hc/en-us/articles/9205859328923-Task-Types)

    Used within Clio at [Task types](http://app.clio.com/task_types)
  name: Task Types
- description: |
    Timers are used to track time spent on billable work. They are used with hourly-billable [Time Entries](https://docs.developers.clio.com/api-reference/#tag/Activities).

    The Timer modal is accessed by clicking the timer in the application's header, or by clicking the Timer icon on a Time Entry.

    [Support Link](https://help.clio.com/hc/en-us/articles/9289741706779-Time-Entries#timer-0-2)

    Used within Clio in the timer modal which can be accessed by clicking the timer in the header or on the create/edit Time Entry form.
  name: Timers
- description: ""
  name: Trust Line Items
- description: ""
  name: Trust Requests
- description: |
    A User is anyone with the ability to log in to Clio. This does not include Clio for Co-Counsel/Clio Connect users.

    [Support Link](https://help.clio.com/hc/en-us/articles/9200279456667-Account-Users-and-Permissions)

    ## Firm name
    You can obtain the name of the firm linked to a user by accessing the nested `account` object:

    ```json
    Request
      GET /api/v4/users/who_am_i?fields=account{name}
    ```
  name: Users
- description: |
    [UTBMS codes](https://docs.developers.clio.com/api-reference/#tag/UTBMS-Codes) are divided into code sets. Each set includes Activities relevant to a certain type of law (for example, litigation, bankruptcy, etc.). Clio users can enable one or more of these sets in the [UTBMS settings menu](https://help.clio.com/hc/en-us/articles/9289762435099-UTBMS-Codes#enable-utbms-codes-0-0). Enabling a UTBMS code set means that users will be able to select Activities from that list when adding Time or Expense Entries into Clio.

    [Support Link](https://help.clio.com/hc/en-us/articles/9289762435099-UTBMS-Codes)
  name: Utbms Sets
- description: |
    [UTBMS codes](http://utbms.com/) standardize Time and Expense entries across the legal profession. Clio users can enter their Activities using UTBMS codes in order to provide electronic invoices.

    [Support Link](https://help.clio.com/hc/en-us/articles/9289762435099-UTBMS-Codes)
  name: Utbms Codes
- description: |
    Webhooks are a way of detecting events in Clio without the need for polling.

    A webhook can be subscribed to a number of `events` on a model. Some events will be different depending on the chosen model, but (with one exception) *all* models support the following events:

    * `created`
    * `updated`
    * `deleted`

    To subscribe to any or all events for a model, [create a webhook record](#operation/Webhook#create) with the URL that you want webhooks to be sent to, a model, and the list of `events` you care about. Whenever an event happens on that model in Clio that the user is authorized to see, an HTTP request will be made to the supplied URL with details about the event. A webhook will automatically expire after a set period of time. If no `expires_at` parameter is provided, the webhook will expire after 3 days. The maximum duration you can set a webhook to expire after is 31 days. If you require longer than that, you can manually extend it by updating the `expires_at` field.

    ## Supported Models

    Your application needs to have the corresponding model OAuth scope when creating or updating a webhook. For example, when creating/updating a folder webhook you need the document Oauth Scope and the webhook Oauth Scope.
    The list of models supported by webhooks with their corresponding string identifier and ID is presented in the following table:

    | Name                  | String Identifier     | ID | Oauth Scope    |
    |-----------------------|-----------------------|:--:|----------------|
    | Matter                | matter                | 1  | Matters        |
    | Activity              | activity              | 2  | Activities     |
    | Bill                  | bill                  | 3  | Billing        |
    | Calendar Entry        | calendar_entry        | 4  | Calendars      |
    | Communication         | communication         | 5  | Communications |
    | Contact               | contact               | 6  | Contacts       |
    | Task                  | task                  | 7  | Tasks          |
    | Document              | document              | 8  | Documents      |
    | Folder                | folder                | 9  | Documents      |
    | Clio Payments payment | clio_payments_payment | 10 | Clio Payments  |

    ## HTTPS

    Please note that all webhooks MUST be using a url with the `https` scheme. All other schemes, including `http`, will be rejected.

    ## Specifying Fields in Webhooks

    When a webhook is sent, the payload will not include the entire object for the record. To select specific fields from the record, you can use the fields parameter when creating the webhook. For example: when creating a webhook listening for new Activity records being created, you can pass the value “id,etag,quantity,price” into the fields parameter. When an Activity is created, the id, etag, quantity, and price fields of the new Activity will be included in the webhook's payload.

    For `update` webhooks, the fields parameter is also used to specify fields that will be “watched” by the webhook. Clio will only send a webhook when at least one of the selected fields has changed on a record.


    **An important note**
    If you have never received a webhook for an object before, you will receive a webhook for that object if any fields have changed on that object, including fields you haven't subscribed to.
    For example: if you create a webhook that subscribes to updates to Activities and provide "price" as the field parameter value, the first time an Activity is updated after the Webhook is live will trigger a webhook event – even if the price hasn't changed. Subsequent webhook events for that Activity will only be sent when the price field changes.

    Note that there is a hard limit to the size of the `fields` parameter. Any request containing a `fields` size over 1000 characters will be rejected.

    Tip: Use the minimum set of fields to reduce how frequently your endpoint is hit.

    ## Model Specific Events

    As mentioned previously, almost all models support the created, updated, and deleted events. Some models also support events specific to their life cycle.

    ### Clio Payments payments

    * `created` is fired whenever a payment is created
    * `updated` is fired whenever a payment is updated

    ### All other Models

    * `created` is fired whenever a model is created
    * `updated` is fired whenever a model is updated
    * `deleted` is fired whenever a model is deleted

    ### Matters

    * `matter_opened` is fired whenever a matter's status changes to "Open"
    * `matter_pended` is fired whenever a matter's status changes to "Pending"
    * `matter_closed` is fired whenever a matter's status changes to "Close"

    More model-specific events will be coming soon.

    ## Delivery Failure and Retries

    A response status code of `2xx`, `3xx`, or `410 GONE` indicate that the action was successfully processed. When a `410 GONE` response is received, the webhook subscription will be disabled. All other responses will be considered unsuccessful, and they will be retried using an exponential backoff strategy.

    ### Timeouts

    Clio will wait a short period of time before the request will timeout. We will consider it an unsuccessful response and retry using an exponential backoff strategy. It is important to respond quickly. Failure to do so repeatedly may result in your webhook being disabled. If you need to do lengthy processing with the webhook, it is recommended that you defer the processing until after you have sent a response back to Clio.

    ## Webhook Security

    ### Identity Confirmation

    To ensure that a URL actually intends to receive webhooks from Clio, and to ensure that the payloads are actually from Clio, we will share a secret in the initial handshake.

    A POST request will be made immediately after a webhook is setup, or whenever the URL changes. This request will have a unique secret in a `X-Hook-Secret` header along with the id of the webhook that was just created. There are two ways of confirming the webhook using this secret:

    #### Option 1: Immediate

    Upon initially receiving this secret, the endpoint can return a `200 OK` response and include the same secret in a `X-Hook-Secret` header.

    #### Option 2: Delayed

    After receiving the secret, make a PUT request to `/api/v4/webhooks/:webhook_id/activate` with the secret in a `X-Hook-Secret` header.

    Note that a webhook will not be enabled until this handshake is successful.

    ### Confirming Hook Legitimacy

    To prove that Clio is sending all subsequent messages, Clio will sign all of the requests.

    Clio will compute an [HMAC-SHA256 signature](https://en.wikipedia.org/wiki/Hash-based_message_authentication_code) based on the shared secret and the request body. That signature will then be placed in a `X-Hook-Signature` header. The endpoint can then verify the signature to know if the message is authentic. Verification is as simple as computing an HMAC-SHA256 signature using the shared secret as the key and the request body as the message, and comparing it to the `X-Hook-Signature` header.

    ## Examples

    A Webhook can be created for the Activities model, to trigger on any events and return the id and etag fields:
      ```http
        {
          "data":{
            "url":"https://my/callback/url",
            "fields":"id,etag",
            "model":"activity",
            "events":["created","deleted","updated"]
          }
        }
      ```

    This webhook would have the following responses for different actions. It would trigger on any events for the model, and return the id and etag fields for that model, and the event type.

    Notes:
    * The `model` field accepts both the string identifier of the model as in the example, or its ID. In the latter case, you would have provided the ID parameter: `"model":2`. Refer to [the table listing the models supported by webhooks](#section/Supported-Models) for matching the model name with its ID.

    ### Create

    In the event of an Activity being created, your URL would receive the following JSON:
      ```http
        {
          "data":{
            "id":152,
            "etag":"\"9a103be2201ae758992733a91f02903f\""
          },
          "meta":{
            "event":"created",
            "webhook_id":1234
          }
        }
      ```

    ### Update

    In the event of an Activity being updated, your URL would receive the following JSON:
      ```http
        {
          "data":{
            "id":152,
            "etag":"\"9d9ef9fb42a505976d90d564c1596f11\""
          },
          "meta":{
            "event":"updated",
            "webhook_id":1234
          }
        }
      ```

    ### Delete

    In the event of an Activity being deleted, your URL would receive the following JSON:
      ```http
        {
          "data":{
            "id":152,
            "etag":"\"3cc31bfbd6cfc16d3d7123423e437079\""
          },
          "meta":{
            "event":"deleted",
            "webhook_id":1234
          }
        }
      ```
  name: Webhooks
- description: |
    This endpoint provides the Legal Aid civil certificated rates, which are the prescribed reimbursement rates for legal services provided under the Legal Aid Scheme.

    [Support Link](https://help.clio.com/hc/en-150/sections/9591010772379-Legal-Aid)
  name: Civil Certificated Rates
- description: |
    This endpoint provides the Legal Aid civil controlled rates, which are the prescribed reimbursement rates for legal services provided under the Legal Aid Scheme.

    [Support Link](https://help.clio.com/hc/en-150/sections/9591010772379-Legal-Aid)
  name: Civil Controlled Rates
- description: |
    This endpoint provides the Legal Aid criminal controlled rates, which are the prescribed reimbursement rates for legal services provided under the Legal Aid Scheme.

    [Support Link](https://help.clio.com/hc/en-150/sections/9591010772379-Legal-Aid)
  name: Criminal Controlled Rates
- description: |
    Comments are short text messages which can be associated with either Documents or Folders.

    If the Comment is created in association with a Document, it will also be associated with the Document's latest Document Version.
  name: Comments
- description: ""
  name: Document Archives
- description: |
    Clio Documents are files uploaded to Clio. Files uploaded to Clio’s document integrations (e.g. Google Drive and Office365) are inaccessible through the API.

    [Support Link](https://help.clio.com/hc/en-us/articles/9290308200091-Generate-Manage-and-Share-Documents#create-upload-and-share-documents-in-clio-manage-0-3)

    ## Uploading a new document
    [Create a document](#operation/Document%23create) to a parent that can refer to a `Matter` or a `Folder`. Ensure to ask for the fields, `id` and `latest_document_version{uuid,put_url,put_headers}`. The `put_url` is a signed URL with security credentials for uploading the document. The `put_headers` are required request headers for uploading the document. Check out the example to upload a new document to the matter folder of `Matter` with id `1`:
    ```json
    Request
      POST api/v4/documents?fields=id,latest_document_version{uuid,put_url,put_headers}
        "data": {
          "name": "file.jpg",
          "parent": {
            "id": 1,
            "type": "Matter"
          }
        }

    Response
      {
        "data": {
          "id": 1234,
          "latest_document_version": {
            "uuid": "a51faa2c-859e-4c08-a996-2d0bb385df90",
            "put_url": "https://s3.us-west-2.amazonaws.com/iris-production/uploads/document_version/file/a51faa2c-859e-4c08-a996-2d0bb385df90/file.jpg?X-Amz-Expires=28800&X-Amz-Date=20171024T214532Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential={aws_access_key}/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-type%3Bhost%3Bx-amz-server-side-encryption&X-Amz-Signature=afe5000df0972d02884a2219f913bfa62fe2531c75b4fcd1edbcb84d267d2b8e",
            "put_headers": [
              {
                "name": "x-amz-server-side-encryption",
                "value": "AES256"
              },
              {
                "name": "Content-Type",
                "value": "image/jpeg"
              }
            ]
          }
        }
      }
    ```
    If the extension is listed in the [IANA Media Types registry](https://www.iana.org/assignments/media-types/media-types.xhtml) Clio will apply the corresponding content type as determined by the file extension when `content_type` is blank. One of the nine possible content types  `content_type` = “text” / “image” / “audio” / “video” / “application” / “font” / “model” / “message” / “multipart” must be submitted if the file type is uncommon, not listed in the [IANA Media Types registry](https://www.iana.org/assignments/media-types/media-types.xhtml) or not obvious from the extension.

    ### Upload the document
    Upload the document to the `put_url` with the headers from `puts_headers` given in the response of the previous step. Typically the headers include `Content-Type` and `x-amz-server-side-encryption` to match with the signature in the `put_url`. Check out the example to upload the file content using curl:
    ```bash
    curl -X PUT -T file.jpg
      -H "Content-Type: image/jpeg"
      -H "x-amz-server-side-encryption: AES256"
      "https://s3.us-west-2.amazonaws.com/iris-production/uploads/document_version/file/a51faa2c-859e-4c08-a996-2d0bb385df90/file.jpg?X-Amz-Expires=28800&X-Amz-Date=20171024T214532Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential={aws_access_key}/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-type%3Bhost%3Bx-amz-server-side-encryption&X-Amz-Signature=afe5000df0972d02884a2219f913bfa62fe2531c75b4fcd1edbcb84d267d2b8e"
    ```
    If you need MD5 checksum, you should use multipart upload.

    ### Mark the document as fully-uploaded
    After successfully completing the upload, [mark the document fully uploaded](#operation/Document%23update) with `fully_uploaded` as `true`, and `uuid` given in the first step. Clio will verify if the file is uploaded successfully. If not, it raises `UploadNotFoundError` error. It is possible for the verification to time out, which will return an `UploadTimeoutError` error. When that happens, you will need to retry the request.
    ```json
    Request
      PATCH api/v4/documents/1234?fields=id,latest_document_version{fully_uploaded}
        "data": {
          "uuid": "a51faa2c-859e-4c08-a996-2d0bb385df90",
          "fully_uploaded": "true"
        }
      }

    Response (success)
      {
        "data": {
          "id": 12345,
          "latest_document_version": {
              "fully_uploaded": true
          }
        }
      }
    Response (error)
      {
        "error": {
          "type": "UploadNotFoundError",
          "message": "A matching remote file was not found for the file named file.jpg with UUID a51faa2c-859e-4c08-a996-2d0bb385df90"
        }
      }
    Response (timeout)
      {
        "error": {
          "type": "UploadTimeoutError",
          "message": "A timeout occurred verifying the remote file. Please try the request again."
        }
      }
    ```
    The file is now visible in Clio documents and is available to the user for download.

    ## Uploading a new document version
    It is same as uploading a new document to Clio except setting the `parent` to an existing `Document`. Check out the example to upload a new document version for the document with id `1234`:
    ```json
    Request
      POST api/v4/documents?fields=id,latest_document_version{uuid,put_url,put_headers}
        "data": {
          "name": "file.jpg",
          "parent": {
            "id": 1234,
            "type": "Document"
          }
        }
      }
    ```
    The remaining steps are same as uploading a new document to Clio.

    ## Uploading a document using multipart upload
    In general, when a file reaches 100 MB, you should consider using multipart upload instead of uploading in a single operation. Except the last part, each part should be at least 5 MB. Determine the number of file parts and split the file. Optionally, you may compute the base64-encoded 128-bit MD5 mechanism as an end-to-end integrity check for each file part. To determine the base64 MD5 checksum for a file part, you may use `openssl`. Check out the example to split a big pdf and get the checksums of the file parts:
    ```bash
    split -b 31457280 big.pdf big.pdf.        # break the file to max. 30MB size
    openssl md5 -binary big.pdf.aa | base64   # F16pda4G0h4lzH7d2/Jbdw==
    openssl md5 -binary big.pdf.ab | base64   # cRbxEG//GK9rIze5tdYzcg==
    openssl md5 -binary big.pdf.ac | base64   # Tck0KKU4SrmSp8hsSCuSYg==
    openssl md5 -binary big.pdf.ad | base64   # CrIt7lbZzVhMV7JzVTkUvw==
    ```
    ### Create the document
    [Create a document](#operation/Document%23create), specify `multiparts` for multipart upload, and ensure to ask for the fields, `id`, and `latest_document_version{uuid,multiparts}`. A `multipart` consists of `part_number`, `content_length`, and optional `content_md5`. In the response, a `put_url` is appended to the `multipart`. A `put_url` is a signed URL with security credentials for uploading a file part. The signed URL expires in 8 hours. The API can handle maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts, [make a PUT request](#operation/Document%23update) with `uuid`, `fully_uploaded` as `false`, and another set of `multiparts`. It returns a set of `put_url` for the specified `multiparts`. Check out the example to upload a new document to the matter folder of `Matter` with id `1`:
    ```json
    Request
      POST api/v4/documents?fields=id,latest_document_version{uuid,put_headers,multiparts}
        "data": {
          "name": "big.pdf",
          "parent": {
            "id": 1,
            "type": "Matter"
          }
          "multiparts": [
            {
              "part_number": 1,
              "content_length": 31457280,
              "content_md5": "F16pda4G0h4lzH7d2/Jbdw=="
            },
            {
              "part_number": 2,
              "content_length": 31457280,
              "content_md5": "cRbxEG//GK9rIze5tdYzcg=="
            },
            {
              "part_number": 3,
              "content_length": 31457280,
              "content_md5": "Tck0KKU4SrmSp8hsSCuSYg=="
            },
            {
              "part_number": 4,
              "content_length": 7316647,
              "content_md5": "CrIt7lbZzVhMV7JzVTkUvw=="
            }
          ]
        }

    Response
      {
        "data": {
          "id": 1234,
          "latest_document_version": {
            "uuid": "eba78724-31e8-4529-b6e2-0f2eef6feeec",
            "put_headers": [
                {
                    "name": "x-amz-server-side-encryption",
                    "value": "AES256"
                },
                {
                    "name": "Content-Type",
                    "value": "application/pdf"
                }
              ],
            "multiparts": [
              {
                "part_number": 1,
                "put_url": "https://s3.us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=1&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential={aws_access_token}/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=f7b3f29e4aee3abfa93fb42a7969557a2a0d305d223dde641c78421b5a6d62e0",
                "put_headers": [
                  {
                      "name": "Content-Length",
                      "value": "31457280"
                  },
                  {
                      "name": "Content-MD5",
                      "value": "F16pda4G0h4lzH7d2/Jbdw=="
                  }
                ]
              },
              {
                "part_number": 2,
                "put_url": "https://s3.us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=2&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential={aws_access_token}/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=47dc30f90202654c13030ccce87e43622bb47e0ad155ae61f6b41e8097803950",
                "put_headers": [
                  {
                      "name": "Content-Length",
                      "value": "31457280"
                  },
                  {
                      "name": "Content-MD5",
                      "value": "cRbxEG//GK9rIze5tdYzcg=="
                  }
                ]
              },
              {
                "part_number": 3,
                "put_url": "https://s3.us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=3&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential={aws_access_token}/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=13ca827a73fb2c50e8062ef7e437cfe9158944d998e2770a2ffcd034be6c2fc7",
                "put_headers": [
                  {
                      "name": "Content-Length",
                      "value": "31457280"
                  },
                  {
                      "name": "Content-MD5",
                      "value": "Tck0KKU4SrmSp8hsSCuSYg=="
                  }
                ]
              },
              {
                "part_number": 4,
                "put_url": "https://s3.us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=4&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential={aws_access_token}/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=25773f971c4c663b3a87f4d35c5b4c5192c3c999c7efdd69a49bc5bc40677078",
                "put_headers": [
                  {
                      "name": "Content-Length",
                      "value": "7316647"
                  },
                  {
                      "name": "Content-MD5",
                      "value": "CrIt7lbZzVhMV7JzVTkUvw=="
                  }
                ]
              }
            ]
          }
        }
      }
    ```

    ### Upload the document
    Upload each multipart to the corresponding `put_url`. You can upload the parts independently and in any order. If transmission of any part fails, you can re-transmit that part without affecting other parts. Make sure to include the headers from `puts_headers`. Typically the headers include `Content-Length`, to match with the signature in the `put_url`. Check out the example using curl:
    ```bash
    curl -X PUT -T big.pdf.part1
      -H "Content-Length: 31457280"
      "https://s3.us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=1&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential={aws_access_token}/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=f7b3f29e4aee3abfa93fb42a7969557a2a0d305d223dde641c78421b5a6d62e0"
    ```
    If you use MD5 checksum to validate the integrity of upload, include `Content-MD5` in the header:
    ```bash
    curl -X PUT -T big.pdf.part1
      -H "Content-Length: 31457280"
      -H "Content-MD5: F16pda4G0h4lzH7d2/Jbdw=="
      "https://s3.us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=1&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential={aws_access_token}/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=f7b3f29e4aee3abfa93fb42a7969557a2a0d305d223dde641c78421b5a6d62e0"
    ```
    If the file is invalid or the MD5 is invalid, you may get the following response:
    ```bash
    <Error>
      <Code>BadDigest</Code>
      <Message>The Content-MD5 you specified did not match what we received.</Message>
      <ExpectedDigest>F16pda4G0h4lzH7d2/Jbdw==</ExpectedDigest>
      <CalculatedDigest>Tck0KKU4SrmSp8hsSCuSYg==</CalculatedDigest>
      <RequestId>85918626116672DD</RequestId>
      <HostId>AbAoiqYqn8tKwS6gxwI3pc4u02B6u6ORa6MPEJH7IYljBweZp0M8L7Lg2AFOvHxdHz5TwlQpkVs=</HostId>
    </Error>
    ```
    After the issue is corrected, try to upload to the file part to the `put_url` again.

    ### Mark the document as fully-uploaded
    After successfully completing the upload of all the file parts, [mark the document fully uploaded](#operation/Document%23update) with `fully_uploaded` as `true`, and `uuid` given in the first step. Clio will verify if the file is uploaded successfully. If not, it raises `UploadNotFoundError` error. It is possible for the verification to time out, which will return an `UploadTimeoutError` error. When that happens, you will need to retry the request.
    ```json
    Request
      PATCH api/v4/documents/1234?fields=id,latest_document_version{fully_uploaded}
        "data": {
          "uuid": "eba78724-31e8-4529-b6e2-0f2eef6feeec",
          "fully_uploaded": "true"
        }
      }

    Response (success)
      {
        "data": {
          "id": 12345,
          "latest_document_version": {
              "fully_uploaded": true
          }
        }
      }
    Response (error)
      {
        "error": {
          "type": "UploadNotFoundError",
          "message": "A matching remote file was not found for the file named file.jpg with UUID a51faa2c-859e-4c08-a996-2d0bb385df90"
        }
      }
    Response (timeout)
      {
        "error": {
          "type": "UploadTimeoutError",
          "message": "A timeout occurred verifying the remote file. Please try the request again."
        }
      }
    ```
    The file is now visible in Clio documents and is available to the user for download.

    ## Uploading a new document version using multipart upload
    It is same as splitting and uploading a new document using multipart upload, except setting the `parent` to an existing `Document`. Check out the example to upload a new document version for the document with id `1234`:
    ```bash
    Request
      POST api/v4/documents?fields=id,latest_document_version{uuid,put_headers,multiparts}
        "data": {
          "name": "big.pdf",
          "parent": {
            "id": 1234,
            "type": "Document"
          }
          "multiparts": [
            {
              "part_number": 1,
              "content_length": 31457280,
              "content_md5": "F16pda4G0h4lzH7d2/Jbdw=="
            },
            {
              "part_number": 2,
              "content_length": 31457280,
              "content_md5": "cRbxEG//GK9rIze5tdYzcg=="
            },
            {
              "part_number": 3,
              "content_length": 31457280,
              "content_md5": "Tck0KKU4SrmSp8hsSCuSYg=="
            },
            {
              "part_number": 4,
              "content_length": 7316647,
              "content_md5": "CrIt7lbZzVhMV7JzVTkUvw=="
            }
          ]
        }
    ```
    The remaining steps are same as uploading a new document to Clio.
  name: Documents
- description: |
    Versions contain information about the version history of a document. Versioning allows users to track changes made to a document over time.

    [Support Link](https://help.clio.com/hc/en-us/articles/9290308200091-Generate-Manage-and-Share-Documents#manage-documents-in-clio-manage-0-4)
  name: Document Versions
- description: |
    Document Automation uses Document Templates to create standardized documents. Users select a Document Template (that they have created and uploaded) and a Matter to automatically create a document using information from that Matter (such as addresses, account balances, Matter names, etc.).

    Documents made from templates are created using Nintex, an authorized Clio sub-processor. For further information, please refer to Clio’s Privacy Policy and Terms of Service.

    [Support Link](https://help.clio.com/hc/en-us/articles/9290238939163-Document-Templates#create-document-templates-in-clio-manage-0-4)
  name: Document Automations
- description: |
    Clio users can add Document Categories to their account to help organize their Documents. When a Document is uploaded or edited, a Document Category can be assigned. Users can filter by Document Category to show all Documents in a certain category across all of the account’s Matters.

    [Support Link](https://help.clio.com/hc/en-us/articles/9290308200091-Generate-Manage-and-Share-Documents#document-categories-in-clio-manage-0-2)

    [Document Categories in Clio](http://app.clio.com/document_categories)
  name: Document Categories
- description: |
    Document Templates are files used to create standardized documents using Clio’s Document Automation feature. Document Templates contain merge fields, which are used to pull information from Clio into the document being generated by Document Automation.

    The supported formats are doc, docx, ppt, pptx, xls, xlsx, pdf and xml.

    [Support Link](https://help.clio.com/hc/en-us/articles/9290238939163-Document-Templates#create-document-templates-in-clio-manage-0-4)
  name: Document Templates
- description: |
    Files stored in Clio’s Documents section are organized in folders. Folders are automatically generated for new Contacts and Matters. Folders can also be manually created anywhere in the folder structure.

    [Support Link](https://help.clio.com/hc/en-us/articles/9290308200091-Generate-Manage-and-Share-Documents#manage-documents-in-clio-manage-0-4)
  name: Folders
paths:
  /activities.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Activities"
      operationId: Activity#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single ActivityDescription. Use the
          keyword `null` to match those without a Activity. The list will be filtered
          to include only the Activity records with the matching property.
        explode: true
        in: query
        name: activity_description_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for a single CalendarEntry. Use the keyword
          `null` to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: calendar_entry_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for a single Communication. Use the keyword
          `null` to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: communication_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for a single Note. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: contact_note_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter Activity records to those whose `date` is on or before
          the date provided (Expects an ISO-8601 date).
        explode: true
        in: query
        name: end_datequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The unique identifier for a single ExpenseCategory. Use the keyword
          `null` to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: expense_category_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: "Filter Activity TimeEntry records to those that have a flat\
          \ rate, or not."
        explode: true
        in: query
        name: flat_ratequery
        required: false
        schema:
          type: boolean
        style: form
      - description: The unique identifier for a single Grant. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: grant_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for a single Note. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_note_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Only unaccounted for activities.
        explode: true
        in: query
        name: only_unaccounted_forquery
        required: false
        schema:
          type: boolean
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those whose `date` is on or after
          the date provided (Expects an ISO-8601 date).
        explode: true
        in: query
        name: start_datequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Filter Activity records to those that are draft, billed, unbilled\
          \ or non-billable."
        explode: true
        in: query
        name: statusquery
        required: false
        schema:
          enum:
          - billed
          - draft
          - unbilled
          - non_billable
          - billable
          - written_off
          type: string
        style: form
      - description: The unique identifier for a single Task. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: task_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those of a specific type.
        explode: true
        in: query
        name: typequery
        required: false
        schema:
          enum:
          - TimeEntry
          - ExpenseEntry
          - HardCostEntry
          - SoftCostEntry
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: user_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Activities
      tags:
      - Activities
    post:
      description: Outlines the parameters and data fields used when creating a new
        Activity
      operationId: Activity#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_15264083'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new Activity
      tags:
      - Activities
  /activities/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single Activity"
      operationId: Activity#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single Activity
      tags:
      - Activities
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Activity"
      operationId: Activity#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Activity
      tags:
      - Activities
    patch:
      description: Outlines the parameters and data fields used when updating a single
        Activity
      operationId: Activity#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_98fad133'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single Activity
      tags:
      - Activities
  /activity_rates.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all ActivityRates"
      operationId: ActivityRate#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          ActivityRate records with the matching property.
        explode: true
        in: query
        name: co_counsel_contact_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          ActivityRate records with the matching property.
        explode: true
        in: query
        name: contact_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all ActivityRates
      tags:
      - Activity Rates
    post:
      description: Outlines the parameters and data fields used when creating a new
        ActivityRate
      operationId: ActivityRate#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_733a3b9d'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new ActivityRate
      tags:
      - Activity Rates
  /activity_rates/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single ActivityRate"
      operationId: ActivityRate#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single ActivityRate
      tags:
      - Activity Rates
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single ActivityRate"
      operationId: ActivityRate#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single ActivityRate
      tags:
      - Activity Rates
    patch:
      description: Outlines the parameters and data fields used when updating a single
        ActivityRate
      operationId: ActivityRate#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_733a3b9d'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single ActivityRate
      tags:
      - Activity Rates
  /activity_descriptions.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all ActivityDescriptions"
      operationId: ActivityDescription#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: "Filter Activity TimeEntry records to those that have a flat\
          \ rate, or not."
        explode: true
        in: query
        name: flat_ratequery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Matter id for rate calculation.
        explode: true
        in: query
        name: rate_formatter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "User id for rate calculation. If not provided, the user associated\
          \ to the API request is assumed."
        explode: true
        in: query
        name: rate_foruser_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those of a specific type.
        explode: true
        in: query
        name: typequery
        required: false
        schema:
          enum:
          - TimeEntry
          - ExpenseEntry
          - HardCostEntry
          - SoftCostEntry
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: user_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all ActivityDescriptions
      tags:
      - Activity Descriptions
    post:
      description: Outlines the parameters and data fields used when creating a new
        ActivityDescription
      operationId: ActivityDescription#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_f9ebf9bf'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new ActivityDescription
      tags:
      - Activity Descriptions
  /activity_descriptions/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single ActivityDescription"
      operationId: ActivityDescription#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single ActivityDescription
      tags:
      - Activity Descriptions
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single ActivityDescription"
      operationId: ActivityDescription#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single ActivityDescription
      tags:
      - Activity Descriptions
    patch:
      description: Outlines the parameters and data fields used when updating a single
        ActivityDescription
      operationId: ActivityDescription#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_30ef368b'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single ActivityDescription
      tags:
      - Activity Descriptions
  /allocations.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Allocations"
      operationId: Allocation#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Bill. The keyword `null` is
          not valid for this field. The list will be filtered to include only the
          Allocation records with the matching property.
        explode: true
        in: query
        name: bill_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          ActivityRate records with the matching property.
        explode: true
        in: query
        name: contact_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: ID of parent (either a Payment or CreditMemo) this allocation
          belongs to
        explode: true
        in: query
        name: parent_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Allocation records based on whether the parent is a CreditMemo
          or a Payment.
        explode: true
        in: query
        name: parent_typequery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Filter Activity records to those that are draft, billed, unbilled\
          \ or non-billable."
        explode: true
        in: query
        name: statusquery
        required: false
        schema:
          enum:
          - billed
          - draft
          - unbilled
          - non_billable
          - billable
          - written_off
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Allocations
      tags:
      - Allocations
  /allocations/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Allocation"
      operationId: Allocation#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Allocation
      tags:
      - Allocations
  /bank_accounts.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all BankAccounts"
      operationId: BankAccount#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter BankAccount records to those having a zero or non zero
          balance.
        explode: true
        in: query
        name: show_empty_accountsquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those of a specific type.
        explode: true
        in: query
        name: typequery
        required: false
        schema:
          enum:
          - TimeEntry
          - ExpenseEntry
          - HardCostEntry
          - SoftCostEntry
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: user_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all BankAccounts
      tags:
      - Bank Accounts
    post:
      description: Outlines the parameters and data fields used when creating a new
        BankAccount
      operationId: BankAccount#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_62abff87'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new BankAccount
      tags:
      - Bank Accounts
  /bank_accounts/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single BankAccount"
      operationId: BankAccount#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single BankAccount
      tags:
      - Bank Accounts
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single BankAccount"
      operationId: BankAccount#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single BankAccount
      tags:
      - Bank Accounts
    patch:
      description: Outlines the parameters and data fields used when updating a single
        BankAccount
      operationId: BankAccount#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_641f3049'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single BankAccount
      tags:
      - Bank Accounts
  /bank_transactions.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all BankTransactions"
      operationId: BankTransaction#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single BankAccount. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          BankTransaction records with the matching property.
        explode: true
        in: query
        name: bank_account_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          BankTransaction records with the matching property.
        explode: true
        in: query
        name: client_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those of a specific type.
        explode: true
        in: query
        name: typequery
        required: false
        schema:
          enum:
          - TimeEntry
          - ExpenseEntry
          - HardCostEntry
          - SoftCostEntry
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all BankTransactions
      tags:
      - Bank Transactions
  /bank_transactions/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single BankTransaction"
      operationId: BankTransaction#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single BankTransaction
      tags:
      - Bank Transactions
  /bank_transfers/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single BankTransfer"
      operationId: BankTransfer#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single BankTransfer
      tags:
      - Bank Transfers
  /bill_themes.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all BillThemes"
      operationId: BillTheme#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all BillThemes
      tags:
      - Bill Themes
  /bill_themes/{id}.json:
    patch:
      description: Outlines the parameters and data fields used when updating a single
        BillTheme
      operationId: BillTheme#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_20ca7c0c'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single BillTheme
      tags:
      - Bill Themes
  /billable_clients.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all BillableClients"
      operationId: BillableClient#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          BankTransaction records with the matching property.
        explode: true
        in: query
        name: client_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: |
          Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,
          if the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.
          The key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`
          If an operator is used for a type that does not support it, an `400 Bad Request` is returned.

          *Supported operators:*
          * `checkbox`, `contact`, `matter`, `picklist` : `=`

          e.g. `?custom_field_values[1]=42`

          * `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`

          e.g. `?custom_field_values[1]=>=105.4`

          * `email`, `text_area`, `text_line`, `url` : `=`

          e.g. `?custom_field_values[1]=url_encoded`

          *Multiple conditions for the same custom field:*

          If you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.
          e.g. `?custom_field_values[1]=[<=50, >=45]`
        explode: true
        in: query
        name: custom_field_valuesquery
        required: false
        schema:
          enum:
          - =
          - <
          - '>'
          - <=
          - '>='
          type: string
        style: form
      - description: Filter Activity records to those whose `date` is on or before
          the date provided (Expects an ISO-8601 date).
        explode: true
        in: query
        name: end_datequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a BillableClient. The list will be filtered to include
          only the BillableClient records with the matching property.
        explode: true
        in: query
        name: originating_attorney_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a BillableClient. The list will be filtered to include
          only the BillableClient records with the matching property.
        explode: true
        in: query
        name: responsible_attorney_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those whose `date` is on or after
          the date provided (Expects an ISO-8601 date).
        explode: true
        in: query
        name: start_datequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all BillableClients
      tags:
      - Billable Clients
  /billable_matters/ids.json:
    get:
      description: This data is retrieved asynchronously
      operationId: BillableMatter#ids
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          BankTransaction records with the matching property.
        explode: true
        in: query
        name: client_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: |
          Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,
          if the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.
          The key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`
          If an operator is used for a type that does not support it, an `400 Bad Request` is returned.

          *Supported operators:*
          * `checkbox`, `contact`, `matter`, `picklist` : `=`

          e.g. `?custom_field_values[1]=42`

          * `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`

          e.g. `?custom_field_values[1]=>=105.4`

          * `email`, `text_area`, `text_line`, `url` : `=`

          e.g. `?custom_field_values[1]=url_encoded`

          *Multiple conditions for the same custom field:*

          If you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.
          e.g. `?custom_field_values[1]=[<=50, >=45]`
        explode: true
        in: query
        name: custom_field_valuesquery
        required: false
        schema:
          enum:
          - =
          - <
          - '>'
          - <=
          - '>='
          type: string
        style: form
      - description: Filter Activity records to those whose `date` is on or before
          the date provided (Expects an ISO-8601 date).
        explode: true
        in: query
        name: end_datequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a BillableClient. The list will be filtered to include
          only the BillableClient records with the matching property.
        explode: true
        in: query
        name: originating_attorney_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a BillableClient. The list will be filtered to include
          only the BillableClient records with the matching property.
        explode: true
        in: query
        name: responsible_attorney_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those whose `date` is on or after
          the date provided (Expects an ISO-8601 date).
        explode: true
        in: query
        name: start_datequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Returns the unique identifiers of all BillableMatter
      tags:
      - Billable Matters
  /billable_matters.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all BillableMatters"
      operationId: BillableMatter#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          BankTransaction records with the matching property.
        explode: true
        in: query
        name: client_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: |
          Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,
          if the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.
          The key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`
          If an operator is used for a type that does not support it, an `400 Bad Request` is returned.

          *Supported operators:*
          * `checkbox`, `contact`, `matter`, `picklist` : `=`

          e.g. `?custom_field_values[1]=42`

          * `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`

          e.g. `?custom_field_values[1]=>=105.4`

          * `email`, `text_area`, `text_line`, `url` : `=`

          e.g. `?custom_field_values[1]=url_encoded`

          *Multiple conditions for the same custom field:*

          If you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.
          e.g. `?custom_field_values[1]=[<=50, >=45]`
        explode: true
        in: query
        name: custom_field_valuesquery
        required: false
        schema:
          enum:
          - =
          - <
          - '>'
          - <=
          - '>='
          type: string
        style: form
      - description: Filter Activity records to those whose `date` is on or before
          the date provided (Expects an ISO-8601 date).
        explode: true
        in: query
        name: end_datequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a BillableClient. The list will be filtered to include
          only the BillableClient records with the matching property.
        explode: true
        in: query
        name: originating_attorney_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a BillableClient. The list will be filtered to include
          only the BillableClient records with the matching property.
        explode: true
        in: query
        name: responsible_attorney_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those whose `date` is on or after
          the date provided (Expects an ISO-8601 date).
        explode: true
        in: query
        name: start_datequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all BillableMatters
      tags:
      - Billable Matters
  /bills/{id}/preview.json:
    get:
      description: |
        This endpoint returns a pre-rendered HTML object that you can use to view a preview of your bills.
        The HTML provided contains all of the CSS rules it requires to show the bill correctly,
        as well as the DOCTYPE setting it requires.
        It's best to use an iframe, or similar object, to render the results of this endpoint.
      operationId: Bill#preview
      parameters:
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Returns the pre-rendered html for the Bill
      tags:
      - Bills
  /bills.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Bills"
      operationId: Bill#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          BankTransaction records with the matching property.
        explode: true
        in: query
        name: client_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter Bill records to those of a specific currency.
        explode: true
        in: query
        name: currency_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: |
          Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,
          if the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.
          The key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`
          If an operator is used for a type that does not support it, an `400 Bad Request` is returned.

          *Supported operators:*
          * `checkbox`, `contact`, `matter`, `picklist` : `=`

          e.g. `?custom_field_values[1]=42`

          * `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`

          e.g. `?custom_field_values[1]=>=105.4`

          * `email`, `text_area`, `text_line`, `url` : `=`

          e.g. `?custom_field_values[1]=url_encoded`

          *Multiple conditions for the same custom field:*

          If you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.
          e.g. `?custom_field_values[1]=[<=50, >=45]`
        explode: true
        in: query
        name: custom_field_valuesquery
        required: false
        schema:
          enum:
          - =
          - <
          - '>'
          - <=
          - '>='
          type: string
        style: form
      - description: Filter Bill records to those that have a `due_date` after the
          one provided (Expects an ISO-8601 date).
        explode: true
        in: query
        name: due_afterquery
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filter Bill records to those that have a specific `due_date`
          (Expects an ISO-8601 date).
        explode: true
        in: query
        name: due_atquery
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filter Bill records to those that have a `due_date` before the
          one provided (Expects an ISO-8601 date).
        explode: true
        in: query
        name: due_beforequery
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Bill records to those that have an `issue_date` after
          the one provided (Expects an ISO-8601 date).
        explode: true
        in: query
        name: issued_afterquery
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filter Bill records to those that have an `issue_date` before
          the one provided (Expects an ISO-8601 date).
        explode: true
        in: query
        name: issued_beforequery
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filter Bill records for those whose bills have been sent before
          the specified date
        explode: true
        in: query
        name: last_sent_end_datequery
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filter Bill records for those whose bills have been sent after
          the specified date
        explode: true
        in: query
        name: last_sent_start_datequery
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a BillableClient. The list will be filtered to include
          only the BillableClient records with the matching property.
        explode: true
        in: query
        name: originating_attorney_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Bill records to those that are overdue.
        explode: true
        in: query
        name: overdue_onlyquery
        required: false
        schema:
          type: boolean
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a BillableClient. The list will be filtered to include
          only the BillableClient records with the matching property.
        explode: true
        in: query
        name: responsible_attorney_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Bill records to those in a given state.
        explode: true
        in: query
        name: statequery
        required: false
        schema:
          enum:
          - draft
          - awaiting_approval
          - awaiting_payment
          - paid
          - void
          - deleted
          type: string
        style: form
      - description: "Filter Activity records to those that are draft, billed, unbilled\
          \ or non-billable."
        explode: true
        in: query
        name: statusquery
        required: false
        schema:
          enum:
          - billed
          - draft
          - unbilled
          - non_billable
          - billable
          - written_off
          type: string
        style: form
      - description: Filter Activity records to those of a specific type.
        explode: true
        in: query
        name: typequery
        required: false
        schema:
          enum:
          - TimeEntry
          - ExpenseEntry
          - HardCostEntry
          - SoftCostEntry
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Bills
      tags:
      - Bills
  /bills/{id}.json:
    delete:
      description: |
        This endpoint will transition a bill to either its deleted or voided state.
        A bill can only be deleted or voided if it has no payments recorded
        and its current state is one of the following:
        * Draft
        * Pending Approval
        * Unpaid

        A bill will automatically be moved to a deleted or void state based on its current state.
        The mappings for this are:
        * Draft -> Deleted
        * Pending Approval -> Deleted
        * Unpaid -> Void
      operationId: Bill#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete or void a Bill
      tags:
      - Bills
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Bill"
      operationId: Bill#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The id of the next *Bill* available for viewing
        explode: true
        in: query
        name: navigation.nextquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The id of the previous *Bill* available for viewing
        explode: true
        in: query
        name: navigation.previousquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Bill
      tags:
      - Bills
    patch:
      description: Outlines the parameters and data fields used when updating a single
        Bill
      operationId: Bill#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_45eea465'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single Bill
      tags:
      - Bills
  /calendar_entries.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all CalendarEntries"
      operationId: CalendarEntry#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Calendar. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          CalendarEntry records with the matching property.
        explode: true
        in: query
        name: calendar_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Returns a record for each occurrence of a recurring calendar
          event.  Non-recurring calendar events are unaffected and returned as separate
          records regardless of the expanded setting.
        explode: true
        in: query
        name: expandedquery
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          Filter records to only those with the given external property(s) name set.

          e.g. `?external_property_name=Name`
        explode: true
        in: query
        name: external_property_namequery
        required: false
        schema:
          type: string
        style: form
      - description: |
          Filter records to only those with the given external property(s) value set. Requires external property name as well.

          e.g. `?external_property_name=Name&external_property_value=Value`
        explode: true
        in: query
        name: external_property_valuequery
        required: false
        schema:
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter CalendarEntry records to those that end on or after the
          provided time (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: fromquery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Allows matching court rule on calendar entry.
        explode: true
        in: query
        name: has_court_rulequery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter CalendarEntry records to those that are marked as all
          day events.
        explode: true
        in: query
        name: is_all_dayquery
        required: false
        schema:
          type: boolean
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Returns CalendarEntry records for all users related to a matter.
          Requires matter id.
        explode: true
        in: query
        name: owner_entries_across_all_usersquery
        required: false
        schema:
          type: boolean
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: "Filter CalendarEntry records to those having a specific calendar\
          \ visibility source (mobile, web)."
        explode: true
        in: query
        name: sourcequery
        required: false
        schema:
          enum:
          - web
          - mobile
          type: string
        style: form
      - description: Filter CalendarEntry records to those that begin on or before
          the provided time (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: toquery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter CalendarEntry records to those that are visible.
        explode: true
        in: query
        name: visiblequery
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all CalendarEntries
      tags:
      - Calendar Entries
    post:
      description: Outlines the parameters and data fields used when creating a new
        CalendarEntry
      operationId: CalendarEntry#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_967c9577'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new CalendarEntry
      tags:
      - Calendar Entries
  /calendar_entries/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single CalendarEntry"
      operationId: CalendarEntry#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single CalendarEntry
      tags:
      - Calendar Entries
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single CalendarEntry"
      operationId: CalendarEntry#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single CalendarEntry
      tags:
      - Calendar Entries
    patch:
      description: Outlines the parameters and data fields used when updating a single
        CalendarEntry
      operationId: CalendarEntry#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_552cbb49'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single CalendarEntry
      tags:
      - Calendar Entries
  /calendar_entry_event_types.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all CalendarEntryEventTypes"
      operationId: CalendarEntryEventType#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all calendar entry event types
      tags:
      - Calendar Entry Event Types
    post:
      description: Outlines the parameters and data fields used when creating a new
        CalendarEntryEventType
      operationId: CalendarEntryEventType#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_a85312b0'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new calendar entry event type
      tags:
      - Calendar Entry Event Types
  /calendar_entry_event_types/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single CalendarEntryEventType"
      operationId: CalendarEntryEventType#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single calendar entry event type
      tags:
      - Calendar Entry Event Types
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single CalendarEntryEventType"
      operationId: CalendarEntryEventType#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single calendar entry event type
      tags:
      - Calendar Entry Event Types
    patch:
      description: Outlines the parameters and data fields used when updating a single
        CalendarEntryEventType
      operationId: CalendarEntryEventType#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_3273acb4'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single calendar entry event type
      tags:
      - Calendar Entry Event Types
  /calendars.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Calendars"
      operationId: Calendar#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter any shared UserCalendar records whose owner is inactive.
        explode: true
        in: query
        name: filter_inactive_usersquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: Filter Calendar records to those that the user owns.
        explode: true
        in: query
        name: ownerquery
        required: false
        schema:
          type: boolean
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: "Filter CalendarEntry records to those having a specific calendar\
          \ visibility source (mobile, web)."
        explode: true
        in: query
        name: sourcequery
        required: false
        schema:
          enum:
          - web
          - mobile
          type: string
        style: form
      - description: Filter Activity records to those of a specific type.
        explode: true
        in: query
        name: typequery
        required: false
        schema:
          enum:
          - TimeEntry
          - ExpenseEntry
          - HardCostEntry
          - SoftCostEntry
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter CalendarEntry records to those that are visible.
        explode: true
        in: query
        name: visiblequery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Calendar records to those which the user can write to.
        explode: true
        in: query
        name: writeablequery
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Calendars
      tags:
      - Calendars
    post:
      description: Outlines the parameters and data fields used when creating a new
        Calendar
      operationId: Calendar#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_9a9a25eb'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new Calendar
      tags:
      - Calendars
  /calendars/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single Calendar"
      operationId: Calendar#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single Calendar
      tags:
      - Calendars
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Calendar"
      operationId: Calendar#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Calendar
      tags:
      - Calendars
    patch:
      description: Outlines the parameters and data fields used when updating a single
        Calendar
      operationId: Calendar#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_2091b97c'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single Calendar
      tags:
      - Calendars
  /clio_payments/links.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all ClioPaymentsLinks"
      operationId: ClioPaymentsLink#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter ClioPaymentsLink records based on whether or not they
          have expired.
        explode: true
        in: query
        name: activequery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all ClioPaymentsLinks
      tags:
      - Clio Payments Links
    post:
      description: Outlines the parameters and data fields used when creating a new
        ClioPaymentsLink
      operationId: ClioPaymentsLink#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_091bfd61'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new ClioPaymentsLink
      tags:
      - Clio Payments Links
  /clio_payments/links/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single ClioPaymentsLink"
      operationId: ClioPaymentsLink#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single ClioPaymentsLink
      tags:
      - Clio Payments Links
    patch:
      description: Outlines the parameters and data fields used when updating a single
        ClioPaymentsLink
      operationId: ClioPaymentsLink#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_56ee4b3b'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single ClioPaymentsLink
      tags:
      - Clio Payments Links
  /clio_payments/payments.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all ClioPaymentsPayments"
      operationId: ClioPaymentsPayment#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Bill. The keyword `null` is
          not valid for this field. The list will be filtered to include only the
          Allocation records with the matching property.
        explode: true
        in: query
        name: bill_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          ActivityRate records with the matching property.
        explode: true
        in: query
        name: contact_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Bill records to those in a given state.
        explode: true
        in: query
        name: statequery
        required: false
        schema:
          enum:
          - draft
          - awaiting_approval
          - awaiting_payment
          - paid
          - void
          - deleted
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all ClioPaymentsPayments
      tags:
      - Clio Payments Payments
  /clio_payments/payments/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single ClioPaymentsPayment"
      operationId: ClioPaymentsPayment#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single ClioPaymentsPayment
      tags:
      - Clio Payments Payments
  /communications.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Communications"
      operationId: Communication#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          ActivityRate records with the matching property.
        explode: true
        in: query
        name: contact_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter Communication records to those that occur on the specified
          date (Expects an ISO-8601 date).
        explode: true
        in: query
        name: datequery
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: |
          Filter records to only those with the given external property(s) name set.

          e.g. `?external_property_name=Name`
        explode: true
        in: query
        name: external_property_namequery
        required: false
        schema:
          type: string
        style: form
      - description: |
          Filter records to only those with the given external property(s) value set. Requires external property name as well.

          e.g. `?external_property_name=Name&external_property_value=Value`
        explode: true
        in: query
        name: external_property_valuequery
        required: false
        schema:
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Communication records to those that do or do not have
          time entries.
        explode: true
        in: query
        name: having_time_entriesquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Communication records to those that occur on the specified
          date (Expects an ISO-8601 date-time).
        explode: true
        in: query
        name: received_atquery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter Communication records to those whose `date` is on or before
          the date provided (Expects an ISO-8601 date).
        explode: true
        in: query
        name: received_beforequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter Communication records to those whose `date` is on or after
          the date provided (Expects an ISO-8601 date).
        explode: true
        in: query
        name: received_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter Activity records to those of a specific type.
        explode: true
        in: query
        name: typequery
        required: false
        schema:
          enum:
          - TimeEntry
          - ExpenseEntry
          - HardCostEntry
          - SoftCostEntry
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: user_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Communications
      tags:
      - Communications
    post:
      description: Outlines the parameters and data fields used when creating a new
        Communication
      operationId: Communication#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_0134f99b'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new Communication
      tags:
      - Communications
  /communications/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single Communication"
      operationId: Communication#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single Communication
      tags:
      - Communications
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Communication"
      operationId: Communication#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Communication
      tags:
      - Communications
    patch:
      description: Outlines the parameters and data fields used when updating a single
        Communication
      operationId: Communication#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_b333c344'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single Communication
      tags:
      - Communications
  /contacts/{contact_id}/email_addresses.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all EmailAddresses"
      operationId: EmailAddress#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: ID of the Contact
        explode: false
        in: path
        name: contact_idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all EmailAddresses
      tags:
      - Email Addresses
  /contacts/{contact_id}/phone_numbers.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all PhoneNumbers"
      operationId: PhoneNumber#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: ID of the Contact
        explode: false
        in: path
        name: contact_idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all PhoneNumbers
      tags:
      - Phone Numbers
  /contacts.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Contacts"
      operationId: Contact#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Contact records to those that are clients.
        explode: true
        in: query
        name: client_onlyquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Contact records to those that are Clio Connect users.
        explode: true
        in: query
        name: clio_connect_onlyquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter Contact's custom_field_values to only include values for
          the given custom field unique identifiers.
        explode: true
        in: query
        name: custom_field_idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: |
          Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,
          if the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.
          The key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`
          If an operator is used for a type that does not support it, an `400 Bad Request` is returned.

          *Supported operators:*
          * `checkbox`, `contact`, `matter`, `picklist` : `=`

          e.g. `?custom_field_values[1]=42`

          * `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`

          e.g. `?custom_field_values[1]=>=105.4`

          * `email`, `text_area`, `text_line`, `url` : `=`

          e.g. `?custom_field_values[1]=url_encoded`

          *Multiple conditions for the same custom field:*

          If you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.
          e.g. `?custom_field_values[1]=[<=50, >=45]`
        explode: true
        in: query
        name: custom_field_valuesquery
        required: false
        schema:
          enum:
          - =
          - <
          - '>'
          - <=
          - '>='
          type: string
        style: form
      - description: Filter Contact records to those that have email addresses.
        explode: true
        in: query
        name: email_onlyquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Contact records to those who are not included in the given
          list of unique identifiers.
        explode: true
        in: query
        name: exclude_idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Contact records to those where the last name or company
          name start with the given initial.
        explode: true
        in: query
        name: initialquery
        required: false
        schema:
          enum:
          - A
          - B
          - C
          - D
          - E
          - F
          - G
          - H
          - I
          - J
          - K
          - L
          - M
          - "N"
          - O
          - P
          - Q
          - R
          - S
          - T
          - U
          - V
          - W
          - X
          - "Y"
          - Z
          type: string
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Contact records to those that currently have access to
          a given shared resource.
        explode: true
        in: query
        name: shared_resource_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those of a specific type.
        explode: true
        in: query
        name: typequery
        required: false
        schema:
          enum:
          - TimeEntry
          - ExpenseEntry
          - HardCostEntry
          - SoftCostEntry
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Contacts
      tags:
      - Contacts
    post:
      description: Outlines the parameters and data fields used when creating a new
        Contact
      operationId: Contact#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Contact's custom_field_values to only include values for
          the given custom field unique identifiers.
        explode: true
        in: query
        name: custom_field_idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_0bf7b5a8'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new Contact
      tags:
      - Contacts
  /contacts/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single Contact"
      operationId: Contact#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single Contact
      tags:
      - Contacts
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Contact"
      operationId: Contact#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Contact's custom_field_values to only include values for
          the given custom field unique identifiers.
        explode: true
        in: query
        name: custom_field_idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Contact
      tags:
      - Contacts
    patch:
      description: Outlines the parameters and data fields used when updating a single
        Contact
      operationId: Contact#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Contact's custom_field_values to only include values for
          the given custom field unique identifiers.
        explode: true
        in: query
        name: custom_field_idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_5c5b92e8'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single Contact
      tags:
      - Contacts
  /conversation_messages.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all ConversationMessages"
      operationId: ConversationMessage#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Conversation. Use the keyword
          `null` to match those without a ConversationMessage. The list will be filtered
          to include only the ConversationMessage records with the matching property.
        explode: true
        in: query
        name: conversation_idquery
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all ConversationMessages
      tags:
      - Conversation Messages
    post:
      description: Outlines the parameters and data fields used when creating a new
        ConversationMessage
      operationId: ConversationMessage#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_2f15b598'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new ConversationMessage
      tags:
      - Conversation Messages
  /conversation_messages/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single ConversationMessage"
      operationId: ConversationMessage#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single ConversationMessage
      tags:
      - Conversation Messages
  /conversations.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Conversations"
      operationId: Conversation#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter archived Conversation records.
        explode: true
        in: query
        name: archivedquery
        required: false
        schema:
          type: boolean
        style: form
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          ActivityRate records with the matching property.
        explode: true
        in: query
        name: contact_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter Communication records to those that occur on the specified
          date (Expects an ISO-8601 date).
        explode: true
        in: query
        name: datequery
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: |
          If set to true, filter Conversation records accessible to any groups of the user.
          Note that the user may not be member of the conversations.

          If set to false, filter Conversation records of which the user is a member.
        explode: true
        in: query
        name: for_userquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Conversation records to those which have been read.
        explode: true
        in: query
        name: read_statusquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Conversation records to those with or without associated
          time entries.
        explode: true
        in: query
        name: time_entriesquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Conversations
      tags:
      - Conversations
  /conversations/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Conversation"
      operationId: Conversation#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Conversation
      tags:
      - Conversations
    patch:
      description: Outlines the parameters and data fields used when updating a single
        Conversation
      operationId: Conversation#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_e72042bf'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single Conversation
      tags:
      - Conversations
  /court_rules/jurisdictions/{jurisdiction_id}/triggers.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all JurisdictionsToTriggers"
      operationId: JurisdictionsToTrigger#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter JurisdictionsToTrigger records to those which require
          addition requirements to be checked (usually specifying trigger time).
        explode: true
        in: query
        name: is_requirements_requiredquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter JurisdictionsToTrigger records to those which require
          a service type to be selected.
        explode: true
        in: query
        name: is_servedquery
        required: false
        schema:
          type: boolean
        style: form
      - description: The unique identifier for the Jurisdiction.
        explode: false
        in: path
        name: jurisdiction_idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all triggers
      tags:
      - Jurisdictions To Triggers
  /court_rules/jurisdictions/{jurisdiction_id}/triggers/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single JurisdictionsToTrigger"
      operationId: JurisdictionsToTrigger#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The unique identifier for the Jurisdiction.
        explode: false
        in: path
        name: jurisdiction_idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for the trigger
      tags:
      - Jurisdictions To Triggers
  /court_rules/jurisdictions.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Jurisdictions"
      operationId: Jurisdiction#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Jurisdiction records to those set up for this account.
        explode: true
        in: query
        name: for_current_accountquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all jurisdictions
      tags:
      - Jurisdictions
  /court_rules/jurisdictions/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Jurisdiction"
      operationId: Jurisdiction#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for the jurisdiction
      tags:
      - Jurisdictions
  /court_rules/matter_dockets/preview.json:
    get:
      description: Preview calendar dates for the docket
      operationId: MatterDocket#preview
      parameters:
      - description: The prefix that will be added to the beginning of all court rule
          event titles
        explode: true
        in: query
        name: event_prefixquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for a single Jurisdiction. The keyword
          `null` is not valid for this field. The list will be filtered to include
          only the MatterDocket records with the matching property.
        explode: true
        in: query
        name: jurisdictionidquery
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for a single ServiceType. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          MatterDocket records with the matching property.
        explode: true
        in: query
        name: service_typeidquery
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those whose `date` is on or after
          the date provided (Expects an ISO-8601 date).
        explode: true
        in: query
        name: start_datequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The time the MatterDocket should start. (Expects an ISO-8601
          timestamp).
        explode: true
        in: query
        name: start_timequery
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The unique identifier for a single JurisdictionsToTrigger. The
          keyword `null` is not valid for this field. The list will be filtered to
          include only the MatterDocket records with the matching property.
        explode: true
        in: query
        name: triggeridquery
        required: true
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "303":
          description: See Other
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Preview calendar dates for the docket
      tags:
      - Matter Dockets
  /court_rules/matter_dockets.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all MatterDockets"
      operationId: MatterDocket#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter MatterDocket records to those with Matters having a specific
          status.
        explode: true
        in: query
        name: matter_statusquery
        required: false
        schema:
          enum:
          - open
          - closed
          - pending
          type: string
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for a single ServiceType. Use the keyword
          `null` to match those without a MatterDocket. The list will be filtered
          to include only the MatterDocket records with the matching property.
        explode: true
        in: query
        name: service_type_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Filter Activity records to those that are draft, billed, unbilled\
          \ or non-billable."
        explode: true
        in: query
        name: statusquery
        required: false
        schema:
          enum:
          - billed
          - draft
          - unbilled
          - non_billable
          - billable
          - written_off
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all matter dockets
      tags:
      - Matter Dockets
    post:
      description: Outlines the parameters and data fields used when creating a new
        MatterDocket
      operationId: MatterDocket#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_a6fa4c2e'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Creates a matter docket
      tags:
      - Matter Dockets
  /court_rules/matter_dockets/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single MatterDocket"
      operationId: MatterDocket#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Deletes the requested matter docket
      tags:
      - Matter Dockets
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single MatterDocket"
      operationId: MatterDocket#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for the matter docket
      tags:
      - Matter Dockets
  /court_rules/service_types.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all ServiceTypes"
      operationId: ServiceType#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all service types
      tags:
      - Service Types
  /court_rules/service_types/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single ServiceType"
      operationId: ServiceType#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for the service type
      tags:
      - Service Types
  /credit_memos.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all CreditMemos"
      operationId: CreditMemo#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          ActivityRate records with the matching property.
        explode: true
        in: query
        name: contact_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all CreditMemos
      tags:
      - Credit Memos
  /credit_memos/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single CreditMemo"
      operationId: CreditMemo#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single CreditMemo
      tags:
      - Credit Memos
  /currencies.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Currencies"
      operationId: Currency#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Currencies
      tags:
      - Currencies
  /custom_fields.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all CustomFields"
      operationId: CustomField#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter CustomField records to those that have been deleted for
          future use.
        explode: true
        in: query
        name: deletedquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Field type of this custom field
        explode: true
        in: query
        name: field_typequery
        required: false
        schema:
          enum:
          - checkbox
          - contact
          - currency
          - date
          - time
          - email
          - matter
          - numeric
          - picklist
          - text_area
          - text_line
          - url
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Allocation records based on whether the parent is a CreditMemo
          or a Payment.
        explode: true
        in: query
        name: parent_typequery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter CustomField records to those that are visible and required.
        explode: true
        in: query
        name: visible_and_requiredquery
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all CustomFields
      tags:
      - Custom Fields
    post:
      description: Outlines the parameters and data fields used when creating a new
        CustomField
      operationId: CustomField#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_c376b00e'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new CustomField
      tags:
      - Custom Fields
  /custom_fields/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single CustomField"
      operationId: CustomField#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single CustomField
      tags:
      - Custom Fields
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single CustomField"
      operationId: CustomField#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single CustomField
      tags:
      - Custom Fields
    patch:
      description: Outlines the parameters and data fields used when updating a single
        CustomField
      operationId: CustomField#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_13f58d8b'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single CustomField
      tags:
      - Custom Fields
  /custom_field_sets.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all CustomFieldSets"
      operationId: CustomFieldSet#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter CustomFieldSet records to those that should be displayed
          by default.
        explode: true
        in: query
        name: displayedquery
        required: false
        schema:
          type: boolean
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Allocation records based on whether the parent is a CreditMemo
          or a Payment.
        explode: true
        in: query
        name: parent_typequery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all CustomFieldSets
      tags:
      - Custom Field Sets
    post:
      description: Outlines the parameters and data fields used when creating a new
        CustomFieldSet
      operationId: CustomFieldSet#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_05b95628'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new CustomFieldSet
      tags:
      - Custom Field Sets
  /custom_field_sets/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single CustomFieldSet"
      operationId: CustomFieldSet#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single CustomFieldSet
      tags:
      - Custom Field Sets
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single CustomFieldSet"
      operationId: CustomFieldSet#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single CustomFieldSet
      tags:
      - Custom Field Sets
    patch:
      description: Outlines the parameters and data fields used when updating a single
        CustomFieldSet
      operationId: CustomFieldSet#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_034f41d8'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single CustomFieldSet
      tags:
      - Custom Field Sets
  /custom_actions.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all CustomActions"
      operationId: CustomAction#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all CustomActions
      tags:
      - Custom Actions
    post:
      description: Outlines the parameters and data fields used when creating a new
        CustomAction
      operationId: CustomAction#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_5336cef6'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new CustomAction
      tags:
      - Custom Actions
  /custom_actions/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single CustomAction"
      operationId: CustomAction#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single CustomAction
      tags:
      - Custom Actions
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single CustomAction"
      operationId: CustomAction#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single CustomAction
      tags:
      - Custom Actions
    patch:
      description: Outlines the parameters and data fields used when updating a single
        CustomAction
      operationId: CustomAction#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_6390f7e3'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single CustomAction
      tags:
      - Custom Actions
  /damages.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Damages"
      operationId: Damage#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Damages
      tags:
      - Damages
    post:
      description: Outlines the parameters and data fields used when creating a new
        Damage
      operationId: Damage#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_23c25a8a'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Creating a Damage
      tags:
      - Damages
  /damages/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single Damage"
      operationId: Damage#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Deleting a Damage
      tags:
      - Damages
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Damage"
      operationId: Damage#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return a specific Damage
      tags:
      - Damages
    patch:
      description: Outlines the parameters and data fields used when updating a single
        Damage
      operationId: Damage#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_f6d7ceca'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Updating a Damage
      tags:
      - Damages
  /expense_categories.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all ExpenseCategories"
      operationId: ExpenseCategory#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter ExpenseCategory records to those that match the given
          type.
        explode: true
        in: query
        name: entry_typequery
        required: false
        schema:
          enum:
          - hard_cost
          - soft_cost
          - unassociated
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all ExpenseCategories
      tags:
      - Expense Categories
    post:
      description: Outlines the parameters and data fields used when creating a new
        ExpenseCategory
      operationId: ExpenseCategory#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_d3eff9f3'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new ExpenseCategory
      tags:
      - Expense Categories
  /expense_categories/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single ExpenseCategory"
      operationId: ExpenseCategory#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single ExpenseCategory
      tags:
      - Expense Categories
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single ExpenseCategory"
      operationId: ExpenseCategory#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single ExpenseCategory
      tags:
      - Expense Categories
    patch:
      description: Outlines the parameters and data fields used when updating a single
        ExpenseCategory
      operationId: ExpenseCategory#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_69b1c29e'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single ExpenseCategory
      tags:
      - Expense Categories
  /grants.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Grants"
      operationId: Grant#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter Grant records to those that match the given name.
        explode: true
        in: query
        name: namequery
        required: false
        schema:
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all grants
      tags:
      - Grants
    post:
      description: Outlines the parameters and data fields used when creating a new
        Grant
      operationId: Grant#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_3397ac5d'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new grant
      tags:
      - Grants
  /grants/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single Grant"
      operationId: Grant#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Deletes a single grant
      tags:
      - Grants
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Grant"
      operationId: Grant#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single grant
      tags:
      - Grants
    patch:
      description: Outlines the parameters and data fields used when updating a single
        Grant
      operationId: Grant#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_3397ac5d'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single grant
      tags:
      - Grants
  /grant_funding_sources.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all GrantFundingSources"
      operationId: GrantFundingSource#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter Grant records to those that match the given name.
        explode: true
        in: query
        name: namequery
        required: false
        schema:
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all grant funding sources
      tags:
      - Grant Funding Sources
    post:
      description: Outlines the parameters and data fields used when creating a new
        GrantFundingSource
      operationId: GrantFundingSource#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_358e826e'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new grant funding source
      tags:
      - Grant Funding Sources
  /grant_funding_sources/{id}.json:
    delete:
      description: Outlines the parameters and data fields used when updating a single
        GrantFundingSource
      operationId: GrantFundingSource#destroy
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_358e826e'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Delete a single grant funding source
      tags:
      - Grant Funding Sources
    patch:
      description: Outlines the parameters and data fields used when updating a single
        GrantFundingSource
      operationId: GrantFundingSource#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_358e826e'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single grant funding source
      tags:
      - Grant Funding Sources
  /groups.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Groups"
      operationId: Group#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter archived Conversation records.
        explode: true
        in: query
        name: archivedquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter Grant records to those that match the given name.
        explode: true
        in: query
        name: namequery
        required: false
        schema:
          type: string
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those of a specific type.
        explode: true
        in: query
        name: typequery
        required: false
        schema:
          enum:
          - TimeEntry
          - ExpenseEntry
          - HardCostEntry
          - SoftCostEntry
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: user_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Groups
      tags:
      - Groups
    post:
      description: Outlines the parameters and data fields used when creating a new
        Group
      operationId: Group#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_ff08e65d'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new Group
      tags:
      - Groups
  /groups/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single Group"
      operationId: Group#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single Group
      tags:
      - Groups
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Group"
      operationId: Group#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Group
      tags:
      - Groups
    patch:
      description: Outlines the parameters and data fields used when updating a single
        Group
      operationId: Group#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_ff08e65d'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single Group
      tags:
      - Groups
  /internal_notifications/event_metrics.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ Event Metrics"
      operationId: EventMetrics#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Unread in-app notification events
      tags:
      - Event Metrics
  /internal_notifications/my_events.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all MyEvents"
      operationId: MyEvent#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all of my in-app notification events
      tags:
      - My Events
  /internal_notifications/my_events/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single MyEvent"
      operationId: MyEvent#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Clear (delete) a single in-app notification event
      tags:
      - My Events
    patch:
      description: Outlines the parameters and data fields used when updating a single
        MyEvent
      operationId: MyEvent#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_de346764'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Mark a single in-app notification event as read/unread
      tags:
      - My Events
  /interest_charges.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all InterestCharges"
      operationId: InterestCharge#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Bill. The keyword `null` is
          not valid for this field. The list will be filtered to include only the
          Allocation records with the matching property.
        explode: true
        in: query
        name: bill_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter Contact records to those who are not included in the given
          list of unique identifiers.
        explode: true
        in: query
        name: exclude_idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all InterestCharges
      tags:
      - Interest Charges
  /interest_charges/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single InterestCharge"
      operationId: InterestCharge#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single InterestCharge
      tags:
      - Interest Charges
  /line_items.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all LineItems"
      operationId: LineItem#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Activity. Use the keyword
          `null` to match those without a LineItem. The list will be filtered to include
          only the LineItem records with the matching property.
        explode: true
        in: query
        name: activity_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for a single Bill. The keyword `null` is
          not valid for this field. The list will be filtered to include only the
          Allocation records with the matching property.
        explode: true
        in: query
        name: bill_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Set this flag to true to return only LineItems displayed on the
          bill.
        explode: true
        in: query
        name: displayquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Contact records to those who are not included in the given
          list of unique identifiers.
        explode: true
        in: query
        name: exclude_idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filters LineItem records to match given group ordering.
        explode: true
        in: query
        name: group_orderingquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The kind of LineItem.
        explode: true
        in: query
        name: kindquery
        required: false
        schema:
          type: string
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all LineItems
      tags:
      - Line Items
  /line_items/{id}.json:
    delete:
      description: A LineItem can not be deleted if it's Bill is not editable
      operationId: LineItem#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single LineItem
      tags:
      - Line Items
    patch:
      description: Outlines the parameters and data fields used when updating a single
        LineItem
      operationId: LineItem#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_f3eba5b6'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single LineItem
      tags:
      - Line Items
  /log_entries.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all LogEntries"
      operationId: LogEntry#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all LogEntries
      tags:
      - Log Entries
  /matters/{matter_id}/client.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Client"
      operationId: Client#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filters Client data by matter.
        explode: false
        in: path
        name: matter_idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the client data for a single matter
      tags:
      - Clients
  /matters/{matter_id}/related_contacts.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all RelatedContacts"
      operationId: RelatedContacts#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters Client data by matter.
        explode: false
        in: path
        name: matter_idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the related contact data for a single matter
      tags:
      - Related Contacts
  /matters/{matter_id}/contacts.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all MatterContacts"
      operationId: MatterContacts#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Contact's custom_field_values to only include values for
          the given custom field unique identifiers.
        explode: true
        in: query
        name: custom_field_idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters Client data by matter.
        explode: false
        in: path
        name: matter_idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the related contact data for a single matter
      tags:
      - Matter Contacts
  /matters.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Matters"
      operationId: Matter#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Matter records to those which are billable.
        explode: true
        in: query
        name: billablequery
        required: false
        schema:
          type: boolean
        style: form
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          BankTransaction records with the matching property.
        explode: true
        in: query
        name: client_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: |
          Filter Matter records by the close date. The date should be provided in the format YYYY-MM-DD.

          e.g. `?close_date==2020-01-01`, `?close_date=<=2021-12-31`

          You can provide more than one value to narrow the results of this filter. You can do so by passing several individual values and appending `[]` to the parameter name.

          e.g. `?close_date[]=>=2020-01-01&close_date[]=<=2021-12-31`

          Note that, when providing multiple values for this filter, only Matter records that meet *all* filter conditions will be returned.
        explode: true
        in: query
        name: close_datequery
        required: false
        schema:
          enum:
          - '>DATE'
          - '>=DATE'
          - =DATE
          - <=DATE
          - <DATE
          type: string
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter Contact's custom_field_values to only include values for
          the given custom field unique identifiers.
        explode: true
        in: query
        name: custom_field_idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: |
          Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,
          if the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.
          The key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`
          If an operator is used for a type that does not support it, an `400 Bad Request` is returned.

          *Supported operators:*
          * `checkbox`, `contact`, `matter`, `picklist` : `=`

          e.g. `?custom_field_values[1]=42`

          * `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`

          e.g. `?custom_field_values[1]=>=105.4`

          * `email`, `text_area`, `text_line`, `url` : `=`

          e.g. `?custom_field_values[1]=url_encoded`

          *Multiple conditions for the same custom field:*

          If you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.
          e.g. `?custom_field_values[1]=[<=50, >=45]`
        explode: true
        in: query
        name: custom_field_valuesquery
        required: false
        schema:
          enum:
          - =
          - <
          - '>'
          - <=
          - '>='
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for a single Grant. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: grant_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for a single Group. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          Matter records with the matching property.
        explode: true
        in: query
        name: group_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single NotificationEventSubscriber.
          Use the keyword `null` to match those without a Matter. The list will be
          filtered to include only the Matter records with the matching property.
        explode: true
        in: query
        name: notification_event_subscriber_user_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: |
          Filter Matter records by the open date. The date should be provided in the format YYYY-MM-DD.

          e.g. `?open_date==2020-01-01`, `?open_date=<=2021-12-31`

          You can provide more than one value to narrow the results of this filter. You can do so by passing several individual values and appending `[]` to the parameter name.

          e.g. `?open_date[]=>=2020-01-01&open_date[]=<=2021-12-31`

          Note that, when providing multiple values for this filter, only Matter records that meet *all* filter conditions will be returned.
        explode: true
        in: query
        name: open_datequery
        required: false
        schema:
          enum:
          - '>DATE'
          - '>=DATE'
          - =DATE
          - <=DATE
          - <DATE
          type: string
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a BillableClient. The list will be filtered to include
          only the BillableClient records with the matching property.
        explode: true
        in: query
        name: originating_attorney_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: |
          Filter Matter records by the pending date. The date should be provided in the format YYYY-MM-DD.

          e.g. `?pending_date==2020-01-01`, `?pending_date=<=2021-12-31`

          You can provide more than one value to narrow the results of this filter. You can do so by passing several individual values and appending `[]` to the parameter name.

          e.g. `?pending_date[]=>=2020-01-01&pending_date[]=<=2021-12-31`

          Note that, when providing multiple values for this filter, only Matter records that meet *all* filter conditions will be returned.
        explode: true
        in: query
        name: pending_datequery
        required: false
        schema:
          enum:
          - '>DATE'
          - '>=DATE'
          - =DATE
          - <=DATE
          - <DATE
          type: string
        style: form
      - description: The unique identifier for a single PracticeArea. The keyword
          `null` is not valid for this field. The list will be filtered to include
          only the Matter records with the matching property.
        explode: true
        in: query
        name: practice_area_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a BillableClient. The list will be filtered to include
          only the BillableClient records with the matching property.
        explode: true
        in: query
        name: responsible_attorney_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a Matter. The list will be filtered to include only
          the Matter records with the matching property.
        explode: true
        in: query
        name: responsible_staff_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Filter Activity records to those that are draft, billed, unbilled\
          \ or non-billable."
        explode: true
        in: query
        name: statusquery
        required: false
        schema:
          enum:
          - billed
          - draft
          - unbilled
          - non_billable
          - billable
          - written_off
          type: string
        style: form
      - description: The unique identifier for a single NotificationEventSubscriber.
          Use the keyword `null` to match those without a Matter. The list will be
          filtered to include only the Matter records with the matching property.
        explode: true
        in: query
        name: subscriber_user_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Matters
      tags:
      - Matters
    post:
      description: Outlines the parameters and data fields used when creating a new
        Matter
      operationId: Matter#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Contact's custom_field_values to only include values for
          the given custom field unique identifiers.
        explode: true
        in: query
        name: custom_field_idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_c32b5dbd'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new Matter
      tags:
      - Matters
  /matters/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single Matter"
      operationId: Matter#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single Matter
      tags:
      - Matters
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Matter"
      operationId: Matter#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Contact's custom_field_values to only include values for
          the given custom field unique identifiers.
        explode: true
        in: query
        name: custom_field_idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Matter
      tags:
      - Matters
    patch:
      description: Outlines the parameters and data fields used when updating a single
        Matter
      operationId: Matter#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Contact's custom_field_values to only include values for
          the given custom field unique identifiers.
        explode: true
        in: query
        name: custom_field_idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_fff169d6'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single Matter
      tags:
      - Matters
  /matter_stages.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all MatterStages"
      operationId: MatterStage#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for a single PracticeArea. The keyword
          `null` is not valid for this field. The list will be filtered to include
          only the Matter records with the matching property.
        explode: true
        in: query
        name: practice_area_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all MatterStages
      tags:
      - Matter Stages
  /medical_records/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single MedicalRecord"
      operationId: MedicalRecord#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Destroying a Medical Record
      tags:
      - Medical Records
    patch:
      description: Outlines the parameters and data fields used when updating a single
        MedicalRecord
      operationId: MedicalRecord#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_7cea7d9c'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Updating a Medical Record
      tags:
      - Medical Records
  /medical_records_details.json:
    get:
      description: |
        Outlines the parameters, optional and required, used when requesting the data for all Medical Records Details
      operationId: MedicalRecordsRequest#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filters Medical Records data by treatment end date.
        explode: true
        in: query
        name: treatment_end_datequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filters Medical Records data by treatment start date.
        explode: true
        in: query
        name: treatment_start_datequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Medical Records Details
      tags:
      - Medical Records Details
    post:
      description: |
        This endpoint allows a creation of a Medical Records Detail, multiple Medical Records and Medical Bills.
        Medical Liens can also be created as a property under Medical Bills.

        Reference the payload to see how the records are being passed in.
      operationId: MedicalRecordsRequest#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_8040db7b'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: "Creating a Medical Records Detail, Medical Records and Medical Bills"
      tags:
      - Medical Records Details
  /medical_records_details/{id}.json:
    delete:
      description: |
        When a Medical Records Detail is destroyed, the child records, such as Medical Records, Medical Bills and Liens
        will also be destroyed in the same transaction.
      operationId: MedicalRecordsRequest#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Destroying a Medical Records Detail
      tags:
      - Medical Records Details
    get:
      description: |
        Outlines the parameters, optional and required, used when requesting the data for a single Medical Records Details
      operationId: MedicalRecordsRequest#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Medical Records Detail
      tags:
      - Medical Records Details
    patch:
      description: |
        If there are records being passed into the Medical Records or Medical Bills parameter they will be treated
        as new records and new Medical Records / Medical Bills will be created.
      operationId: MedicalRecordsRequest#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_a9281122'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Updating a Medical Records Detail
      tags:
      - Medical Records Details
  /medical_bills/{id}.json:
    delete:
      description: |
        Outlines the parameters, optional and required, used when deleting the record for a single Medical Bill
      operationId: MedicalBill#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Destroying a Medical Bill
      tags:
      - Medical Bills
    patch:
      description: |
        Outlines the parameters and data fields used when updating a single Medical Bill
      operationId: MedicalBill#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_fc585a39'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Updating a Medical Bill
      tags:
      - Medical Bills
  /notes.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Notes"
      operationId: Note#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          ActivityRate records with the matching property.
        explode: true
        in: query
        name: contact_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Note records to those with or without associated time
          entries.
        explode: true
        in: query
        name: has_time_entriesquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those of a specific type.
        explode: true
        in: query
        name: typequery
        required: false
        schema:
          enum:
          - TimeEntry
          - ExpenseEntry
          - HardCostEntry
          - SoftCostEntry
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Notes
      tags:
      - Notes
    post:
      description: Outlines the parameters and data fields used when creating a new
        Note
      operationId: Note#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_8bb4dd3a'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new Note
      tags:
      - Notes
  /notes/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single Note"
      operationId: Note#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single Note
      tags:
      - Notes
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Note"
      operationId: Note#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Note
      tags:
      - Notes
    patch:
      description: Outlines the parameters and data fields used when updating a single
        Note
      operationId: Note#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_d4ea1092'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single Note
      tags:
      - Notes
  /outstanding_client_balances.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all OutstandingClientBalances"
      operationId: OutstandingClientBalance#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          ActivityRate records with the matching property.
        explode: true
        in: query
        name: contact_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter OutstandingClientBalance records for those whose bills
          have been paid before the specified date
        explode: true
        in: query
        name: last_paid_end_datequery
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filter OutstandingClientBalance records for those whose bills
          have been paid after the specified date
        explode: true
        in: query
        name: last_paid_start_datequery
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter OutstandingClientBalance records for the contact's newest
          bill due date before the specified date
        explode: true
        in: query
        name: newest_bill_due_end_datequery
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filter OutstandingClientBalance records for the contact's newest
          bill due date after the specified date
        explode: true
        in: query
        name: newest_bill_due_start_datequery
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a BillableClient. The list will be filtered to include
          only the BillableClient records with the matching property.
        explode: true
        in: query
        name: originating_attorney_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a BillableClient. The list will be filtered to include
          only the BillableClient records with the matching property.
        explode: true
        in: query
        name: responsible_attorney_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all OutstandingClientBalances
      tags:
      - Outstanding Client Balances
  /practice_areas.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all PracticeAreas"
      operationId: PracticeArea#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter PracticeArea records to those that match the given code.
        explode: true
        in: query
        name: codequery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Grant records to those that match the given name.
        explode: true
        in: query
        name: namequery
        required: false
        schema:
          type: string
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all PracticeAreas
      tags:
      - Practice Areas
    post:
      description: Outlines the parameters and data fields used when creating a new
        PracticeArea
      operationId: PracticeArea#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_ec7d53fc'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new PracticeArea
      tags:
      - Practice Areas
  /practice_areas/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single PracticeArea"
      operationId: PracticeArea#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single PracticeArea
      tags:
      - Practice Areas
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single PracticeArea"
      operationId: PracticeArea#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single PracticeArea
      tags:
      - Practice Areas
    patch:
      description: Outlines the parameters and data fields used when updating a single
        PracticeArea
      operationId: PracticeArea#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_c560cdf7'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single PracticeArea
      tags:
      - Practice Areas
  /relationships.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Relationships"
      operationId: Relationship#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          ActivityRate records with the matching property.
        explode: true
        in: query
        name: contact_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Relationships
      tags:
      - Relationships
    post:
      description: Outlines the parameters and data fields used when creating a new
        Relationship
      operationId: Relationship#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_79aa19a8'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new Relationship
      tags:
      - Relationships
  /relationships/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single Relationship"
      operationId: Relationship#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single Relationship
      tags:
      - Relationships
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Relationship"
      operationId: Relationship#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Relationship
      tags:
      - Relationships
    patch:
      description: Outlines the parameters and data fields used when updating a single
        Relationship
      operationId: Relationship#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_79aa19a8'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single Relationship
      tags:
      - Relationships
  /reminders.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Reminders"
      operationId: Reminder#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single NotificationMethod. The keyword
          `null` is not valid for this field. The list will be filtered to include
          only the Reminder records with the matching property.
        explode: true
        in: query
        name: notification_method_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Bill records to those in a given state.
        explode: true
        in: query
        name: statequery
        required: false
        schema:
          enum:
          - draft
          - awaiting_approval
          - awaiting_payment
          - paid
          - void
          - deleted
          type: string
        style: form
      - description: The unique identifier for a single CalendarEntry or Task. The
          keyword `null` is not valid for this field. The list will be filtered to
          include only the Reminder records with the matching property.
        explode: true
        in: query
        name: subject_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Filter Reminder records to those of a given subject type, required\
          \ if using subject_id."
        explode: true
        in: query
        name: subject_typequery
        required: false
        schema:
          enum:
          - calendar_entry
          - task
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: user_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Reminders
      tags:
      - Reminders
    post:
      description: Outlines the parameters and data fields used when creating a new
        Reminder
      operationId: Reminder#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_2810dbc2'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new Reminder
      tags:
      - Reminders
  /reminders/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single Reminder"
      operationId: Reminder#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single Reminder
      tags:
      - Reminders
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Reminder"
      operationId: Reminder#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Reminder
      tags:
      - Reminders
    patch:
      description: Outlines the parameters and data fields used when updating a single
        Reminder
      operationId: Reminder#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_c206095a'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single Reminder
      tags:
      - Reminders
  /reports/{id}/download.json:
    get:
      description: Download the completed Report
      operationId: Report#download
      parameters:
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "303":
          description: See Other
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Download the completed Report
      tags:
      - Reports
  /reports.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Reports"
      operationId: Report#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filters Report data by category.
        explode: true
        in: query
        name: categoryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filters Report data by date. (Expects an ISO-8601 date).
        explode: true
        in: query
        name: created_beforequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The kind of LineItem.
        explode: true
        in: query
        name: kindquery
        required: false
        schema:
          type: string
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters Report data by format.
        explode: true
        in: query
        name: output_formatquery
        required: false
        schema:
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: "Filter CalendarEntry records to those having a specific calendar\
          \ visibility source (mobile, web)."
        explode: true
        in: query
        name: sourcequery
        required: false
        schema:
          enum:
          - web
          - mobile
          type: string
        style: form
      - description: Filter Bill records to those in a given state.
        explode: true
        in: query
        name: statequery
        required: false
        schema:
          enum:
          - draft
          - awaiting_approval
          - awaiting_payment
          - paid
          - void
          - deleted
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Reports
      tags:
      - Reports
    post:
      description: Outlines the parameters and data fields used when creating a new
        Report
      operationId: Report#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_f9783b84'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new Report
      tags:
      - Reports
  /reports/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Report"
      operationId: Report#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Report
      tags:
      - Reports
  /report_presets/{id}/generate_report.json:
    post:
      description: Generate a new report for a given preset
      operationId: ReportPreset#generate_report
      parameters:
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Generate a new report for a given preset
      tags:
      - Report Presets
  /report_presets.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all ReportPresets"
      operationId: ReportPreset#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filters Report data by category.
        explode: true
        in: query
        name: categoryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filters ReportPreset records to those that have or do not have
          a Report Schedule.
        explode: true
        in: query
        name: has_schedulequery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: Filters Report data by format.
        explode: true
        in: query
        name: output_formatquery
        required: false
        schema:
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filters ReportPreset records to those that have a Report Schedule
          of the specified frequency.
        explode: true
        in: query
        name: schedule_frequencyquery
        required: false
        schema:
          enum:
          - daily
          - weekly
          - monthly
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all ReportPresets
      tags:
      - Report Presets
    post:
      description: Outlines the parameters and data fields used when creating a new
        ReportPreset
      operationId: ReportPreset#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_def72e83'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new ReportPreset
      tags:
      - Report Presets
  /report_presets/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single ReportPreset"
      operationId: ReportPreset#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single ReportPreset
      tags:
      - Report Presets
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single ReportPreset"
      operationId: ReportPreset#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single ReportPreset
      tags:
      - Report Presets
    patch:
      description: Outlines the parameters and data fields used when updating a single
        ReportPreset
      operationId: ReportPreset#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_526f89b3'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single ReportPreset
      tags:
      - Report Presets
  /report_schedules.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all ReportSchedules"
      operationId: ReportSchedule#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all ReportSchedules
      tags:
      - Report Schedules
    post:
      description: Outlines the parameters and data fields used when creating a new
        ReportSchedule
      operationId: ReportSchedule#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_77aeef69'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new ReportSchedule
      tags:
      - Report Schedules
  /report_schedules/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single ReportSchedule"
      operationId: ReportSchedule#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single ReportSchedule
      tags:
      - Report Schedules
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single ReportSchedule"
      operationId: ReportSchedule#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single ReportSchedule
      tags:
      - Report Schedules
    patch:
      description: Outlines the parameters and data fields used when updating a single
        ReportSchedule
      operationId: ReportSchedule#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_04ab9841'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single ReportSchedule
      tags:
      - Report Schedules
  /settings/billing.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single BillingSetting"
      operationId: BillingSetting#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "Duration string for time rounding, conforming to the Chronic\
          \ date parser. For example: '3h' or '2:15'."
        explode: true
        in: query
        name: durationquery
        required: false
        schema:
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the billing settings
      tags:
      - Billing Settings
  /settings/text_snippets.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all TextSnippets"
      operationId: TextSnippet#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return all text snippets
      tags:
      - Text Snippets
    post:
      description: Outlines the parameters and data fields used when creating a new
        TextSnippet
      operationId: TextSnippet#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_5ba486b3'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a text snippet
      tags:
      - Text Snippets
  /settings/text_snippets/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single TextSnippet"
      operationId: TextSnippet#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Destroy a text snippet
      tags:
      - Text Snippets
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single TextSnippet"
      operationId: TextSnippet#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for the text snippet
      tags:
      - Text Snippets
    patch:
      description: Outlines the parameters and data fields used when updating a single
        TextSnippet
      operationId: TextSnippet#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_754c4640'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a text snippet
      tags:
      - Text Snippets
  /tasks.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Tasks"
      operationId: Task#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single User or Contact. Use the keyword
          `null` to match those without a Task. The list will be filtered to include
          only the Task records with the matching property.
        explode: true
        in: query
        name: assignee_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Task records to those with a specific assignee. Must be
          passed if filtering by assignee.
        explode: true
        in: query
        name: assignee_typequery
        required: false
        schema:
          enum:
          - user
          - contact
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a Task. The list will be filtered to include only
          the Task records with the matching property.
        explode: true
        in: query
        name: assigner_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Task records to those with a parent task that has the
          specified ID.
        explode: true
        in: query
        name: cascading_source_idquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          BankTransaction records with the matching property.
        explode: true
        in: query
        name: client_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Task records to those which are complete or not.
        explode: true
        in: query
        name: completequery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Start of date range when querying by due_at in a range. (Expects
          an ISO-8601 date).
        explode: true
        in: query
        name: due_at_fromquery
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: "Filter Task records to those that have a due date specified,\
          \ or not."
        explode: true
        in: query
        name: due_at_presentquery
        required: false
        schema:
          type: boolean
        style: form
      - description: End of date range when querying by due_at in a range. (Expects
          an ISO-8601 date).
        explode: true
        in: query
        name: due_at_toquery
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Task records to those with the given permission. Returns
          all tasks by default.
        explode: true
        in: query
        name: permissionquery
        required: false
        schema:
          enum:
          - private
          - public
          type: string
        style: form
      - description: Filter Task records to those with the given priority.
        explode: true
        in: query
        name: priorityquery
        required: false
        schema:
          enum:
          - high
          - normal
          - low
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for a single User. Use the keyword `null`
          to match those without a BillableClient. The list will be filtered to include
          only the BillableClient records with the matching property.
        explode: true
        in: query
        name: responsible_attorney_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Filter Activity records to those that are draft, billed, unbilled\
          \ or non-billable."
        explode: true
        in: query
        name: statusquery
        required: false
        schema:
          enum:
          - billed
          - draft
          - unbilled
          - non_billable
          - billable
          - written_off
          type: string
        style: form
      - description: Filter Task records to those with the given statuses. Users without
          advanced tasks enabled may only specify 'complete' or 'pending'.
        explode: true
        in: query
        name: statusesquery
        required: false
        schema:
          enum:
          - pending
          - in_progress
          - in_review
          - complete
          type: string
        style: form
      - description: Filter Task records to those which are a statute of limitations
          or not.
        explode: true
        in: query
        name: statute_of_limitationsquery
        required: false
        schema:
          type: boolean
        style: form
      - description: The unique identifier for a single TaskType. Use the keyword
          `null` to match those without a Task. The list will be filtered to include
          only the Task records with the matching property.
        explode: true
        in: query
        name: task_type_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Filter Task records to those that have associated time entries,\
          \ or not."
        explode: true
        in: query
        name: time_entries_presentquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Tasks
      tags:
      - Tasks
    post:
      description: Outlines the parameters and data fields used when creating a new
        Task
      operationId: Task#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_adce5636'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new Task
      tags:
      - Tasks
  /tasks/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single Task"
      operationId: Task#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single Task
      tags:
      - Tasks
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Task"
      operationId: Task#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Task
      tags:
      - Tasks
    patch:
      description: Outlines the parameters and data fields used when updating a single
        Task
      operationId: Task#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_0ccdf5a3'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single Task
      tags:
      - Tasks
  /task_calendars.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all CalendarVisibilities"
      operationId: CalendarVisibility#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all CalendarVisibilities
      tags:
      - Calendar Visibilities
  /task_calendars/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single CalendarVisibility"
      operationId: CalendarVisibility#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single CalendarVisibility
      tags:
      - Calendar Visibilities
    patch:
      description: Outlines the parameters and data fields used when updating a single
        CalendarVisibility
      operationId: CalendarVisibility#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_f2f66685'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single CalendarVisibility
      tags:
      - Calendar Visibilities
  /task_templates.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all TaskTemplates"
      operationId: TaskTemplate#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Task records to those with the given priority.
        explode: true
        in: query
        name: priorityquery
        required: false
        schema:
          enum:
          - high
          - normal
          - low
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for a single TaskTemplateList. The keyword
          `null` is not valid for this field. The list will be filtered to include
          only the TaskTemplate records with the matching property.
        explode: true
        in: query
        name: task_template_list_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all TaskTemplates
      tags:
      - Task Templates
    post:
      description: Outlines the parameters and data fields used when creating a new
        TaskTemplate
      operationId: TaskTemplate#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_68572615'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new TaskTemplate
      tags:
      - Task Templates
  /task_templates/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single TaskTemplate"
      operationId: TaskTemplate#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single TaskTemplate
      tags:
      - Task Templates
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single TaskTemplate"
      operationId: TaskTemplate#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single TaskTemplate
      tags:
      - Task Templates
    patch:
      description: Outlines the parameters and data fields used when updating a single
        TaskTemplate
      operationId: TaskTemplate#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_e147642d'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single TaskTemplate
      tags:
      - Task Templates
  /task_template_lists/{id}/copy.json:
    post:
      description: |
        Creates a copy of the TaskTemplateList identified by the `id` path parameter.
      operationId: TaskTemplateList#copy
      parameters:
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_914a4d29'
      responses:
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
      summary: Copy a TaskTemplateList
      tags:
      - Task Template Lists
  /task_template_lists.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all TaskTemplateLists"
      operationId: TaskTemplateList#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter TaskTemplateList records to those that either contain
          at least one task template or contain none.
        explode: true
        in: query
        name: emptyquery
        required: false
        schema:
          type: boolean
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for a single PracticeArea. The keyword
          `null` is not valid for this field. The list will be filtered to include
          only the Matter records with the matching property.
        explode: true
        in: query
        name: practice_area_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all TaskTemplateLists
      tags:
      - Task Template Lists
    post:
      description: Outlines the parameters and data fields used when creating a new
        TaskTemplateList
      operationId: TaskTemplateList#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_d088f835'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new TaskTemplateList
      tags:
      - Task Template Lists
  /task_template_lists/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single TaskTemplateList"
      operationId: TaskTemplateList#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single TaskTemplateList
      tags:
      - Task Template Lists
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single TaskTemplateList"
      operationId: TaskTemplateList#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single TaskTemplateList
      tags:
      - Task Template Lists
    patch:
      description: Outlines the parameters and data fields used when updating a single
        TaskTemplateList
      operationId: TaskTemplateList#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_f12dac4a'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single TaskTemplateList
      tags:
      - Task Template Lists
  /task_types.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all TaskTypes"
      operationId: TaskType#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter TaskType records to those that are enabled or disabled.
        explode: true
        in: query
        name: enabledquery
        required: false
        schema:
          type: boolean
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter Grant records to those that match the given name.
        explode: true
        in: query
        name: namequery
        required: false
        schema:
          type: string
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all TaskTypes
      tags:
      - Task Types
    post:
      description: Outlines the parameters and data fields used when creating a new
        TaskType
      operationId: TaskType#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_66b4d523'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new TaskType
      tags:
      - Task Types
  /task_types/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single TaskType"
      operationId: TaskType#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single TaskType
      tags:
      - Task Types
    patch:
      description: Outlines the parameters and data fields used when updating a single
        TaskType
      operationId: TaskType#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_9bac5140'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single TaskType
      tags:
      - Task Types
  /timer.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single Timer"
      operationId: Timer#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single Timer
      tags:
      - Timers
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Timer"
      operationId: Timer#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Timer
      tags:
      - Timers
    post:
      description: Outlines the parameters and data fields used when creating a new
        Timer
      operationId: Timer#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_0b9caf19'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new Timer
      tags:
      - Timers
  /trust_line_items.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all TrustLineItems"
      operationId: TrustLineItem#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Bill. The keyword `null` is
          not valid for this field. The list will be filtered to include only the
          Allocation records with the matching property.
        explode: true
        in: query
        name: bill_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all TrustLineItems
      tags:
      - Trust Line Items
  /trust_line_items/{id}.json:
    patch:
      description: Outlines the parameters and data fields used when updating a single
        TrustLineItem
      operationId: TrustLineItem#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_18b3c0ae'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single TrustLineItem
      tags:
      - Trust Line Items
  /trust_requests.json:
    post:
      description: Outlines the parameters and data fields used when creating a new
        TrustRequest
      operationId: TrustRequest#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_8baacf99'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new TrustRequest
      tags:
      - Trust Requests
  /users/who_am_i.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single User"
      operationId: User#who_am_i
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for the current User
      tags:
      - Users
  /users.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Users"
      operationId: User#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter TaskType records to those that are enabled or disabled.
        explode: true
        in: query
        name: enabledquery
        required: false
        schema:
          type: boolean
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter User to include co-counsel users
        explode: true
        in: query
        name: include_co_counselquery
        required: false
        schema:
          type: boolean
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter Grant records to those that match the given name.
        explode: true
        in: query
        name: namequery
        required: false
        schema:
          type: string
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter User records based on whether or not they are still being
          setup.
        explode: true
        in: query
        name: pending_setupquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter User records to those with a specific role.
        explode: true
        in: query
        name: rolequery
        required: false
        schema:
          enum:
          - admin
          - accounts
          - billing
          - reports
          type: string
        style: form
      - description: Filter User records to those with a specific subscription type.
        explode: true
        in: query
        name: subscription_typequery
        required: false
        schema:
          enum:
          - attorney
          - nonattorney
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Users
      tags:
      - Users
  /users/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single User"
      operationId: User#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single User
      tags:
      - Users
  /utbms/sets.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all UtbmsSets"
      operationId: UtbmsSet#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all the utbms sets
      tags:
      - Utbms Sets
  /utbms/codes.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all UtbmsCodes"
      operationId: UtbmsCode#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those of a specific type.
        explode: true
        in: query
        name: typequery
        required: false
        schema:
          enum:
          - TimeEntry
          - ExpenseEntry
          - HardCostEntry
          - SoftCostEntry
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The unique identifier for a single UtbmsSet. Use the keyword
          `null` to match those without a UtbmsCode. The list will be filtered to
          include only the UtbmsCode records with the matching property.
        explode: true
        in: query
        name: utbms_set_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all UtbmsCodes
      tags:
      - Utbms Codes
  /utbms/codes/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single UtbmsCode"
      operationId: UtbmsCode#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single UtbmsCode
      tags:
      - Utbms Codes
  /webhooks.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Webhooks"
      operationId: Webhook#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Webhooks
      tags:
      - Webhooks
    post:
      description: Outlines the parameters and data fields used when creating a new
        Webhook
      operationId: Webhook#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_16cd47c2'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new Webhook
      tags:
      - Webhooks
  /webhooks/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single Webhook"
      operationId: Webhook#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single Webhook
      tags:
      - Webhooks
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Webhook"
      operationId: Webhook#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Webhook
      tags:
      - Webhooks
    patch:
      description: Outlines the parameters and data fields used when updating a single
        Webhook
      operationId: Webhook#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_97dfff73'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single Webhook
      tags:
      - Webhooks
  /lauk_civil_certificated_rates.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all LaukCivilCertificatedRates"
      operationId: LaukCivilCertificatedRate#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter by activity.
        explode: true
        in: query
        name: activityquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by activity sub-category.
        explode: true
        in: query
        name: activity_sub_categoryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by whether multiple hearings were attended for multiple
          clients.
        explode: true
        in: query
        name: attended_several_hearings_for_multiple_clientsquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter by category of law.
        explode: true
        in: query
        name: category_of_lawquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by change of solicitor status.
        explode: true
        in: query
        name: change_of_solicitorquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter by court.
        explode: true
        in: query
        name: courtquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by SQM eligibility.
        explode: true
        in: query
        name: eligible_for_sqmquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Fee scheme
        explode: true
        in: query
        name: fee_schemequery
        required: false
        schema:
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by first conducting solicitor status.
        explode: true
        in: query
        name: first_conducting_solicitorquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter by key.
        explode: true
        in: query
        name: keyquery
        required: false
        schema:
          type: string
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter by number of clients.
        explode: true
        in: query
        name: number_of_clientsquery
        required: false
        schema:
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by party.
        explode: true
        in: query
        name: partyquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by post-transfer clients represented.
        explode: true
        in: query
        name: post_transfer_clients_representedquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by rate type.
        explode: true
        in: query
        name: rate_typequery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by region.
        explode: true
        in: query
        name: regionquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by session type.
        explode: true
        in: query
        name: session_typequery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by user type.
        explode: true
        in: query
        name: user_typequery
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: List Civil Certificated Rates
      tags:
      - Civil Certificated Rates
  /lauk_civil_controlled_rates.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all LaukCivilControlledRates"
      operationId: LaukCivilControlledRate#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter by activity.
        explode: true
        in: query
        name: activityquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by category of law.
        explode: true
        in: query
        name: category_of_lawquery
        required: false
        schema:
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by key.
        explode: true
        in: query
        name: keyquery
        required: false
        schema:
          type: string
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter by matter type 1.
        explode: true
        in: query
        name: matter_type_1query
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter by matter type 2.
        explode: true
        in: query
        name: matter_type_2query
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by rate type.
        explode: true
        in: query
        name: rate_typequery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by region.
        explode: true
        in: query
        name: regionquery
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: List Civil Controlled Rates
      tags:
      - Civil Controlled Rates
  /lauk_criminal_controlled_rates.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all LaukCriminalControlledRates"
      operationId: LaukCriminalControlledRate#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter by activity.
        explode: true
        in: query
        name: activityquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by category of law.
        explode: true
        in: query
        name: category_of_lawquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by counsel.
        explode: true
        in: query
        name: counselquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by court.
        explode: true
        in: query
        name: courtquery
        required: false
        schema:
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by key.
        explode: true
        in: query
        name: keyquery
        required: false
        schema:
          type: string
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by rate type.
        explode: true
        in: query
        name: rate_typequery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by region.
        explode: true
        in: query
        name: regionquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by solicitor type.
        explode: true
        in: query
        name: solicitor_typequery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by standard fee category.
        explode: true
        in: query
        name: standard_fee_categoryquery
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: List Criminal Controlled Rates
      tags:
      - Criminal Controlled Rates
  /lauk_expense_categories.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all LaukExpenseCategories"
      operationId: LaukExpenseCategory#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by key.
        explode: true
        in: query
        name: keyquery
        required: false
        schema:
          type: string
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter Grant records to those that match the given name.
        explode: true
        in: query
        name: namequery
        required: false
        schema:
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by expense practice area.
        explode: true
        in: query
        name: practice_areaquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter by region.
        explode: true
        in: query
        name: regionquery
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: List Expense Categories
      tags:
      - Expense Categories
  /comments.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Comments"
      operationId: Comment#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Document or Folder this Comment belongs to
        explode: true
        in: query
        name: item_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Comments
      tags:
      - Comments
    post:
      description: Outlines the parameters and data fields used when creating a new
        Comment
      operationId: Comment#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_aea9af0f'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new Comment
      tags:
      - Comments
  /comments/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single Comment"
      operationId: Comment#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single Comment
      tags:
      - Comments
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Comment"
      operationId: Comment#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Comment
      tags:
      - Comments
    patch:
      description: Outlines the parameters and data fields used when updating a single
        Comment
      operationId: Comment#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_0151f4fb'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single Comment
      tags:
      - Comments
  /document_archives/{id}/download.json:
    get:
      description: Download the DocumentArchive
      operationId: DocumentArchive#download
      parameters:
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "303":
          description: See Other
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Download the DocumentArchive
      tags:
      - Document Archives
  /document_archives.json:
    post:
      description: Outlines the parameters and data fields used when creating a new
        DocumentArchive
      operationId: DocumentArchive#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_243e1227'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new DocumentArchive
      tags:
      - Document Archives
  /document_archives/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single DocumentArchive"
      operationId: DocumentArchive#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single DocumentArchive
      tags:
      - Document Archives
  /documents/{id}/download.json:
    get:
      description: Download the Document
      operationId: Document#download
      parameters:
      - description: The unique identifier for a DocumentVersion to be downloaded.
          Defaults to the latest.
        explode: true
        in: query
        name: document_version_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "303":
          description: See Other
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Download the Document
      tags:
      - Documents
  /documents/{id}/copy.json:
    post:
      description: |
        Copies the latest document version of a Document into a new Document. The parameters `filename` and `name` will be copied from the source Document if none are provided.
      operationId: Document#copy
      parameters:
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_6d27f7ad'
      responses:
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
      summary: Copy a Document
      tags:
      - Documents
  /documents/{id}/versions.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all DocumentVersions"
      operationId: DocumentVersion#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter DocumentVersion records to those with the given `fully_uploaded`
          status.
        explode: true
        in: query
        name: fully_uploadedquery
        required: false
        schema:
          type: boolean
        style: form
      - description: The unique identifier for the DocumentVersion.
        explode: true
        in: query
        name: idquery
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all DocumentVersions
      tags:
      - Document Versions
  /documents.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Documents"
      operationId: Document#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          ActivityRate records with the matching property.
        explode: true
        in: query
        name: contact_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The unique identifier for a single DocumentCategory. Use the
          keyword `null` to match those without a Document. The list will be filtered
          to include only the Document records with the matching property.
        explode: true
        in: query
        name: document_category_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: |
          Filter records to only those with the given external property(s) name set.

          e.g. `?external_property_name=Name`
        explode: true
        in: query
        name: external_property_namequery
        required: false
        schema:
          type: string
        style: form
      - description: |
          Filter records to only those with the given external property(s) value set. Requires external property name as well.

          e.g. `?external_property_name=Name&external_property_value=Value`
        explode: true
        in: query
        name: external_property_valuequery
        required: false
        schema:
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Allow trashed Document record to be included.
        explode: true
        in: query
        name: include_deletedquery
        required: false
        schema:
          type: boolean
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: ID of parent (either a Payment or CreditMemo) this allocation
          belongs to
        explode: true
        in: query
        name: parent_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: "Filters Document record to those being a child of the parent\
          \ Folder, or a descendant of the parent Folder. Default is `children`."
        explode: true
        in: query
        name: scopequery
        required: false
        schema:
          enum:
          - descendants
          - children
          type: string
        style: form
      - description: Allow Document record being uploaded to be included.
        explode: true
        in: query
        name: show_uncompletedquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Documents
      tags:
      - Documents
    post:
      description: |
        Create a Document, or Create Document Version to an existing Document.
      operationId: Document#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_6f913005'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new Document
      tags:
      - Documents
  /documents/{id}.json:
    delete:
      description: |
        Deleting a Document using this method will move it to the trash instead of permanently deleting it. Trashed Documents are permanently deleted after 30 days. The following errors may be returned:

        - `409 Conflict`: The Document (or one of its ancestor folders) is currently being modified by another request, and cannot be trashed.
      operationId: Document#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
      summary: Delete a single Document
      tags:
      - Documents
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Document"
      operationId: Document#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Document
      tags:
      - Documents
    patch:
      description: |
        Update Document, move Document to another Folder, and/or restore a trashed Document.
      operationId: Document#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_64e85d6d'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single Document
      tags:
      - Documents
  /document_automations.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all DocumentAutomations"
      operationId: DocumentAutomation#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all DocumentAutomations
      tags:
      - Document Automations
    post:
      description: Outlines the parameters and data fields used when creating a new
        DocumentAutomation
      operationId: DocumentAutomation#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_a9756d23'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new DocumentAutomation
      tags:
      - Document Automations
  /document_automations/{id}.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single DocumentAutomation"
      operationId: DocumentAutomation#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single DocumentAutomation
      tags:
      - Document Automations
  /document_categories.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all DocumentCategories"
      operationId: DocumentCategory#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all DocumentCategories
      tags:
      - Document Categories
    post:
      description: Outlines the parameters and data fields used when creating a new
        DocumentCategory
      operationId: DocumentCategory#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_82bc3b49'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new DocumentCategory
      tags:
      - Document Categories
  /document_categories/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single DocumentCategory"
      operationId: DocumentCategory#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single DocumentCategory
      tags:
      - Document Categories
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single DocumentCategory"
      operationId: DocumentCategory#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single DocumentCategory
      tags:
      - Document Categories
    patch:
      description: Outlines the parameters and data fields used when updating a single
        DocumentCategory
      operationId: DocumentCategory#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_d890c786'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single DocumentCategory
      tags:
      - Document Categories
  /document_templates/{id}/download.json:
    get:
      description: Get the contents of the DocumentTemplate
      operationId: DocumentTemplate#download
      parameters:
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "303":
          description: See Other
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get the contents of the DocumentTemplate
      tags:
      - Document Templates
  /document_templates.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all DocumentTemplates"
      operationId: DocumentTemplate#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all DocumentTemplates
      tags:
      - Document Templates
    post:
      description: Outlines the parameters and data fields used when creating a new
        DocumentTemplate
      operationId: DocumentTemplate#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_dabde7e7'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new DocumentTemplate
      tags:
      - Document Templates
  /document_templates/{id}.json:
    delete:
      description: "Outlines the parameters, optional and required, used when deleting\
        \ the record for a single DocumentTemplate"
      operationId: DocumentTemplate#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single DocumentTemplate
      tags:
      - Document Templates
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single DocumentTemplate"
      operationId: DocumentTemplate#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single DocumentTemplate
      tags:
      - Document Templates
    patch:
      description: Outlines the parameters and data fields used when updating a single
        DocumentTemplate
      operationId: DocumentTemplate#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_46df2399'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single DocumentTemplate
      tags:
      - Document Templates
  /folders/list.json:
    get:
      description: |
        Return the data of the contents of a Folder.
      operationId: Folder#list
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          ActivityRate records with the matching property.
        explode: true
        in: query
        name: contact_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The unique identifier for a single DocumentCategory. Use the
          keyword `null` to match those without a Document. The list will be filtered
          to include only the Document records with the matching property.
        explode: true
        in: query
        name: document_category_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: |
          Filter records to only those with the given external property(s) name set.

          e.g. `?external_property_name=Name`
        explode: true
        in: query
        name: external_property_namequery
        required: false
        schema:
          type: string
        style: form
      - description: |
          Filter records to only those with the given external property(s) value set. Requires external property name as well.

          e.g. `?external_property_name=Name&external_property_value=Value`
        explode: true
        in: query
        name: external_property_valuequery
        required: false
        schema:
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Allow trashed Document record to be included.
        explode: true
        in: query
        name: include_deletedquery
        required: false
        schema:
          type: boolean
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: ID of parent (either a Payment or CreditMemo) this allocation
          belongs to
        explode: true
        in: query
        name: parent_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: "Filters Document record to those being a child of the parent\
          \ Folder, or a descendant of the parent Folder. Default is `children`."
        explode: true
        in: query
        name: scopequery
        required: false
        schema:
          enum:
          - descendants
          - children
          type: string
        style: form
      - description: Allow Document record being uploaded to be included.
        explode: true
        in: query
        name: show_uncompletedquery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data of the contents of a Folder
      tags:
      - Folders
  /folders.json:
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for all Folders"
      operationId: Folder#index
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a single Contact. The keyword `null`
          is not valid for this field. The list will be filtered to include only the
          ActivityRate records with the matching property.
        explode: true
        in: query
        name: contact_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter Activity records to those having the `created_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: created_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The unique identifier for a single DocumentCategory. Use the
          keyword `null` to match those without a Document. The list will be filtered
          to include only the Document records with the matching property.
        explode: true
        in: query
        name: document_category_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: |
          Filter records to only those with the given external property(s) name set.

          e.g. `?external_property_name=Name`
        explode: true
        in: query
        name: external_property_namequery
        required: false
        schema:
          type: string
        style: form
      - description: |
          Filter records to only those with the given external property(s) value set. Requires external property name as well.

          e.g. `?external_property_name=Name&external_property_value=Value`
        explode: true
        in: query
        name: external_property_valuequery
        required: false
        schema:
          type: string
        style: form
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: Filter Activity records to those having the specified unique
          identifiers.
        explode: true
        in: query
        name: idsquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Allow trashed Document record to be included.
        explode: true
        in: query
        name: include_deletedquery
        required: false
        schema:
          type: boolean
        style: form
      - description: "A limit on the number of Activity records to be returned. Limit\
          \ can range between 1 and 200. Default: `200`."
        explode: true
        in: query
        name: limitquery
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The unique identifier for a single Matter. Use the keyword `null`
          to match those without a Activity. The list will be filtered to include
          only the Activity records with the matching property.
        explode: true
        in: query
        name: matter_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Orders the Activity records by the given field. Default: `id(asc)`."
        explode: true
        in: query
        name: orderquery
        required: false
        schema:
          enum:
          - id(asc)
          - id(desc)
          - display_number(asc)
          - display_number(desc)
          - user.name(asc)
          - user.name(desc)
          - price(asc)
          - price(desc)
          - total(asc)
          - total(desc)
          - type(asc)
          - type(desc)
          - date(asc)
          - date(desc)
          - note(asc)
          - note(desc)
          - updated_at(asc)
          - updated_at(desc)
          - vendor.name(asc)
          - vendor.name(desc)
          - expense_category.name(asc)
          - expense_category.name(desc)
          - non_billable(asc)
          - non_billable(desc)
          - non_billable_total(asc)
          - non_billable_total(desc)
          type: string
        style: form
      - description: A token specifying which page to return.
        explode: true
        in: query
        name: page_tokenquery
        required: false
        schema:
          type: string
        style: form
      - description: ID of parent (either a Payment or CreditMemo) this allocation
          belongs to
        explode: true
        in: query
        name: parent_idquery
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Wildcard search for `note` matching a given string.
        explode: true
        in: query
        name: queryquery
        required: false
        schema:
          type: string
        style: form
      - description: "Filters Document record to those being a child of the parent\
          \ Folder, or a descendant of the parent Folder. Default is `children`."
        explode: true
        in: query
        name: scopequery
        required: false
        schema:
          enum:
          - descendants
          - children
          type: string
        style: form
      - description: Filter Activity records to those having the `updated_at` field
          after a specific time. (Expects an ISO-8601 timestamp).
        explode: true
        in: query
        name: updated_sincequery
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Return the data for all Folders
      tags:
      - Folders
    post:
      description: |
        Create a Folder to an existing folder.
      operationId: Folder#create
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_4cb9775b'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_Show'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create a new Folder
      tags:
      - Folders
  /folders/{id}.json:
    delete:
      description: |
        Deleting a Folder using this method will move it to the trash instead of permanently deleting it. Trashed Folders are permanently deleted after 30 days. The following errors may be returned:

        - `400 Bad Request`: The Folder cannot be trashed. The `type` of the error will be `DeleteFailed` and the `message` of the error will be one of the following:
          - `Delete failed: This folder contains more than 100,000 items and cannot be trashed. Please trash some of the items inside it before trying again.`
          - `Delete failed: This item contains locked items and cannot be deleted.`
          - `Delete failed: The root folder cannot be trashed`
        - `409 Conflict`: The Folder (or one of its descendants) is currently being modified by another request, and cannot be trashed.
      operationId: Folder#destroy
      parameters:
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
      summary: Delete a single Folder
      tags:
      - Folders
    get:
      description: "Outlines the parameters, optional and required, used when requesting\
        \ the data for a single Folder"
      operationId: Folder#show
      parameters:
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if it has been modified after the given date. (Expects an RFC\
          \ 2822 timestamp)."
        explode: false
        in: header
        name: IF-MODIFIED-SINCEheader
        required: false
        schema:
          format: date
          type: string
        style: simple
      - description: "The server will send the requested resource with a 200 status,\
          \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
          \ any of the values listed."
        explode: false
        in: header
        name: IF-NONE-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "304":
          description: Not Modified
      summary: Return the data for a single Folder
      tags:
      - Folders
    patch:
      description: |
        Update Folder, move Folder to another Folder, and/or restore a trashed Folder.
      operationId: Folder#update
      parameters:
      - description: "The server will update the requested resource and send back\
          \ a 200 status, but only if value in the header matches the existing resource's\
          \ [ETag](#section/ETags)."
        explode: false
        in: header
        name: IF-MATCHheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The [API minor version](#section/Minor-Versions). Default: latest\
          \ version."
        explode: false
        in: header
        name: X-API-VERSIONheader
        required: false
        schema:
          type: string
        style: simple
      - description: "The fields to be returned. See response samples for what fields\
          \ are available. For more information see the [fields section](#section/Fields)."
        explode: true
        in: query
        name: fieldsquery
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the Activity.
        explode: false
        in: path
        name: idpath
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ReqBody_afb49301'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Activity_List'
          description: Ok
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Precondition Failed
      summary: Update a single Folder
      tags:
      - Folders
components:
  parameters:
    X-API-VERSIONheader:
      description: "The [API minor version](#section/Minor-Versions). Default: latest\
        \ version."
      explode: false
      in: header
      name: X-API-VERSIONheader
      required: false
      schema:
        type: string
      style: simple
    activity_description_idquery:
      description: The unique identifier for a single ActivityDescription. Use the
        keyword `null` to match those without a Activity. The list will be filtered
        to include only the Activity records with the matching property.
      explode: true
      in: query
      name: activity_description_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    calendar_entry_idquery:
      description: The unique identifier for a single CalendarEntry. Use the keyword
        `null` to match those without a Activity. The list will be filtered to include
        only the Activity records with the matching property.
      explode: true
      in: query
      name: calendar_entry_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    communication_idquery:
      description: The unique identifier for a single Communication. Use the keyword
        `null` to match those without a Activity. The list will be filtered to include
        only the Activity records with the matching property.
      explode: true
      in: query
      name: communication_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    contact_note_idquery:
      description: The unique identifier for a single Note. Use the keyword `null`
        to match those without a Activity. The list will be filtered to include only
        the Activity records with the matching property.
      explode: true
      in: query
      name: contact_note_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    created_sincequery:
      description: Filter Activity records to those having the `created_at` field
        after a specific time. (Expects an ISO-8601 timestamp).
      explode: true
      in: query
      name: created_sincequery
      required: false
      schema:
        format: date-time
        type: string
      style: form
    end_datequery:
      description: Filter Activity records to those whose `date` is on or before the
        date provided (Expects an ISO-8601 date).
      explode: true
      in: query
      name: end_datequery
      required: false
      schema:
        format: date-time
        type: string
      style: form
    expense_category_idquery:
      description: The unique identifier for a single ExpenseCategory. Use the keyword
        `null` to match those without a Activity. The list will be filtered to include
        only the Activity records with the matching property.
      explode: true
      in: query
      name: expense_category_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    fieldsquery:
      description: "The fields to be returned. See response samples for what fields\
        \ are available. For more information see the [fields section](#section/Fields)."
      explode: true
      in: query
      name: fieldsquery
      required: false
      schema:
        type: string
      style: form
    flat_ratequery:
      description: "Filter Activity TimeEntry records to those that have a flat rate,\
        \ or not."
      explode: true
      in: query
      name: flat_ratequery
      required: false
      schema:
        type: boolean
      style: form
    grant_idquery:
      description: The unique identifier for a single Grant. Use the keyword `null`
        to match those without a Activity. The list will be filtered to include only
        the Activity records with the matching property.
      explode: true
      in: query
      name: grant_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    idsquery:
      description: Filter Activity records to those having the specified unique identifiers.
      explode: true
      in: query
      name: idsquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    limitquery:
      description: "A limit on the number of Activity records to be returned. Limit\
        \ can range between 1 and 200. Default: `200`."
      explode: true
      in: query
      name: limitquery
      required: false
      schema:
        format: int32
        type: integer
      style: form
    matter_idquery:
      description: The unique identifier for a single Matter. Use the keyword `null`
        to match those without a Activity. The list will be filtered to include only
        the Activity records with the matching property.
      explode: true
      in: query
      name: matter_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    matter_note_idquery:
      description: The unique identifier for a single Note. Use the keyword `null`
        to match those without a Activity. The list will be filtered to include only
        the Activity records with the matching property.
      explode: true
      in: query
      name: matter_note_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    only_unaccounted_forquery:
      description: Only unaccounted for activities.
      explode: true
      in: query
      name: only_unaccounted_forquery
      required: false
      schema:
        type: boolean
      style: form
    orderquery:
      description: "Orders the Activity records by the given field. Default: `id(asc)`."
      explode: true
      in: query
      name: orderquery
      required: false
      schema:
        enum:
        - id(asc)
        - id(desc)
        - display_number(asc)
        - display_number(desc)
        - user.name(asc)
        - user.name(desc)
        - price(asc)
        - price(desc)
        - total(asc)
        - total(desc)
        - type(asc)
        - type(desc)
        - date(asc)
        - date(desc)
        - note(asc)
        - note(desc)
        - updated_at(asc)
        - updated_at(desc)
        - vendor.name(asc)
        - vendor.name(desc)
        - expense_category.name(asc)
        - expense_category.name(desc)
        - non_billable(asc)
        - non_billable(desc)
        - non_billable_total(asc)
        - non_billable_total(desc)
        type: string
      style: form
    page_tokenquery:
      description: A token specifying which page to return.
      explode: true
      in: query
      name: page_tokenquery
      required: false
      schema:
        type: string
      style: form
    queryquery:
      description: Wildcard search for `note` matching a given string.
      explode: true
      in: query
      name: queryquery
      required: false
      schema:
        type: string
      style: form
    start_datequery:
      description: Filter Activity records to those whose `date` is on or after the
        date provided (Expects an ISO-8601 date).
      explode: true
      in: query
      name: start_datequery
      required: false
      schema:
        format: date-time
        type: string
      style: form
    statusquery:
      description: "Filter Activity records to those that are draft, billed, unbilled\
        \ or non-billable."
      explode: true
      in: query
      name: statusquery
      required: false
      schema:
        enum:
        - billed
        - draft
        - unbilled
        - non_billable
        - billable
        - written_off
        type: string
      style: form
    task_idquery:
      description: The unique identifier for a single Task. Use the keyword `null`
        to match those without a Activity. The list will be filtered to include only
        the Activity records with the matching property.
      explode: true
      in: query
      name: task_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    typequery:
      description: Filter Activity records to those of a specific type.
      explode: true
      in: query
      name: typequery
      required: false
      schema:
        enum:
        - TimeEntry
        - ExpenseEntry
        - HardCostEntry
        - SoftCostEntry
        type: string
      style: form
    updated_sincequery:
      description: Filter Activity records to those having the `updated_at` field
        after a specific time. (Expects an ISO-8601 timestamp).
      explode: true
      in: query
      name: updated_sincequery
      required: false
      schema:
        format: date-time
        type: string
      style: form
    user_idquery:
      description: The unique identifier for a single User. Use the keyword `null`
        to match those without a Activity. The list will be filtered to include only
        the Activity records with the matching property.
      explode: true
      in: query
      name: user_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    IF-MODIFIED-SINCEheader:
      description: "The server will send the requested resource with a 200 status,\
        \ but only if it has been modified after the given date. (Expects an RFC 2822\
        \ timestamp)."
      explode: false
      in: header
      name: IF-MODIFIED-SINCEheader
      required: false
      schema:
        format: date
        type: string
      style: simple
    IF-NONE-MATCHheader:
      description: "The server will send the requested resource with a 200 status,\
        \ but only if the existing resource's [ETag](#section/ETags) doesn't match\
        \ any of the values listed."
      explode: false
      in: header
      name: IF-NONE-MATCHheader
      required: false
      schema:
        type: string
      style: simple
    idpath:
      description: The unique identifier for the Activity.
      explode: false
      in: path
      name: idpath
      required: true
      schema:
        format: int64
        type: integer
      style: simple
    IF-MATCHheader:
      description: "The server will update the requested resource and send back a\
        \ 200 status, but only if value in the header matches the existing resource's\
        \ [ETag](#section/ETags)."
      explode: false
      in: header
      name: IF-MATCHheader
      required: false
      schema:
        type: string
      style: simple
    co_counsel_contact_idquery:
      description: The unique identifier for a single Contact. The keyword `null`
        is not valid for this field. The list will be filtered to include only the
        ActivityRate records with the matching property.
      explode: true
      in: query
      name: co_counsel_contact_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    contact_idquery:
      description: The unique identifier for a single Contact. The keyword `null`
        is not valid for this field. The list will be filtered to include only the
        ActivityRate records with the matching property.
      explode: true
      in: query
      name: contact_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    rate_formatter_idquery:
      description: Matter id for rate calculation.
      explode: true
      in: query
      name: rate_formatter_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    rate_foruser_idquery:
      description: "User id for rate calculation. If not provided, the user associated\
        \ to the API request is assumed."
      explode: true
      in: query
      name: rate_foruser_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    bill_idquery:
      description: The unique identifier for a single Bill. The keyword `null` is
        not valid for this field. The list will be filtered to include only the Allocation
        records with the matching property.
      explode: true
      in: query
      name: bill_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    parent_idquery:
      description: ID of parent (either a Payment or CreditMemo) this allocation belongs
        to
      explode: true
      in: query
      name: parent_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    parent_typequery:
      description: Filter Allocation records based on whether the parent is a CreditMemo
        or a Payment.
      explode: true
      in: query
      name: parent_typequery
      required: false
      schema:
        format: int32
        type: integer
      style: form
    show_empty_accountsquery:
      description: Filter BankAccount records to those having a zero or non zero balance.
      explode: true
      in: query
      name: show_empty_accountsquery
      required: false
      schema:
        type: boolean
      style: form
    bank_account_idquery:
      description: The unique identifier for a single BankAccount. The keyword `null`
        is not valid for this field. The list will be filtered to include only the
        BankTransaction records with the matching property.
      explode: true
      in: query
      name: bank_account_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    client_idquery:
      description: The unique identifier for a single Contact. The keyword `null`
        is not valid for this field. The list will be filtered to include only the
        BankTransaction records with the matching property.
      explode: true
      in: query
      name: client_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    custom_field_valuesquery:
      description: |
        Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,
        if the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.
        The key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`
        If an operator is used for a type that does not support it, an `400 Bad Request` is returned.

        *Supported operators:*
        * `checkbox`, `contact`, `matter`, `picklist` : `=`

        e.g. `?custom_field_values[1]=42`

        * `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`

        e.g. `?custom_field_values[1]=>=105.4`

        * `email`, `text_area`, `text_line`, `url` : `=`

        e.g. `?custom_field_values[1]=url_encoded`

        *Multiple conditions for the same custom field:*

        If you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.
        e.g. `?custom_field_values[1]=[<=50, >=45]`
      explode: true
      in: query
      name: custom_field_valuesquery
      required: false
      schema:
        enum:
        - =
        - <
        - '>'
        - <=
        - '>='
        type: string
      style: form
    originating_attorney_idquery:
      description: The unique identifier for a single User. Use the keyword `null`
        to match those without a BillableClient. The list will be filtered to include
        only the BillableClient records with the matching property.
      explode: true
      in: query
      name: originating_attorney_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    responsible_attorney_idquery:
      description: The unique identifier for a single User. Use the keyword `null`
        to match those without a BillableClient. The list will be filtered to include
        only the BillableClient records with the matching property.
      explode: true
      in: query
      name: responsible_attorney_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    currency_idquery:
      description: Filter Bill records to those of a specific currency.
      explode: true
      in: query
      name: currency_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    due_afterquery:
      description: Filter Bill records to those that have a `due_date` after the one
        provided (Expects an ISO-8601 date).
      explode: true
      in: query
      name: due_afterquery
      required: false
      schema:
        format: date
        type: string
      style: form
    due_atquery:
      description: Filter Bill records to those that have a specific `due_date` (Expects
        an ISO-8601 date).
      explode: true
      in: query
      name: due_atquery
      required: false
      schema:
        format: date
        type: string
      style: form
    due_beforequery:
      description: Filter Bill records to those that have a `due_date` before the
        one provided (Expects an ISO-8601 date).
      explode: true
      in: query
      name: due_beforequery
      required: false
      schema:
        format: date
        type: string
      style: form
    issued_afterquery:
      description: Filter Bill records to those that have an `issue_date` after the
        one provided (Expects an ISO-8601 date).
      explode: true
      in: query
      name: issued_afterquery
      required: false
      schema:
        format: date
        type: string
      style: form
    issued_beforequery:
      description: Filter Bill records to those that have an `issue_date` before the
        one provided (Expects an ISO-8601 date).
      explode: true
      in: query
      name: issued_beforequery
      required: false
      schema:
        format: date
        type: string
      style: form
    last_sent_end_datequery:
      description: Filter Bill records for those whose bills have been sent before
        the specified date
      explode: true
      in: query
      name: last_sent_end_datequery
      required: false
      schema:
        format: date
        type: string
      style: form
    last_sent_start_datequery:
      description: Filter Bill records for those whose bills have been sent after
        the specified date
      explode: true
      in: query
      name: last_sent_start_datequery
      required: false
      schema:
        format: date
        type: string
      style: form
    overdue_onlyquery:
      description: Filter Bill records to those that are overdue.
      explode: true
      in: query
      name: overdue_onlyquery
      required: false
      schema:
        type: boolean
      style: form
    statequery:
      description: Filter Bill records to those in a given state.
      explode: true
      in: query
      name: statequery
      required: false
      schema:
        enum:
        - draft
        - awaiting_approval
        - awaiting_payment
        - paid
        - void
        - deleted
        type: string
      style: form
    navigation.nextquery:
      description: The id of the next *Bill* available for viewing
      explode: true
      in: query
      name: navigation.nextquery
      required: false
      schema:
        format: int32
        type: integer
      style: form
    navigation.previousquery:
      description: The id of the previous *Bill* available for viewing
      explode: true
      in: query
      name: navigation.previousquery
      required: false
      schema:
        format: int32
        type: integer
      style: form
    calendar_idquery:
      description: The unique identifier for a single Calendar. The keyword `null`
        is not valid for this field. The list will be filtered to include only the
        CalendarEntry records with the matching property.
      explode: true
      in: query
      name: calendar_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    expandedquery:
      description: Returns a record for each occurrence of a recurring calendar event.  Non-recurring
        calendar events are unaffected and returned as separate records regardless
        of the expanded setting.
      explode: true
      in: query
      name: expandedquery
      required: false
      schema:
        type: boolean
      style: form
    external_property_namequery:
      description: |
        Filter records to only those with the given external property(s) name set.

        e.g. `?external_property_name=Name`
      explode: true
      in: query
      name: external_property_namequery
      required: false
      schema:
        type: string
      style: form
    external_property_valuequery:
      description: |
        Filter records to only those with the given external property(s) value set. Requires external property name as well.

        e.g. `?external_property_name=Name&external_property_value=Value`
      explode: true
      in: query
      name: external_property_valuequery
      required: false
      schema:
        type: string
      style: form
    fromquery:
      description: Filter CalendarEntry records to those that end on or after the
        provided time (Expects an ISO-8601 timestamp).
      explode: true
      in: query
      name: fromquery
      required: false
      schema:
        format: date-time
        type: string
      style: form
    has_court_rulequery:
      description: Allows matching court rule on calendar entry.
      explode: true
      in: query
      name: has_court_rulequery
      required: false
      schema:
        type: boolean
      style: form
    is_all_dayquery:
      description: Filter CalendarEntry records to those that are marked as all day
        events.
      explode: true
      in: query
      name: is_all_dayquery
      required: false
      schema:
        type: boolean
      style: form
    owner_entries_across_all_usersquery:
      description: Returns CalendarEntry records for all users related to a matter.
        Requires matter id.
      explode: true
      in: query
      name: owner_entries_across_all_usersquery
      required: false
      schema:
        type: boolean
      style: form
    sourcequery:
      description: "Filter CalendarEntry records to those having a specific calendar\
        \ visibility source (mobile, web)."
      explode: true
      in: query
      name: sourcequery
      required: false
      schema:
        enum:
        - web
        - mobile
        type: string
      style: form
    toquery:
      description: Filter CalendarEntry records to those that begin on or before the
        provided time (Expects an ISO-8601 timestamp).
      explode: true
      in: query
      name: toquery
      required: false
      schema:
        format: date-time
        type: string
      style: form
    visiblequery:
      description: Filter CalendarEntry records to those that are visible.
      explode: true
      in: query
      name: visiblequery
      required: false
      schema:
        type: boolean
      style: form
    filter_inactive_usersquery:
      description: Filter any shared UserCalendar records whose owner is inactive.
      explode: true
      in: query
      name: filter_inactive_usersquery
      required: false
      schema:
        type: boolean
      style: form
    ownerquery:
      description: Filter Calendar records to those that the user owns.
      explode: true
      in: query
      name: ownerquery
      required: false
      schema:
        type: boolean
      style: form
    writeablequery:
      description: Filter Calendar records to those which the user can write to.
      explode: true
      in: query
      name: writeablequery
      required: false
      schema:
        type: boolean
      style: form
    activequery:
      description: Filter ClioPaymentsLink records based on whether or not they have
        expired.
      explode: true
      in: query
      name: activequery
      required: false
      schema:
        type: boolean
      style: form
    datequery:
      description: Filter Communication records to those that occur on the specified
        date (Expects an ISO-8601 date).
      explode: true
      in: query
      name: datequery
      required: false
      schema:
        format: date
        type: string
      style: form
    having_time_entriesquery:
      description: Filter Communication records to those that do or do not have time
        entries.
      explode: true
      in: query
      name: having_time_entriesquery
      required: false
      schema:
        type: boolean
      style: form
    received_atquery:
      description: Filter Communication records to those that occur on the specified
        date (Expects an ISO-8601 date-time).
      explode: true
      in: query
      name: received_atquery
      required: false
      schema:
        format: date-time
        type: string
      style: form
    received_beforequery:
      description: Filter Communication records to those whose `date` is on or before
        the date provided (Expects an ISO-8601 date).
      explode: true
      in: query
      name: received_beforequery
      required: false
      schema:
        format: date-time
        type: string
      style: form
    received_sincequery:
      description: Filter Communication records to those whose `date` is on or after
        the date provided (Expects an ISO-8601 date).
      explode: true
      in: query
      name: received_sincequery
      required: false
      schema:
        format: date-time
        type: string
      style: form
    contact_idpath:
      description: ID of the Contact
      explode: false
      in: path
      name: contact_idpath
      required: true
      schema:
        format: int64
        type: integer
      style: simple
    client_onlyquery:
      description: Filter Contact records to those that are clients.
      explode: true
      in: query
      name: client_onlyquery
      required: false
      schema:
        type: boolean
      style: form
    clio_connect_onlyquery:
      description: Filter Contact records to those that are Clio Connect users.
      explode: true
      in: query
      name: clio_connect_onlyquery
      required: false
      schema:
        type: boolean
      style: form
    custom_field_idsquery:
      description: Filter Contact's custom_field_values to only include values for
        the given custom field unique identifiers.
      explode: true
      in: query
      name: custom_field_idsquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    email_onlyquery:
      description: Filter Contact records to those that have email addresses.
      explode: true
      in: query
      name: email_onlyquery
      required: false
      schema:
        type: boolean
      style: form
    exclude_idsquery:
      description: Filter Contact records to those who are not included in the given
        list of unique identifiers.
      explode: true
      in: query
      name: exclude_idsquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    initialquery:
      description: Filter Contact records to those where the last name or company
        name start with the given initial.
      explode: true
      in: query
      name: initialquery
      required: false
      schema:
        enum:
        - A
        - B
        - C
        - D
        - E
        - F
        - G
        - H
        - I
        - J
        - K
        - L
        - M
        - "N"
        - O
        - P
        - Q
        - R
        - S
        - T
        - U
        - V
        - W
        - X
        - "Y"
        - Z
        type: string
      style: form
    shared_resource_idquery:
      description: Filter Contact records to those that currently have access to a
        given shared resource.
      explode: true
      in: query
      name: shared_resource_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    conversation_idquery:
      description: The unique identifier for a single Conversation. Use the keyword
        `null` to match those without a ConversationMessage. The list will be filtered
        to include only the ConversationMessage records with the matching property.
      explode: true
      in: query
      name: conversation_idquery
      required: true
      schema:
        format: int64
        type: integer
      style: form
    archivedquery:
      description: Filter archived Conversation records.
      explode: true
      in: query
      name: archivedquery
      required: false
      schema:
        type: boolean
      style: form
    for_userquery:
      description: |
        If set to true, filter Conversation records accessible to any groups of the user.
        Note that the user may not be member of the conversations.

        If set to false, filter Conversation records of which the user is a member.
      explode: true
      in: query
      name: for_userquery
      required: false
      schema:
        type: boolean
      style: form
    read_statusquery:
      description: Filter Conversation records to those which have been read.
      explode: true
      in: query
      name: read_statusquery
      required: false
      schema:
        type: boolean
      style: form
    time_entriesquery:
      description: Filter Conversation records to those with or without associated
        time entries.
      explode: true
      in: query
      name: time_entriesquery
      required: false
      schema:
        type: boolean
      style: form
    is_requirements_requiredquery:
      description: Filter JurisdictionsToTrigger records to those which require addition
        requirements to be checked (usually specifying trigger time).
      explode: true
      in: query
      name: is_requirements_requiredquery
      required: false
      schema:
        type: boolean
      style: form
    is_servedquery:
      description: Filter JurisdictionsToTrigger records to those which require a
        service type to be selected.
      explode: true
      in: query
      name: is_servedquery
      required: false
      schema:
        type: boolean
      style: form
    jurisdiction_idpath:
      description: The unique identifier for the Jurisdiction.
      explode: false
      in: path
      name: jurisdiction_idpath
      required: true
      schema:
        format: int64
        type: integer
      style: simple
    for_current_accountquery:
      description: Filter Jurisdiction records to those set up for this account.
      explode: true
      in: query
      name: for_current_accountquery
      required: false
      schema:
        type: boolean
      style: form
    event_prefixquery:
      description: The prefix that will be added to the beginning of all court rule
        event titles
      explode: true
      in: query
      name: event_prefixquery
      required: false
      schema:
        type: string
      style: form
    jurisdictionidquery:
      description: The unique identifier for a single Jurisdiction. The keyword `null`
        is not valid for this field. The list will be filtered to include only the
        MatterDocket records with the matching property.
      explode: true
      in: query
      name: jurisdictionidquery
      required: true
      schema:
        format: int64
        type: integer
      style: form
    service_typeidquery:
      description: The unique identifier for a single ServiceType. The keyword `null`
        is not valid for this field. The list will be filtered to include only the
        MatterDocket records with the matching property.
      explode: true
      in: query
      name: service_typeidquery
      required: true
      schema:
        format: int64
        type: integer
      style: form
    start_timequery:
      description: The time the MatterDocket should start. (Expects an ISO-8601 timestamp).
      explode: true
      in: query
      name: start_timequery
      required: true
      schema:
        format: date-time
        type: string
      style: form
    triggeridquery:
      description: The unique identifier for a single JurisdictionsToTrigger. The
        keyword `null` is not valid for this field. The list will be filtered to include
        only the MatterDocket records with the matching property.
      explode: true
      in: query
      name: triggeridquery
      required: true
      schema:
        format: int64
        type: integer
      style: form
    matter_statusquery:
      description: Filter MatterDocket records to those with Matters having a specific
        status.
      explode: true
      in: query
      name: matter_statusquery
      required: false
      schema:
        enum:
        - open
        - closed
        - pending
        type: string
      style: form
    service_type_idquery:
      description: The unique identifier for a single ServiceType. Use the keyword
        `null` to match those without a MatterDocket. The list will be filtered to
        include only the MatterDocket records with the matching property.
      explode: true
      in: query
      name: service_type_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    deletedquery:
      description: Filter CustomField records to those that have been deleted for
        future use.
      explode: true
      in: query
      name: deletedquery
      required: false
      schema:
        type: boolean
      style: form
    field_typequery:
      description: Field type of this custom field
      explode: true
      in: query
      name: field_typequery
      required: false
      schema:
        enum:
        - checkbox
        - contact
        - currency
        - date
        - time
        - email
        - matter
        - numeric
        - picklist
        - text_area
        - text_line
        - url
        type: string
      style: form
    visible_and_requiredquery:
      description: Filter CustomField records to those that are visible and required.
      explode: true
      in: query
      name: visible_and_requiredquery
      required: false
      schema:
        type: boolean
      style: form
    displayedquery:
      description: Filter CustomFieldSet records to those that should be displayed
        by default.
      explode: true
      in: query
      name: displayedquery
      required: false
      schema:
        type: boolean
      style: form
    entry_typequery:
      description: Filter ExpenseCategory records to those that match the given type.
      explode: true
      in: query
      name: entry_typequery
      required: false
      schema:
        enum:
        - hard_cost
        - soft_cost
        - unassociated
        type: string
      style: form
    namequery:
      description: Filter Grant records to those that match the given name.
      explode: true
      in: query
      name: namequery
      required: false
      schema:
        type: string
      style: form
    activity_idquery:
      description: The unique identifier for a single Activity. Use the keyword `null`
        to match those without a LineItem. The list will be filtered to include only
        the LineItem records with the matching property.
      explode: true
      in: query
      name: activity_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    displayquery:
      description: Set this flag to true to return only LineItems displayed on the
        bill.
      explode: true
      in: query
      name: displayquery
      required: false
      schema:
        type: boolean
      style: form
    group_orderingquery:
      description: Filters LineItem records to match given group ordering.
      explode: true
      in: query
      name: group_orderingquery
      required: false
      schema:
        format: int32
        type: integer
      style: form
    kindquery:
      description: The kind of LineItem.
      explode: true
      in: query
      name: kindquery
      required: false
      schema:
        type: string
      style: form
    matter_idpath:
      description: Filters Client data by matter.
      explode: false
      in: path
      name: matter_idpath
      required: true
      schema:
        format: int64
        type: integer
      style: simple
    billablequery:
      description: Filter Matter records to those which are billable.
      explode: true
      in: query
      name: billablequery
      required: false
      schema:
        type: boolean
      style: form
    close_datequery:
      description: |
        Filter Matter records by the close date. The date should be provided in the format YYYY-MM-DD.

        e.g. `?close_date==2020-01-01`, `?close_date=<=2021-12-31`

        You can provide more than one value to narrow the results of this filter. You can do so by passing several individual values and appending `[]` to the parameter name.

        e.g. `?close_date[]=>=2020-01-01&close_date[]=<=2021-12-31`

        Note that, when providing multiple values for this filter, only Matter records that meet *all* filter conditions will be returned.
      explode: true
      in: query
      name: close_datequery
      required: false
      schema:
        enum:
        - '>DATE'
        - '>=DATE'
        - =DATE
        - <=DATE
        - <DATE
        type: string
      style: form
    group_idquery:
      description: The unique identifier for a single Group. The keyword `null` is
        not valid for this field. The list will be filtered to include only the Matter
        records with the matching property.
      explode: true
      in: query
      name: group_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    notification_event_subscriber_user_idquery:
      description: The unique identifier for a single NotificationEventSubscriber.
        Use the keyword `null` to match those without a Matter. The list will be filtered
        to include only the Matter records with the matching property.
      explode: true
      in: query
      name: notification_event_subscriber_user_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    open_datequery:
      description: |
        Filter Matter records by the open date. The date should be provided in the format YYYY-MM-DD.

        e.g. `?open_date==2020-01-01`, `?open_date=<=2021-12-31`

        You can provide more than one value to narrow the results of this filter. You can do so by passing several individual values and appending `[]` to the parameter name.

        e.g. `?open_date[]=>=2020-01-01&open_date[]=<=2021-12-31`

        Note that, when providing multiple values for this filter, only Matter records that meet *all* filter conditions will be returned.
      explode: true
      in: query
      name: open_datequery
      required: false
      schema:
        enum:
        - '>DATE'
        - '>=DATE'
        - =DATE
        - <=DATE
        - <DATE
        type: string
      style: form
    pending_datequery:
      description: |
        Filter Matter records by the pending date. The date should be provided in the format YYYY-MM-DD.

        e.g. `?pending_date==2020-01-01`, `?pending_date=<=2021-12-31`

        You can provide more than one value to narrow the results of this filter. You can do so by passing several individual values and appending `[]` to the parameter name.

        e.g. `?pending_date[]=>=2020-01-01&pending_date[]=<=2021-12-31`

        Note that, when providing multiple values for this filter, only Matter records that meet *all* filter conditions will be returned.
      explode: true
      in: query
      name: pending_datequery
      required: false
      schema:
        enum:
        - '>DATE'
        - '>=DATE'
        - =DATE
        - <=DATE
        - <DATE
        type: string
      style: form
    practice_area_idquery:
      description: The unique identifier for a single PracticeArea. The keyword `null`
        is not valid for this field. The list will be filtered to include only the
        Matter records with the matching property.
      explode: true
      in: query
      name: practice_area_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    responsible_staff_idquery:
      description: The unique identifier for a single User. Use the keyword `null`
        to match those without a Matter. The list will be filtered to include only
        the Matter records with the matching property.
      explode: true
      in: query
      name: responsible_staff_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    subscriber_user_idquery:
      description: The unique identifier for a single NotificationEventSubscriber.
        Use the keyword `null` to match those without a Matter. The list will be filtered
        to include only the Matter records with the matching property.
      explode: true
      in: query
      name: subscriber_user_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    treatment_end_datequery:
      description: Filters Medical Records data by treatment end date.
      explode: true
      in: query
      name: treatment_end_datequery
      required: false
      schema:
        format: date-time
        type: string
      style: form
    treatment_start_datequery:
      description: Filters Medical Records data by treatment start date.
      explode: true
      in: query
      name: treatment_start_datequery
      required: false
      schema:
        format: date-time
        type: string
      style: form
    has_time_entriesquery:
      description: Filter Note records to those with or without associated time entries.
      explode: true
      in: query
      name: has_time_entriesquery
      required: false
      schema:
        type: boolean
      style: form
    last_paid_end_datequery:
      description: Filter OutstandingClientBalance records for those whose bills have
        been paid before the specified date
      explode: true
      in: query
      name: last_paid_end_datequery
      required: false
      schema:
        format: date
        type: string
      style: form
    last_paid_start_datequery:
      description: Filter OutstandingClientBalance records for those whose bills have
        been paid after the specified date
      explode: true
      in: query
      name: last_paid_start_datequery
      required: false
      schema:
        format: date
        type: string
      style: form
    newest_bill_due_end_datequery:
      description: Filter OutstandingClientBalance records for the contact's newest
        bill due date before the specified date
      explode: true
      in: query
      name: newest_bill_due_end_datequery
      required: false
      schema:
        format: date
        type: string
      style: form
    newest_bill_due_start_datequery:
      description: Filter OutstandingClientBalance records for the contact's newest
        bill due date after the specified date
      explode: true
      in: query
      name: newest_bill_due_start_datequery
      required: false
      schema:
        format: date
        type: string
      style: form
    codequery:
      description: Filter PracticeArea records to those that match the given code.
      explode: true
      in: query
      name: codequery
      required: false
      schema:
        type: string
      style: form
    notification_method_idquery:
      description: The unique identifier for a single NotificationMethod. The keyword
        `null` is not valid for this field. The list will be filtered to include only
        the Reminder records with the matching property.
      explode: true
      in: query
      name: notification_method_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    subject_idquery:
      description: The unique identifier for a single CalendarEntry or Task. The keyword
        `null` is not valid for this field. The list will be filtered to include only
        the Reminder records with the matching property.
      explode: true
      in: query
      name: subject_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    subject_typequery:
      description: "Filter Reminder records to those of a given subject type, required\
        \ if using subject_id."
      explode: true
      in: query
      name: subject_typequery
      required: false
      schema:
        enum:
        - calendar_entry
        - task
        type: string
      style: form
    categoryquery:
      description: Filters Report data by category.
      explode: true
      in: query
      name: categoryquery
      required: false
      schema:
        type: string
      style: form
    created_beforequery:
      description: Filters Report data by date. (Expects an ISO-8601 date).
      explode: true
      in: query
      name: created_beforequery
      required: false
      schema:
        format: date-time
        type: string
      style: form
    output_formatquery:
      description: Filters Report data by format.
      explode: true
      in: query
      name: output_formatquery
      required: false
      schema:
        type: string
      style: form
    has_schedulequery:
      description: Filters ReportPreset records to those that have or do not have
        a Report Schedule.
      explode: true
      in: query
      name: has_schedulequery
      required: false
      schema:
        type: boolean
      style: form
    schedule_frequencyquery:
      description: Filters ReportPreset records to those that have a Report Schedule
        of the specified frequency.
      explode: true
      in: query
      name: schedule_frequencyquery
      required: false
      schema:
        enum:
        - daily
        - weekly
        - monthly
        type: string
      style: form
    durationquery:
      description: "Duration string for time rounding, conforming to the Chronic date\
        \ parser. For example: '3h' or '2:15'."
      explode: true
      in: query
      name: durationquery
      required: false
      schema:
        type: string
      style: form
    assignee_idquery:
      description: The unique identifier for a single User or Contact. Use the keyword
        `null` to match those without a Task. The list will be filtered to include
        only the Task records with the matching property.
      explode: true
      in: query
      name: assignee_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    assignee_typequery:
      description: Filter Task records to those with a specific assignee. Must be
        passed if filtering by assignee.
      explode: true
      in: query
      name: assignee_typequery
      required: false
      schema:
        enum:
        - user
        - contact
        type: string
      style: form
    assigner_idquery:
      description: The unique identifier for a single User. Use the keyword `null`
        to match those without a Task. The list will be filtered to include only the
        Task records with the matching property.
      explode: true
      in: query
      name: assigner_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    cascading_source_idquery:
      description: Filter Task records to those with a parent task that has the specified
        ID.
      explode: true
      in: query
      name: cascading_source_idquery
      required: false
      schema:
        format: int32
        type: integer
      style: form
    completequery:
      description: Filter Task records to those which are complete or not.
      explode: true
      in: query
      name: completequery
      required: false
      schema:
        type: boolean
      style: form
    due_at_fromquery:
      description: Start of date range when querying by due_at in a range. (Expects
        an ISO-8601 date).
      explode: true
      in: query
      name: due_at_fromquery
      required: false
      schema:
        format: date
        type: string
      style: form
    due_at_presentquery:
      description: "Filter Task records to those that have a due date specified, or\
        \ not."
      explode: true
      in: query
      name: due_at_presentquery
      required: false
      schema:
        type: boolean
      style: form
    due_at_toquery:
      description: End of date range when querying by due_at in a range. (Expects
        an ISO-8601 date).
      explode: true
      in: query
      name: due_at_toquery
      required: false
      schema:
        format: date
        type: string
      style: form
    permissionquery:
      description: Filter Task records to those with the given permission. Returns
        all tasks by default.
      explode: true
      in: query
      name: permissionquery
      required: false
      schema:
        enum:
        - private
        - public
        type: string
      style: form
    priorityquery:
      description: Filter Task records to those with the given priority.
      explode: true
      in: query
      name: priorityquery
      required: false
      schema:
        enum:
        - high
        - normal
        - low
        type: string
      style: form
    statusesquery:
      description: Filter Task records to those with the given statuses. Users without
        advanced tasks enabled may only specify 'complete' or 'pending'.
      explode: true
      in: query
      name: statusesquery
      required: false
      schema:
        enum:
        - pending
        - in_progress
        - in_review
        - complete
        type: string
      style: form
    statute_of_limitationsquery:
      description: Filter Task records to those which are a statute of limitations
        or not.
      explode: true
      in: query
      name: statute_of_limitationsquery
      required: false
      schema:
        type: boolean
      style: form
    task_type_idquery:
      description: The unique identifier for a single TaskType. Use the keyword `null`
        to match those without a Task. The list will be filtered to include only the
        Task records with the matching property.
      explode: true
      in: query
      name: task_type_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    time_entries_presentquery:
      description: "Filter Task records to those that have associated time entries,\
        \ or not."
      explode: true
      in: query
      name: time_entries_presentquery
      required: false
      schema:
        type: boolean
      style: form
    task_template_list_idquery:
      description: The unique identifier for a single TaskTemplateList. The keyword
        `null` is not valid for this field. The list will be filtered to include only
        the TaskTemplate records with the matching property.
      explode: true
      in: query
      name: task_template_list_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    emptyquery:
      description: Filter TaskTemplateList records to those that either contain at
        least one task template or contain none.
      explode: true
      in: query
      name: emptyquery
      required: false
      schema:
        type: boolean
      style: form
    enabledquery:
      description: Filter TaskType records to those that are enabled or disabled.
      explode: true
      in: query
      name: enabledquery
      required: false
      schema:
        type: boolean
      style: form
    include_co_counselquery:
      description: Filter User to include co-counsel users
      explode: true
      in: query
      name: include_co_counselquery
      required: false
      schema:
        type: boolean
      style: form
    pending_setupquery:
      description: Filter User records based on whether or not they are still being
        setup.
      explode: true
      in: query
      name: pending_setupquery
      required: false
      schema:
        type: boolean
      style: form
    rolequery:
      description: Filter User records to those with a specific role.
      explode: true
      in: query
      name: rolequery
      required: false
      schema:
        enum:
        - admin
        - accounts
        - billing
        - reports
        type: string
      style: form
    subscription_typequery:
      description: Filter User records to those with a specific subscription type.
      explode: true
      in: query
      name: subscription_typequery
      required: false
      schema:
        enum:
        - attorney
        - nonattorney
        type: string
      style: form
    utbms_set_idquery:
      description: The unique identifier for a single UtbmsSet. Use the keyword `null`
        to match those without a UtbmsCode. The list will be filtered to include only
        the UtbmsCode records with the matching property.
      explode: true
      in: query
      name: utbms_set_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    activityquery:
      description: Filter by activity.
      explode: true
      in: query
      name: activityquery
      required: false
      schema:
        type: string
      style: form
    activity_sub_categoryquery:
      description: Filter by activity sub-category.
      explode: true
      in: query
      name: activity_sub_categoryquery
      required: false
      schema:
        type: string
      style: form
    attended_several_hearings_for_multiple_clientsquery:
      description: Filter by whether multiple hearings were attended for multiple
        clients.
      explode: true
      in: query
      name: attended_several_hearings_for_multiple_clientsquery
      required: false
      schema:
        type: boolean
      style: form
    category_of_lawquery:
      description: Filter by category of law.
      explode: true
      in: query
      name: category_of_lawquery
      required: false
      schema:
        type: string
      style: form
    change_of_solicitorquery:
      description: Filter by change of solicitor status.
      explode: true
      in: query
      name: change_of_solicitorquery
      required: false
      schema:
        type: boolean
      style: form
    courtquery:
      description: Filter by court.
      explode: true
      in: query
      name: courtquery
      required: false
      schema:
        type: string
      style: form
    eligible_for_sqmquery:
      description: Filter by SQM eligibility.
      explode: true
      in: query
      name: eligible_for_sqmquery
      required: false
      schema:
        type: boolean
      style: form
    fee_schemequery:
      description: Fee scheme
      explode: true
      in: query
      name: fee_schemequery
      required: false
      schema:
        type: string
      style: form
    first_conducting_solicitorquery:
      description: Filter by first conducting solicitor status.
      explode: true
      in: query
      name: first_conducting_solicitorquery
      required: false
      schema:
        type: boolean
      style: form
    keyquery:
      description: Filter by key.
      explode: true
      in: query
      name: keyquery
      required: false
      schema:
        type: string
      style: form
    number_of_clientsquery:
      description: Filter by number of clients.
      explode: true
      in: query
      name: number_of_clientsquery
      required: false
      schema:
        type: string
      style: form
    partyquery:
      description: Filter by party.
      explode: true
      in: query
      name: partyquery
      required: false
      schema:
        type: string
      style: form
    post_transfer_clients_representedquery:
      description: Filter by post-transfer clients represented.
      explode: true
      in: query
      name: post_transfer_clients_representedquery
      required: false
      schema:
        type: string
      style: form
    rate_typequery:
      description: Filter by rate type.
      explode: true
      in: query
      name: rate_typequery
      required: false
      schema:
        type: string
      style: form
    regionquery:
      description: Filter by region.
      explode: true
      in: query
      name: regionquery
      required: false
      schema:
        type: string
      style: form
    session_typequery:
      description: Filter by session type.
      explode: true
      in: query
      name: session_typequery
      required: false
      schema:
        type: string
      style: form
    user_typequery:
      description: Filter by user type.
      explode: true
      in: query
      name: user_typequery
      required: false
      schema:
        type: string
      style: form
    matter_type_1query:
      description: Filter by matter type 1.
      explode: true
      in: query
      name: matter_type_1query
      required: false
      schema:
        format: int32
        type: integer
      style: form
    matter_type_2query:
      description: Filter by matter type 2.
      explode: true
      in: query
      name: matter_type_2query
      required: false
      schema:
        format: int32
        type: integer
      style: form
    counselquery:
      description: Filter by counsel.
      explode: true
      in: query
      name: counselquery
      required: false
      schema:
        type: string
      style: form
    solicitor_typequery:
      description: Filter by solicitor type.
      explode: true
      in: query
      name: solicitor_typequery
      required: false
      schema:
        type: string
      style: form
    standard_fee_categoryquery:
      description: Filter by standard fee category.
      explode: true
      in: query
      name: standard_fee_categoryquery
      required: false
      schema:
        type: string
      style: form
    practice_areaquery:
      description: Filter by expense practice area.
      explode: true
      in: query
      name: practice_areaquery
      required: false
      schema:
        type: string
      style: form
    item_idquery:
      description: The ID of the Document or Folder this Comment belongs to
      explode: true
      in: query
      name: item_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    document_version_idquery:
      description: The unique identifier for a DocumentVersion to be downloaded. Defaults
        to the latest.
      explode: true
      in: query
      name: document_version_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    fully_uploadedquery:
      description: Filter DocumentVersion records to those with the given `fully_uploaded`
        status.
      explode: true
      in: query
      name: fully_uploadedquery
      required: false
      schema:
        type: boolean
      style: form
    idquery:
      description: The unique identifier for the DocumentVersion.
      explode: true
      in: query
      name: idquery
      required: true
      schema:
        format: int64
        type: integer
      style: form
    document_category_idquery:
      description: The unique identifier for a single DocumentCategory. Use the keyword
        `null` to match those without a Document. The list will be filtered to include
        only the Document records with the matching property.
      explode: true
      in: query
      name: document_category_idquery
      required: false
      schema:
        format: int64
        type: integer
      style: form
    include_deletedquery:
      description: Allow trashed Document record to be included.
      explode: true
      in: query
      name: include_deletedquery
      required: false
      schema:
        type: boolean
      style: form
    scopequery:
      description: "Filters Document record to those being a child of the parent Folder,\
        \ or a descendant of the parent Folder. Default is `children`."
      explode: true
      in: query
      name: scopequery
      required: false
      schema:
        enum:
        - descendants
        - children
        type: string
      style: form
    show_uncompletedquery:
      description: Allow Document record being uploaded to be included.
      explode: true
      in: query
      name: show_uncompletedquery
      required: false
      schema:
        type: boolean
      style: form
  requestBodies:
    ReqBody_15264083:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Activity_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Activity_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Activity_create_request'
      description: Request Body for Activities
      required: false
    ReqBody_98fad133:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Activity_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Activity_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Activity_update_request'
      description: Request Body for Activities
      required: false
    ReqBody_733a3b9d:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActivityRate_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ActivityRate_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/ActivityRate_create_request'
      description: Request Body for Activity Rates
      required: false
    ReqBody_f9ebf9bf:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActivityDescription_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ActivityDescription_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/ActivityDescription_create_request'
      description: Request Body for Activity Descriptions
      required: false
    ReqBody_30ef368b:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActivityDescription_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ActivityDescription_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/ActivityDescription_update_request'
      description: Request Body for Activity Descriptions
      required: false
    ReqBody_62abff87:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankAccount_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/BankAccount_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/BankAccount_create_request'
      description: Request Body for Bank Accounts
      required: false
    ReqBody_641f3049:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankAccount_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/BankAccount_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/BankAccount_update_request'
      description: Request Body for Bank Accounts
      required: false
    ReqBody_20ca7c0c:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BillTheme_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/BillTheme_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/BillTheme_update_request'
      description: Request Body for Bill Themes
      required: false
    ReqBody_45eea465:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Bill_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Bill_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Bill_update_request'
      description: Request Body for Bills
      required: false
    ReqBody_967c9577:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CalendarEntry_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CalendarEntry_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/CalendarEntry_create_request'
      description: Request Body for Calendar Entries
      required: false
    ReqBody_552cbb49:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CalendarEntry_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CalendarEntry_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/CalendarEntry_update_request'
      description: Request Body for Calendar Entries
      required: false
    ReqBody_a85312b0:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CalendarEntryEventType_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CalendarEntryEventType_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/CalendarEntryEventType_create_request'
      description: Request Body for Calendar Entry Event Types
      required: false
    ReqBody_3273acb4:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CalendarEntryEventType_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CalendarEntryEventType_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/CalendarEntryEventType_update_request'
      description: Request Body for Calendar Entry Event Types
      required: false
    ReqBody_9a9a25eb:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Calendar_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Calendar_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Calendar_create_request'
      description: Request Body for Calendars
      required: false
    ReqBody_2091b97c:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Calendar_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Calendar_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Calendar_update_request'
      description: Request Body for Calendars
      required: false
    ReqBody_091bfd61:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClioPaymentsLink_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ClioPaymentsLink_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/ClioPaymentsLink_create_request'
      description: Request Body for Links
      required: false
    ReqBody_56ee4b3b:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClioPaymentsLink_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ClioPaymentsLink_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/ClioPaymentsLink_update_request'
      description: Request Body for Links
      required: false
    ReqBody_0134f99b:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Communication_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Communication_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Communication_create_request'
      description: Request Body for Communications
      required: false
    ReqBody_b333c344:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Communication_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Communication_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Communication_update_request'
      description: Request Body for Communications
      required: false
    ReqBody_0bf7b5a8:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Contact_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Contact_create_request'
      description: Request Body for Contacts
      required: false
    ReqBody_5c5b92e8:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Contact_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Contact_update_request'
      description: Request Body for Contacts
      required: false
    ReqBody_2f15b598:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConversationMessage_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ConversationMessage_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/ConversationMessage_create_request'
      description: Request Body for Conversation Messages
      required: false
    ReqBody_e72042bf:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Conversation_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Conversation_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Conversation_update_request'
      description: Request Body for Conversations
      required: false
    ReqBody_a6fa4c2e:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MatterDocket_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/MatterDocket_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/MatterDocket_create_request'
      description: Request Body for Matter Dockets
      required: false
    ReqBody_c376b00e:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomField_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CustomField_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/CustomField_create_request'
      description: Request Body for Custom Fields
      required: false
    ReqBody_13f58d8b:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomField_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CustomField_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/CustomField_update_request'
      description: Request Body for Custom Fields
      required: false
    ReqBody_05b95628:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomFieldSet_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CustomFieldSet_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/CustomFieldSet_create_request'
      description: Request Body for Custom Field Sets
      required: false
    ReqBody_034f41d8:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomFieldSet_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CustomFieldSet_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/CustomFieldSet_update_request'
      description: Request Body for Custom Field Sets
      required: false
    ReqBody_5336cef6:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomAction_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CustomAction_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/CustomAction_create_request'
      description: Request Body for Custom Actions
      required: false
    ReqBody_6390f7e3:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomAction_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CustomAction_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/CustomAction_update_request'
      description: Request Body for Custom Actions
      required: false
    ReqBody_23c25a8a:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Damage_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Damage_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Damage_create_request'
      description: Request Body for Damages
      required: false
    ReqBody_f6d7ceca:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Damage_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Damage_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Damage_update_request'
      description: Request Body for Damages
      required: false
    ReqBody_d3eff9f3:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExpenseCategory_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ExpenseCategory_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/ExpenseCategory_create_request'
      description: Request Body for Expense Categories
      required: false
    ReqBody_69b1c29e:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExpenseCategory_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ExpenseCategory_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/ExpenseCategory_update_request'
      description: Request Body for Expense Categories
      required: false
    ReqBody_3397ac5d:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Grant_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Grant_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Grant_create_request'
      description: Request Body for Grants
      required: false
    ReqBody_358e826e:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantFundingSource_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/GrantFundingSource_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/GrantFundingSource_create_request'
      description: Request Body for Grant Funding Sources
      required: false
    ReqBody_ff08e65d:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Group_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Group_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Group_create_request'
      description: Request Body for Groups
      required: false
    ReqBody_de346764:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MyEvent_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/MyEvent_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/MyEvent_update_request'
      description: Request Body for My Events
      required: false
    ReqBody_f3eba5b6:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LineItem_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/LineItem_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/LineItem_update_request'
      description: Request Body for Line Items
      required: false
    ReqBody_c32b5dbd:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Matter_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Matter_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Matter_create_request'
      description: Request Body for Matters
      required: false
    ReqBody_fff169d6:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Matter_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Matter_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Matter_update_request'
      description: Request Body for Matters
      required: false
    ReqBody_7cea7d9c:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MedicalRecord_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/MedicalRecord_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/MedicalRecord_update_request'
      description: Request Body for Medical Records
      required: false
    ReqBody_8040db7b:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MedicalRecordsRequest_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/MedicalRecordsRequest_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/MedicalRecordsRequest_create_request'
      description: Request Body for Medical Records Details
      required: false
    ReqBody_a9281122:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MedicalRecordsRequest_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/MedicalRecordsRequest_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/MedicalRecordsRequest_update_request'
      description: Request Body for Medical Records Details
      required: false
    ReqBody_fc585a39:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MedicalBill_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/MedicalBill_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/MedicalBill_update_request'
      description: Request Body for Medical Bills
      required: false
    ReqBody_8bb4dd3a:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Note_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Note_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Note_create_request'
      description: Request Body for Notes
      required: false
    ReqBody_d4ea1092:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Note_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Note_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Note_update_request'
      description: Request Body for Notes
      required: false
    ReqBody_ec7d53fc:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PracticeArea_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/PracticeArea_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/PracticeArea_create_request'
      description: Request Body for Practice Areas
      required: false
    ReqBody_c560cdf7:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PracticeArea_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/PracticeArea_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/PracticeArea_update_request'
      description: Request Body for Practice Areas
      required: false
    ReqBody_79aa19a8:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Relationship_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Relationship_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Relationship_create_request'
      description: Request Body for Relationships
      required: false
    ReqBody_2810dbc2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Reminder_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Reminder_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Reminder_create_request'
      description: Request Body for Reminders
      required: false
    ReqBody_c206095a:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Reminder_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Reminder_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Reminder_update_request'
      description: Request Body for Reminders
      required: false
    ReqBody_f9783b84:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Report_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Report_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Report_create_request'
      description: Request Body for Reports
      required: false
    ReqBody_def72e83:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportPreset_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ReportPreset_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/ReportPreset_create_request'
      description: Request Body for Report Presets
      required: false
    ReqBody_526f89b3:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportPreset_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ReportPreset_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/ReportPreset_update_request'
      description: Request Body for Report Presets
      required: false
    ReqBody_77aeef69:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportSchedule_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ReportSchedule_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/ReportSchedule_create_request'
      description: Request Body for Report Schedules
      required: false
    ReqBody_04ab9841:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportSchedule_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ReportSchedule_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/ReportSchedule_update_request'
      description: Request Body for Report Schedules
      required: false
    ReqBody_5ba486b3:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TextSnippet_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TextSnippet_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/TextSnippet_create_request'
      description: Request Body for Text Snippets
      required: false
    ReqBody_754c4640:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TextSnippet_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TextSnippet_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/TextSnippet_update_request'
      description: Request Body for Text Snippets
      required: false
    ReqBody_adce5636:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Task_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Task_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Task_create_request'
      description: Request Body for Tasks
      required: false
    ReqBody_0ccdf5a3:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Task_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Task_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Task_update_request'
      description: Request Body for Tasks
      required: false
    ReqBody_f2f66685:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CalendarVisibility_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CalendarVisibility_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/CalendarVisibility_update_request'
      description: Request Body for Task Calendars
      required: false
    ReqBody_68572615:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskTemplate_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TaskTemplate_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/TaskTemplate_create_request'
      description: Request Body for Task Templates
      required: false
    ReqBody_e147642d:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskTemplate_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TaskTemplate_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/TaskTemplate_update_request'
      description: Request Body for Task Templates
      required: false
    ReqBody_914a4d29:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskTemplateList_copy_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TaskTemplateList_copy_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/TaskTemplateList_copy_request'
      description: Request Body for Task Template Lists
      required: false
    ReqBody_d088f835:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskTemplateList_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TaskTemplateList_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/TaskTemplateList_create_request'
      description: Request Body for Task Template Lists
      required: false
    ReqBody_f12dac4a:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskTemplateList_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TaskTemplateList_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/TaskTemplateList_update_request'
      description: Request Body for Task Template Lists
      required: false
    ReqBody_66b4d523:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskType_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TaskType_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/TaskType_create_request'
      description: Request Body for Task Types
      required: false
    ReqBody_9bac5140:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskType_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TaskType_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/TaskType_update_request'
      description: Request Body for Task Types
      required: false
    ReqBody_0b9caf19:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Timer_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Timer_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Timer_create_request'
      description: Request Body for Timers
      required: false
    ReqBody_18b3c0ae:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrustLineItem_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TrustLineItem_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/TrustLineItem_update_request'
      description: Request Body for Trust Line Items
      required: false
    ReqBody_8baacf99:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrustRequest_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TrustRequest_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/TrustRequest_create_request'
      description: Request Body for Trust Requests
      required: false
    ReqBody_16cd47c2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Webhook_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Webhook_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Webhook_create_request'
      description: Request Body for Webhooks
      required: false
    ReqBody_97dfff73:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Webhook_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Webhook_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Webhook_update_request'
      description: Request Body for Webhooks
      required: false
    ReqBody_aea9af0f:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Comment_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Comment_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Comment_create_request'
      description: Request Body for Comments
      required: false
    ReqBody_0151f4fb:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Comment_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Comment_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Comment_update_request'
      description: Request Body for Comments
      required: false
    ReqBody_243e1227:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentArchive_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DocumentArchive_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/DocumentArchive_create_request'
      description: Request Body for Document Archives
      required: false
    ReqBody_6d27f7ad:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Document_copy_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Document_copy_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Document_copy_request'
      description: Request Body for Documents
      required: false
    ReqBody_6f913005:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Document_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Document_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Document_create_request'
      description: Request Body for Documents
      required: false
    ReqBody_64e85d6d:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Document_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Document_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Document_update_request'
      description: Request Body for Documents
      required: false
    ReqBody_a9756d23:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentAutomation_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DocumentAutomation_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/DocumentAutomation_create_request'
      description: Request Body for Document Automations
      required: false
    ReqBody_82bc3b49:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentCategory_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DocumentCategory_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/DocumentCategory_create_request'
      description: Request Body for Document Categories
      required: false
    ReqBody_d890c786:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentCategory_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DocumentCategory_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/DocumentCategory_update_request'
      description: Request Body for Document Categories
      required: false
    ReqBody_dabde7e7:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentTemplate_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DocumentTemplate_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/DocumentTemplate_create_request'
      description: Request Body for Document Templates
      required: false
    ReqBody_46df2399:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentTemplate_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DocumentTemplate_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/DocumentTemplate_update_request'
      description: Request Body for Document Templates
      required: false
    ReqBody_4cb9775b:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Folder_create_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Folder_create_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Folder_create_request'
      description: Request Body for Folders
      required: false
    ReqBody_afb49301:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Folder_update_request'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Folder_update_request'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Folder_update_request'
      description: Request Body for Folders
      required: false
  responses:
    "200_Ok":
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/Activity_List'
      description: Ok
    "400_Bad_Request":
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
    "401_Unauthorized":
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
    "403_Forbidden":
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/Error'
      description: Forbidden
    "429_Too_Many_Requests":
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/Error'
      description: Too Many Requests
    "201_Created":
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/Activity_Show'
      description: Created
    "404_Not_Found":
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/Error'
      description: Not Found
    "422_Unprocessable_Entity":
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unprocessable Entity
    "304_Not_Modified":
      description: Not Modified
    "412_Precondition_Failed":
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/Error'
      description: Precondition Failed
    "204_No_Content":
      description: No Content
    "303_See_Other":
      description: See Other
    "409_Conflict":
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/Error'
      description: Conflict
  schemas:
    ErrorDetail:
      example:
        type: type
        message: message
      properties:
        type:
          description: Unique name for this error
          title: type
          type: string
        message:
          description: Detailed message about the error
          title: message
          type: string
      required:
      - message
      - type
      title: ErrorDetail
      type: object
    Error:
      example:
        error:
          type: type
          message: message
      properties:
        error:
          $ref: '#/components/schemas/ErrorDetail'
      required:
      - error
      title: Error
      type: object
    IdsResponse:
      properties:
        data:
          description: A list of ids
          items:
            format: int64
            type: integer
          type: array
      required:
      - data
      type: object
    Comment_base:
      properties:
        id:
          description: Unique identifier for the *Comment*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Comment*
          title: etag
          type: string
        message:
          description: The content of the Comment
          title: message
          type: string
        created_at:
          description: The time the *Comment* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Comment* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: Comment_base
      type: object
    Comment:
      allOf:
      - $ref: '#/components/schemas/Comment_base'
      - properties:
          creator:
            $ref: '#/components/schemas/User_base'
          document_version:
            $ref: '#/components/schemas/DocumentVersion_base'
        type: object
      title: Comment
      type: object
    Comment_Show:
      properties:
        data:
          $ref: '#/components/schemas/Comment'
      required:
      - data
      type: object
    Comment_List:
      properties:
        data:
          description: Comment List Response
          items:
            $ref: '#/components/schemas/Comment'
          type: array
      required:
      - data
      type: object
    DocumentArchive_base:
      properties:
        id:
          description: Unique identifier for the *DocumentArchive*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *DocumentArchive*
          title: etag
          type: string
        created_at:
          description: The time the *DocumentArchive* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *DocumentArchive* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        size:
          description: The size of the DocumentArchive in bytes.
          format: int32
          title: size
          type: integer
        progress:
          description: The percent completion of the DocumentArchive.
          format: double
          title: progress
          type: number
        state:
          description: The current state of the DocumentArchive.
          enum:
          - not_started
          - queued
          - in_progress
          - completed
          - failed
          title: state
          type: string
        message:
          description: A message to indicate why the DocumentArchive didn't complete.
          title: message
          type: string
      title: DocumentArchive_base
      type: object
    DocumentArchive:
      allOf:
      - $ref: '#/components/schemas/DocumentArchive_base'
      - properties: {}
        type: object
      title: DocumentArchive
      type: object
    DocumentArchive_Show:
      properties:
        data:
          $ref: '#/components/schemas/DocumentArchive'
      required:
      - data
      type: object
    DocumentAutomation_base:
      properties:
        id:
          description: Unique identifier for the *DocumentAutomation*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *DocumentAutomation*
          title: etag
          type: string
        state:
          description: A text description of what the automation is currently doing
          enum:
          - not_started
          - queued
          - in_progress
          - empty
          - failed
          - completed
          title: state
          type: string
        export_formats:
          description: An array of what formats were requested
          enum:
          - pdf
          - original
          title: export_formats
          type: string
        filename:
          description: The name of the file being generated.
          title: filename
          type: string
        created_at:
          description: The time the *DocumentAutomation* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *DocumentAutomation* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: DocumentAutomation_base
      type: object
    DocumentAutomation:
      allOf:
      - $ref: '#/components/schemas/DocumentAutomation_base'
      - properties:
          matter:
            $ref: '#/components/schemas/Matter_base'
          document_template:
            $ref: '#/components/schemas/DocumentTemplate_base'
          documents:
            description: Document
            items:
              $ref: '#/components/schemas/Document_base'
            type: array
        type: object
      title: DocumentAutomation
      type: object
    DocumentAutomation_Show:
      properties:
        data:
          $ref: '#/components/schemas/DocumentAutomation'
      required:
      - data
      type: object
    DocumentAutomation_List:
      properties:
        data:
          description: DocumentAutomation List Response
          items:
            $ref: '#/components/schemas/DocumentAutomation'
          type: array
      required:
      - data
      type: object
    DocumentCategory_base:
      properties:
        id:
          description: Unique identifier for the *DocumentCategory*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *DocumentCategory*
          title: etag
          type: string
        name:
          description: The name of the *DocumentCategory*
          title: name
          type: string
        created_at:
          description: The time the *DocumentCategory* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *DocumentCategory* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: DocumentCategory_base
      type: object
    DocumentCategory:
      allOf:
      - $ref: '#/components/schemas/DocumentCategory_base'
      - properties: {}
        type: object
      title: DocumentCategory
      type: object
    DocumentCategory_Show:
      properties:
        data:
          $ref: '#/components/schemas/DocumentCategory'
      required:
      - data
      type: object
    DocumentCategory_List:
      properties:
        data:
          description: DocumentCategory List Response
          items:
            $ref: '#/components/schemas/DocumentCategory'
          type: array
      required:
      - data
      type: object
    Document_base:
      properties:
        id:
          description: Unique identifier for the *Document*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Document*
          title: etag
          type: string
        created_at:
          description: The time the *Document* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Document* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        deleted_at:
          description: The time the *Document* was deleted (as a ISO-8601 timestamp)
          format: date-time
          title: deleted_at
          type: string
        type:
          description: The type of the *Document*
          enum:
          - Document
          title: type
          type: string
        locked:
          description: Whether or not the Document is locked. Locked Document cannot
            be modified
          title: locked
          type: boolean
        name:
          description: The name of the Document
          title: name
          type: string
        received_at:
          description: The time the last document version was received (as an ISO-8601
            timestamp)
          format: date-time
          title: received_at
          type: string
        filename:
          description: The uploaded file name of the latest document version.
          title: filename
          type: string
        size:
          description: The file size
          format: int32
          title: size
          type: integer
        content_type:
          description: The uploaded file content type
          title: content_type
          type: string
      title: Document_base
      type: object
    Document:
      allOf:
      - $ref: '#/components/schemas/Document_base'
      - properties:
          parent:
            $ref: '#/components/schemas/LinkedFolder_base'
          matter:
            $ref: '#/components/schemas/Matter_base'
          contact:
            $ref: '#/components/schemas/Contact_base'
          document_category:
            $ref: '#/components/schemas/DocumentCategory_base'
          creator:
            $ref: '#/components/schemas/ClioCreator_base'
          latest_document_version:
            $ref: '#/components/schemas/DocumentVersion'
          group:
            $ref: '#/components/schemas/Group_base'
          external_properties:
            description: ExternalProperty
            items:
              $ref: '#/components/schemas/ExternalProperty_base'
            type: array
        type: object
      title: Document
      type: object
    Document_Show:
      properties:
        data:
          $ref: '#/components/schemas/Document'
      required:
      - data
      type: object
    Document_List:
      properties:
        data:
          description: Document List Response
          items:
            $ref: '#/components/schemas/Document'
          type: array
      required:
      - data
      type: object
    DocumentTemplate_base:
      properties:
        id:
          description: Unique identifier for the *DocumentTemplate*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *DocumentTemplate*
          title: etag
          type: string
        size:
          description: The size in bytes of the template
          format: int32
          title: size
          type: integer
        content_type:
          description: A standard MIME type describing the format of the object data.
          title: content_type
          type: string
        filename:
          description: The name of the original file that was uploaded
          title: filename
          type: string
        created_at:
          description: The time the *DocumentTemplate* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *DocumentTemplate* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: DocumentTemplate_base
      type: object
    DocumentTemplate:
      allOf:
      - $ref: '#/components/schemas/DocumentTemplate_base'
      - properties:
          document_category:
            $ref: '#/components/schemas/DocumentCategory_base'
          last_modified_by:
            $ref: '#/components/schemas/User_base'
        type: object
      title: DocumentTemplate
      type: object
    DocumentTemplate_Show:
      properties:
        data:
          $ref: '#/components/schemas/DocumentTemplate'
      required:
      - data
      type: object
    DocumentTemplate_List:
      properties:
        data:
          description: DocumentTemplate List Response
          items:
            $ref: '#/components/schemas/DocumentTemplate'
          type: array
      required:
      - data
      type: object
    DocumentVersion_base:
      example:
        created_at: 2000-01-23T04:56:07.000+00:00
        version_number: 0
        document_id: 0
        uuid: uuid
        put_url: put_url
        filename: filename
        updated_at: 2000-01-23T04:56:07.000+00:00
        size: 9
        content_type: content_type
        fully_uploaded: true
        received_at: 2000-01-23T04:56:07.000+00:00
        etag: etag
        id: 9
      properties:
        id:
          description: Unique identifier for the *DocumentVersion*
          format: int64
          title: id
          type: integer
        document_id:
          description: The ID of the parent document.
          format: int64
          title: document_id
          type: integer
        etag:
          description: ETag for the *DocumentVersion*
          title: etag
          type: string
        uuid:
          description: UUID associated with the DocumentVersion. UUID is required
            to mark a document fully uploaded.
          title: uuid
          type: string
        created_at:
          description: The time the *DocumentVersion* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *DocumentVersion* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        filename:
          description: The uploaded file name of the DocumentVersion.
          title: filename
          type: string
        size:
          description: The size of the DocumentVersion in bytes.
          format: int32
          title: size
          type: integer
        version_number:
          description: The ordered number of when this DocumentVersion was uploaded.
          format: int32
          title: version_number
          type: integer
        content_type:
          description: A standard MIME type describing the format of the object data.
          title: content_type
          type: string
        received_at:
          description: The time the DocumentVersion was received (as an ISO-8601 timestamp)
          format: date-time
          title: received_at
          type: string
        put_url:
          description: "A signed URL for uploading the file in a single operation.\
            \ It expires in 10 minutes. If the document is fully uploaded, the field\
            \ is empty."
          title: put_url
          type: string
        fully_uploaded:
          description: True if the DocumentVersion is uploaded. False if the DocumentVersion
            is being uploaded.
          title: fully_uploaded
          type: boolean
      title: DocumentVersion_base
      type: object
    DocumentVersion:
      allOf:
      - $ref: '#/components/schemas/DocumentVersion_base'
      - properties:
          creator:
            $ref: '#/components/schemas/ClioCreator_base'
          put_headers:
            description: MultipartHeader
            items:
              $ref: '#/components/schemas/MultipartHeader_base'
            type: array
          multiparts:
            description: Multipart
            items:
              $ref: '#/components/schemas/Multipart'
            type: array
        type: object
      title: DocumentVersion
      type: object
    DocumentVersion_List:
      properties:
        data:
          description: DocumentVersion List Response
          items:
            $ref: '#/components/schemas/DocumentVersion'
          type: array
      required:
      - data
      type: object
    Folder_base:
      properties:
        id:
          description: Unique identifier for the *Folder*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Folder*
          title: etag
          type: string
        created_at:
          description: The time the *Folder* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Folder* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        deleted_at:
          description: The time the *Folder* was deleted (as a ISO-8601 timestamp)
          format: date-time
          title: deleted_at
          type: string
        type:
          description: The type of the *Folder*
          enum:
          - Folder
          title: type
          type: string
        locked:
          description: Whether or not the Folder is locked. Locked Folder cannot be
            modified
          title: locked
          type: boolean
        name:
          description: The name of the Folder
          title: name
          type: string
        root:
          description: Whether or not the Folder is the root folder. There is only
            one root folder per account
          title: root
          type: boolean
      title: Folder_base
      type: object
    Folder:
      allOf:
      - $ref: '#/components/schemas/Folder_base'
      - properties:
          parent:
            $ref: '#/components/schemas/LinkedFolder_base'
          matter:
            $ref: '#/components/schemas/Matter_base'
          contact:
            $ref: '#/components/schemas/Contact_base'
          document_category:
            $ref: '#/components/schemas/DocumentCategory_base'
          creator:
            $ref: '#/components/schemas/ClioCreator_base'
          latest_document_version:
            $ref: '#/components/schemas/DocumentVersion_base'
          group:
            $ref: '#/components/schemas/Group_base'
          external_properties:
            description: ExternalProperty
            items:
              $ref: '#/components/schemas/ExternalProperty_base'
            type: array
        type: object
      title: Folder
      type: object
    Folder_Show:
      properties:
        data:
          $ref: '#/components/schemas/Folder'
      required:
      - data
      type: object
    Folder_List:
      properties:
        data:
          description: Folder List Response
          items:
            $ref: '#/components/schemas/Folder'
          type: array
      required:
      - data
      type: object
    Item_base:
      properties:
        id:
          description: Unique identifier for the *Item*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Item*
          title: etag
          type: string
        created_at:
          description: The time the *Item* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Item* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        deleted_at:
          description: The time the *Item* was deleted (as a ISO-8601 timestamp)
          format: date-time
          title: deleted_at
          type: string
        type:
          description: The type of the *Item*
          enum:
          - Document
          - Folder
          title: type
          type: string
        locked:
          description: Whether or not the Item is locked. Locked Item cannot be modified
          title: locked
          type: boolean
        name:
          description: The name of the Item
          title: name
          type: string
      title: Item_base
      type: object
    Item:
      allOf:
      - $ref: '#/components/schemas/Item_base'
      - properties:
          parent:
            $ref: '#/components/schemas/LinkedFolder_base'
          matter:
            $ref: '#/components/schemas/Matter_base'
          contact:
            $ref: '#/components/schemas/Contact_base'
          document_category:
            $ref: '#/components/schemas/DocumentCategory_base'
          creator:
            $ref: '#/components/schemas/ClioCreator_base'
          latest_document_version:
            $ref: '#/components/schemas/DocumentVersion_base'
          group:
            $ref: '#/components/schemas/Group_base'
          external_properties:
            description: ExternalProperty
            items:
              $ref: '#/components/schemas/ExternalProperty_base'
            type: array
        type: object
      title: Item
      type: object
    Item_List:
      properties:
        data:
          description: Item List Response
          items:
            $ref: '#/components/schemas/Item'
          type: array
      required:
      - data
      type: object
    Account_base:
      properties:
        id:
          description: Unique identifier for the *Account*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Account*
          title: etag
          type: string
        name:
          description: The name of the *Account*
          title: name
          type: string
        state:
          description: Account state
          title: state
          type: string
        created_at:
          description: The time the *Account* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Account* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: Account_base
      type: object
    Account:
      allOf:
      - $ref: '#/components/schemas/Account_base'
      - properties:
          owner:
            $ref: '#/components/schemas/User_base'
        type: object
      type: object
    ActivityDescription_base:
      example:
        utbms_task_id: 4
        created_at: 2000-01-23T04:56:07.000+00:00
        category_type: category_type
        type: type
        utbms_activity_id: 2
        default: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        xero_service_code: xero_service_code
        visible_to_co_counsel: true
        accessible_to_user: true
        name: name
        etag: etag
        utbms_task_name: utbms_task_name
        currency: "{}"
        id: 3
      properties:
        id:
          description: Unique identifier for the *ActivityDescription*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *ActivityDescription*
          title: etag
          type: string
        name:
          description: The name of the *ActivityDescription*
          title: name
          type: string
        visible_to_co_counsel:
          description: A toggle that determines if a co-counsel user of the firm can
            have access to this activity description
          title: visible_to_co_counsel
          type: boolean
        created_at:
          description: The time the *ActivityDescription* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *ActivityDescription* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        default:
          description: Whether it is the user's default activity description
          title: default
          type: boolean
        type:
          description: The type of the *ActivityDescription*
          title: type
          type: string
        utbms_activity_id:
          description: The UTBMS activity id if the *ActivityDescription* is a UTBMS
            activity description
          format: int64
          title: utbms_activity_id
          type: integer
        utbms_task_name:
          description: The UTBMS activity task name if attached to a UTBMS activity
            description
          title: utbms_task_name
          type: string
        utbms_task_id:
          description: The UTBMS activity task id if attached to a UTBMS activity
            description
          format: int64
          title: utbms_task_id
          type: integer
        xero_service_code:
          description: Custom Xero service code for this activity description
          title: xero_service_code
          type: string
        accessible_to_user:
          description: Determines if activity description is accessible to user
          title: accessible_to_user
          type: boolean
        category_type:
          description: Activity category rate type. Either hourly or flat fee
          title: category_type
          type: string
        currency:
          description: The currency of the activity description
          title: currency
          type: object
      title: ActivityDescription_base
      type: object
    ActivityDescription:
      allOf:
      - $ref: '#/components/schemas/ActivityDescription_base'
      - properties:
          groups:
            description: Group
            items:
              $ref: '#/components/schemas/Group_base'
            type: array
          rate:
            $ref: '#/components/schemas/ActivityDescriptionRate_base'
          utbms_task:
            $ref: '#/components/schemas/UtbmsCode_base'
          utbms_activity:
            $ref: '#/components/schemas/UtbmsCode_base'
          currency:
            $ref: '#/components/schemas/Currency_base'
        type: object
      title: ActivityDescription
      type: object
    ActivityDescription_Show:
      properties:
        data:
          $ref: '#/components/schemas/ActivityDescription'
      required:
      - data
      type: object
    ActivityDescription_List:
      properties:
        data:
          description: ActivityDescription List Response
          items:
            $ref: '#/components/schemas/ActivityDescription'
          type: array
      required:
      - data
      type: object
    ActivityRate_base:
      properties:
        id:
          description: Unique identifier for the *ActivityRate*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *ActivityRate*
          title: etag
          type: string
        rate:
          description: Monetary value of this rate. Either hourly value or flat rate
            value
          format: double
          title: rate
          type: number
        flat_rate:
          description: Whether this is a flat rate
          title: flat_rate
          type: boolean
        created_at:
          description: The time the *ActivityRate* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *ActivityRate* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        contact_id:
          description: Filter ActivityRate records for the contact.
          format: int64
          title: contact_id
          type: integer
        co_counsel_contact_id:
          description: Filter ActivityRate records for the co-counsel.
          format: int64
          title: co_counsel_contact_id
          type: integer
      title: ActivityRate_base
      type: object
    ActivityRate:
      allOf:
      - $ref: '#/components/schemas/ActivityRate_base'
      - properties:
          user:
            $ref: '#/components/schemas/User_base'
          group:
            $ref: '#/components/schemas/Group_base'
        type: object
      title: ActivityRate
      type: object
    ActivityRate_Show:
      properties:
        data:
          $ref: '#/components/schemas/ActivityRate'
      required:
      - data
      type: object
    ActivityRate_List:
      properties:
        data:
          description: ActivityRate List Response
          items:
            $ref: '#/components/schemas/ActivityRate'
          type: array
      required:
      - data
      type: object
    Activity_base:
      properties:
        id:
          description: Unique identifier for the *Activity*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Activity*
          title: etag
          type: string
        type:
          description: The type of the *Activity*
          enum:
          - TimeEntry
          - ExpenseEntry
          - HardCostEntry
          - SoftCostEntry
          title: type
          type: string
        date:
          description: The date the *Activity* was performed (as a ISO-8601 date)
          format: date
          title: date
          type: string
        quantity_in_hours:
          description: The number of hours the TimeEntry took.
          format: double
          title: quantity_in_hours
          type: number
        rounded_quantity_in_hours:
          description: |
            The number of hours rounded accordingly to the billing settings.
            The rounded value is used to calculate the total.
          format: double
          title: rounded_quantity_in_hours
          type: number
        quantity:
          description: |
            The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.

            **Version <= 4.0.3:**
            The number of hours the TimeEntry took.

            **Latest version:**
            The number of seconds the TimeEntry took.
          format: double
          title: quantity
          type: number
        rounded_quantity:
          description: |
            The field is applicable to time entries only.

            **Version <= 4.0.3:**
            The number of hours rounded accordingly to the billing settings.
            The rounded value is used to calculate the total.

            **Latest version:**
            The number of seconds rounded accordingly to the billing settings.
            The rounded value is used to calculate the total.
          format: double
          title: rounded_quantity
          type: number
        quantity_redacted:
          description: |
            Is `true` if any of the following fields are redacted:
            `quantity`, `rounded_quantity`, `rounded_quantity_in_hours`, `quantity_in_hours`, `total`, `non_billable_total`
          title: quantity_redacted
          type: boolean
        price:
          description: The hourly or flat rate of the *Activity*
          format: double
          title: price
          type: number
        note:
          description: The details about the *Activity*
          title: note
          type: string
        flat_rate:
          description: Whether the *Activity* is a flat rate
          title: flat_rate
          type: boolean
        billed:
          description: Whether the *Activity* has been added to an active bill that
            is in the state of `awaiting_payment` or `paid`
          title: billed
          type: boolean
        on_bill:
          description: "Whether the *Activity* has been added to an active bill that\
            \ is in the state of `draft`, `awaiting_approval`, `awaiting_payment`\
            \ or `paid`"
          title: on_bill
          type: boolean
        total:
          description: "The total cost of draft, billable and billed items in the\
            \ *Activity*"
          format: double
          title: total
          type: number
        contingency_fee:
          description: Whether or not the *Activity* is a contingency fee
          title: contingency_fee
          type: boolean
        created_at:
          description: The time the *Activity* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Activity* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        reference:
          description: A check reference for a HardCostEntry.
          title: reference
          type: string
        non_billable:
          description: Whether the *Activity* is non-billable
          title: non_billable
          type: boolean
        non_billable_total:
          description: The total cost of non-billable items in the *Activity*
          format: double
          title: non_billable_total
          type: number
        no_charge:
          description: Whether the non-billable *Activity* is shown on the bill.
          title: no_charge
          type: boolean
        tax_setting:
          description: "The option denoting whether primary tax, secondary tax, or\
            \ both is applied to an expense entry."
          enum:
          - no_tax
          - tax_1_only
          - tax_2_only
          - tax_1_and_tax_2
          title: tax_setting
          type: string
        currency:
          description: The currency of the *Activity*
          title: currency
          type: object
      title: Activity_base
      type: object
    Activity:
      allOf:
      - $ref: '#/components/schemas/Activity_base'
      - properties:
          activity_description:
            $ref: '#/components/schemas/ActivityDescription_base'
          expense_category:
            $ref: '#/components/schemas/ExpenseCategory_base'
          bill:
            $ref: '#/components/schemas/Bill_base'
          communication:
            $ref: '#/components/schemas/Communication_base'
          client_portal:
            $ref: '#/components/schemas/ClientPortal_base'
          matter:
            $ref: '#/components/schemas/Matter_base'
          matter_note:
            $ref: '#/components/schemas/Note_base'
          contact_note:
            $ref: '#/components/schemas/Note_base'
          subject:
            $ref: '#/components/schemas/PolymorphicObject_base'
          timer:
            $ref: '#/components/schemas/Timer_base'
          user:
            $ref: '#/components/schemas/User_base'
          utbms_expense:
            $ref: '#/components/schemas/UtbmsCode_base'
          vendor:
            $ref: '#/components/schemas/Contact_base'
          calendar_entry:
            $ref: '#/components/schemas/Activity_CalendarEntry_base'
          task:
            $ref: '#/components/schemas/Activity_Task_base'
          text_message_conversation:
            $ref: '#/components/schemas/Activity_TextMessageConversation_base'
          document_version:
            $ref: '#/components/schemas/DocumentVersion_base'
          legal_aid_uk_activity:
            $ref: '#/components/schemas/LegalAidUkActivity_base'
          currency:
            $ref: '#/components/schemas/Currency_base'
        type: object
      example:
        date: 2000-01-23
        note: note
        rounded_quantity: 5.637376656633329
        subject:
          identifier: identifier
          secondary_identifier: secondary_identifier
          tertiary_identifier: tertiary_identifier
          id: 7
          type: Task
        flat_rate: true
        non_billable_total: 9.301444243932576
        quantity_in_hours: 6.027456183070403
        created_at: 2000-01-23T04:56:07.000+00:00
        activity_description:
          utbms_task_id: 4
          created_at: 2000-01-23T04:56:07.000+00:00
          category_type: category_type
          type: type
          utbms_activity_id: 2
          default: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          xero_service_code: xero_service_code
          visible_to_co_counsel: true
          accessible_to_user: true
          name: name
          etag: etag
          utbms_task_name: utbms_task_name
          currency: "{}"
          id: 3
        tax_setting: no_tax
        type: TimeEntry
        matter:
          open_date: 2000-01-23
          shared: true
          client_reference: client_reference
          billing_method: flat
          close_date: 2000-01-23
          custom_number: custom_number
          pending_date: 2000-01-23
          matter_stage_updated_at: 2000-01-23T04:56:07.000+00:00
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          last_activity_date: 2000-01-23
          billable: true
          client_id: 0
          number: 6
          has_tasks: true
          maildrop_address: maildrop_address
          updated_at: 2000-01-23T04:56:07.000+00:00
          etag: etag
          display_number: display_number
          currency: "{}"
          location: location
          id: 7
          status: Pending
        document_version:
          created_at: 2000-01-23T04:56:07.000+00:00
          version_number: 0
          document_id: 0
          uuid: uuid
          put_url: put_url
          filename: filename
          updated_at: 2000-01-23T04:56:07.000+00:00
          size: 9
          content_type: content_type
          fully_uploaded: true
          received_at: 2000-01-23T04:56:07.000+00:00
          etag: etag
          id: 9
        reference: reference
        legal_aid_uk_activity:
          activity_sub_category: activity_sub_category
          form_of_civil_legal_service: 8
          tax_exclusive: true
          expert: 6
          uplift: 0.43431398
          json_key: json_key
          bolt_ons: bolt_ons
          eligible_for_sqm: true
          court: 4
          is_custom_rate: true
          bolt_ons_summary: bolt_ons_summary
          user_type: 2
          base_rate: 5.507387
          advocacy: 7
          id: 4
          region: 3
        timer:
          start_time: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          elapsed_time: 3.0576100241049344
          created_at: 2000-01-23T04:56:07.000+00:00
          etag: etag
          id: 3
        total: 7.061401241503109
        billed: true
        text_message_conversation:
          etag: etag
          id: 7
        updated_at: 2000-01-23T04:56:07.000+00:00
        client_portal:
          unread_count: 7
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          etag: etag
          id: 3
          unread_notifiable_count: 0
        price: 2.3021358869347655
        on_bill: true
        expense_category:
          updated_at: 2000-01-23T04:56:07.000+00:00
          rate: 1
          accessible_to_user: true
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          etag: etag
          currency: "{}"
          id: 7
          tax_setting: tax_setting
          entry_type: entry_type
          xero_expense_code: xero_expense_code
        utbms_expense:
          utbms_set_id: 0
          code: code
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          etag: etag
          id: 4
          type: UtbmsTask
        vendor:
          secondary_email_address: secondary_email_address
          is_bill_recipient: true
          date_of_birth: 2000-01-23
          prefix: prefix
          created_at: 2000-01-23T04:56:07.000+00:00
          is_clio_for_client_user: true
          type: Company
          title: title
          primary_phone_number: primary_phone_number
          sales_tax_number: sales_tax_number
          updated_at: 2000-01-23T04:56:07.000+00:00
          has_clio_for_clients_permission: true
          currency: "{}"
          id: 6
          ledes_client_id: ledes_client_id
          first_name: first_name
          locked_clio_connect_email: true
          initials: initials
          primary_email_address: primary_email_address
          last_name: last_name
          middle_name: middle_name
          clio_connect_email: clio_connect_email
          client_connect_user_id: 4
          is_co_counsel: true
          name: name
          etag: etag
          is_client: true
          secondary_phone_number: secondary_phone_number
        contact_note:
          date: 2000-01-23
          updated_at: 2000-01-23T04:56:07.000+00:00
          subject: subject
          created_at: 2000-01-23T04:56:07.000+00:00
          etag: etag
          id: 4
          detail: detail
          time_entries_count: 8
          type: Matter
          detail_text_type: plain_text
        currency:
          code: code
          updated_at: 2000-01-23T04:56:07.000+00:00
          sign: sign
          created_at: 2000-01-23T04:56:07.000+00:00
          etag: etag
          id: 1
        id: 0
        communication:
          date: 2000-01-23
          updated_at: 2000-01-23T04:56:07.000+00:00
          subject: subject
          received_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          etag: etag
          id: 6
          time_entries_count: 3
          body: body
          type: EmailCommunication
        quantity: 5.962133916683182
        no_charge: true
        quantity_redacted: true
        contingency_fee: true
        bill:
          end_at: 2000-01-23
          shared: true
          services_secondary_taxable_sub_total: 3
          subject: subject
          pending: 5.025004791520295
          created_at: 2000-01-23T04:56:07.000+00:00
          memo: memo
          discount_services_only: discount_services_only
          credits_issued: 9.369310271410669
          type: MatterBill
          start_at: 2000-01-23
          services_tax: 9.018348186070783
          issued_at: 2000-01-23
          tax_rate: 1.4894159098541704
          secondary_tax_rate: 6.84685269835264
          number: number
          total: 1.1730742509559433
          updated_at: 2000-01-23T04:56:07.000+00:00
          balance: 7.457744773683766
          services_secondary_tax: 6.683562403749608
          tax_sum: 6.778324963048013
          due_at: 2000-01-23
          secondary_tax_sum: 6.878052220127876
          id: 1
          state: draft
          services_taxable_sub_total: 6
          can_update: true
          last_sent_at: 2000-01-23T04:56:07.000+00:00
          kind: revenue_kind
          total_tax: 5.944895607614016
          available_state_transitions:
          - awaiting_approval
          - awaiting_approval
          paid_at: 2000-01-23T04:56:07.000+00:00
          purchase_order: purchase_order
          due: 9.965781217890562
          secondary_taxable_sub_total: 1
          paid: 4.965218492984954
          taxable_sub_total: 6
          sub_total: 2.8841621266687802
          etag: etag
          services_sub_total: 8.762042012749001
        calendar_entry:
          calendar_owner_id: 1
          etag: etag
          id: id
        rounded_quantity_in_hours: 1.4658129805029452
        non_billable: true
        task:
          etag: etag
          id: 4
        etag: etag
        matter_note:
          date: 2000-01-23
          updated_at: 2000-01-23T04:56:07.000+00:00
          subject: subject
          created_at: 2000-01-23T04:56:07.000+00:00
          etag: etag
          id: 4
          detail: detail
          time_entries_count: 8
          type: Matter
          detail_text_type: plain_text
        user:
          court_rules_default_attendee: true
          clio_connect: true
          initials: initials
          roles:
          - roles
          - roles
          created_at: 2000-01-23T04:56:07.000+00:00
          last_name: last_name
          time_zone: time_zone
          account_owner: true
          enabled: true
          default_calendar_id: 7
          updated_at: 2000-01-23T04:56:07.000+00:00
          rate: 3.2588565
          name: name
          etag: etag
          phone_number: phone_number
          id: 5
          subscription_type: Attorney
          first_name: first_name
          email: email
      title: Activity
      type: object
    Activity_Show:
      example:
        data:
          date: 2000-01-23
          note: note
          rounded_quantity: 5.637376656633329
          subject:
            identifier: identifier
            secondary_identifier: secondary_identifier
            tertiary_identifier: tertiary_identifier
            id: 7
            type: Task
          flat_rate: true
          non_billable_total: 9.301444243932576
          quantity_in_hours: 6.027456183070403
          created_at: 2000-01-23T04:56:07.000+00:00
          activity_description:
            utbms_task_id: 4
            created_at: 2000-01-23T04:56:07.000+00:00
            category_type: category_type
            type: type
            utbms_activity_id: 2
            default: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            xero_service_code: xero_service_code
            visible_to_co_counsel: true
            accessible_to_user: true
            name: name
            etag: etag
            utbms_task_name: utbms_task_name
            currency: "{}"
            id: 3
          tax_setting: no_tax
          type: TimeEntry
          matter:
            open_date: 2000-01-23
            shared: true
            client_reference: client_reference
            billing_method: flat
            close_date: 2000-01-23
            custom_number: custom_number
            pending_date: 2000-01-23
            matter_stage_updated_at: 2000-01-23T04:56:07.000+00:00
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            last_activity_date: 2000-01-23
            billable: true
            client_id: 0
            number: 6
            has_tasks: true
            maildrop_address: maildrop_address
            updated_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            display_number: display_number
            currency: "{}"
            location: location
            id: 7
            status: Pending
          document_version:
            created_at: 2000-01-23T04:56:07.000+00:00
            version_number: 0
            document_id: 0
            uuid: uuid
            put_url: put_url
            filename: filename
            updated_at: 2000-01-23T04:56:07.000+00:00
            size: 9
            content_type: content_type
            fully_uploaded: true
            received_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 9
          reference: reference
          legal_aid_uk_activity:
            activity_sub_category: activity_sub_category
            form_of_civil_legal_service: 8
            tax_exclusive: true
            expert: 6
            uplift: 0.43431398
            json_key: json_key
            bolt_ons: bolt_ons
            eligible_for_sqm: true
            court: 4
            is_custom_rate: true
            bolt_ons_summary: bolt_ons_summary
            user_type: 2
            base_rate: 5.507387
            advocacy: 7
            id: 4
            region: 3
          timer:
            start_time: 2000-01-23T04:56:07.000+00:00
            updated_at: 2000-01-23T04:56:07.000+00:00
            elapsed_time: 3.0576100241049344
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 3
          total: 7.061401241503109
          billed: true
          text_message_conversation:
            etag: etag
            id: 7
          updated_at: 2000-01-23T04:56:07.000+00:00
          client_portal:
            unread_count: 7
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 3
            unread_notifiable_count: 0
          price: 2.3021358869347655
          on_bill: true
          expense_category:
            updated_at: 2000-01-23T04:56:07.000+00:00
            rate: 1
            accessible_to_user: true
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            currency: "{}"
            id: 7
            tax_setting: tax_setting
            entry_type: entry_type
            xero_expense_code: xero_expense_code
          utbms_expense:
            utbms_set_id: 0
            code: code
            updated_at: 2000-01-23T04:56:07.000+00:00
            name: name
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 4
            type: UtbmsTask
          vendor:
            secondary_email_address: secondary_email_address
            is_bill_recipient: true
            date_of_birth: 2000-01-23
            prefix: prefix
            created_at: 2000-01-23T04:56:07.000+00:00
            is_clio_for_client_user: true
            type: Company
            title: title
            primary_phone_number: primary_phone_number
            sales_tax_number: sales_tax_number
            updated_at: 2000-01-23T04:56:07.000+00:00
            has_clio_for_clients_permission: true
            currency: "{}"
            id: 6
            ledes_client_id: ledes_client_id
            first_name: first_name
            locked_clio_connect_email: true
            initials: initials
            primary_email_address: primary_email_address
            last_name: last_name
            middle_name: middle_name
            clio_connect_email: clio_connect_email
            client_connect_user_id: 4
            is_co_counsel: true
            name: name
            etag: etag
            is_client: true
            secondary_phone_number: secondary_phone_number
          contact_note:
            date: 2000-01-23
            updated_at: 2000-01-23T04:56:07.000+00:00
            subject: subject
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 4
            detail: detail
            time_entries_count: 8
            type: Matter
            detail_text_type: plain_text
          currency:
            code: code
            updated_at: 2000-01-23T04:56:07.000+00:00
            sign: sign
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 1
          id: 0
          communication:
            date: 2000-01-23
            updated_at: 2000-01-23T04:56:07.000+00:00
            subject: subject
            received_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 6
            time_entries_count: 3
            body: body
            type: EmailCommunication
          quantity: 5.962133916683182
          no_charge: true
          quantity_redacted: true
          contingency_fee: true
          bill:
            end_at: 2000-01-23
            shared: true
            services_secondary_taxable_sub_total: 3
            subject: subject
            pending: 5.025004791520295
            created_at: 2000-01-23T04:56:07.000+00:00
            memo: memo
            discount_services_only: discount_services_only
            credits_issued: 9.369310271410669
            type: MatterBill
            start_at: 2000-01-23
            services_tax: 9.018348186070783
            issued_at: 2000-01-23
            tax_rate: 1.4894159098541704
            secondary_tax_rate: 6.84685269835264
            number: number
            total: 1.1730742509559433
            updated_at: 2000-01-23T04:56:07.000+00:00
            balance: 7.457744773683766
            services_secondary_tax: 6.683562403749608
            tax_sum: 6.778324963048013
            due_at: 2000-01-23
            secondary_tax_sum: 6.878052220127876
            id: 1
            state: draft
            services_taxable_sub_total: 6
            can_update: true
            last_sent_at: 2000-01-23T04:56:07.000+00:00
            kind: revenue_kind
            total_tax: 5.944895607614016
            available_state_transitions:
            - awaiting_approval
            - awaiting_approval
            paid_at: 2000-01-23T04:56:07.000+00:00
            purchase_order: purchase_order
            due: 9.965781217890562
            secondary_taxable_sub_total: 1
            paid: 4.965218492984954
            taxable_sub_total: 6
            sub_total: 2.8841621266687802
            etag: etag
            services_sub_total: 8.762042012749001
          calendar_entry:
            calendar_owner_id: 1
            etag: etag
            id: id
          rounded_quantity_in_hours: 1.4658129805029452
          non_billable: true
          task:
            etag: etag
            id: 4
          etag: etag
          matter_note:
            date: 2000-01-23
            updated_at: 2000-01-23T04:56:07.000+00:00
            subject: subject
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 4
            detail: detail
            time_entries_count: 8
            type: Matter
            detail_text_type: plain_text
          user:
            court_rules_default_attendee: true
            clio_connect: true
            initials: initials
            roles:
            - roles
            - roles
            created_at: 2000-01-23T04:56:07.000+00:00
            last_name: last_name
            time_zone: time_zone
            account_owner: true
            enabled: true
            default_calendar_id: 7
            updated_at: 2000-01-23T04:56:07.000+00:00
            rate: 3.2588565
            name: name
            etag: etag
            phone_number: phone_number
            id: 5
            subscription_type: Attorney
            first_name: first_name
            email: email
      properties:
        data:
          $ref: '#/components/schemas/Activity'
      required:
      - data
      title: Activity_Show
      type: object
    Activity_List:
      example:
        data:
        - date: 2000-01-23
          note: note
          rounded_quantity: 5.637376656633329
          subject:
            identifier: identifier
            secondary_identifier: secondary_identifier
            tertiary_identifier: tertiary_identifier
            id: 7
            type: Task
          flat_rate: true
          non_billable_total: 9.301444243932576
          quantity_in_hours: 6.027456183070403
          created_at: 2000-01-23T04:56:07.000+00:00
          activity_description:
            utbms_task_id: 4
            created_at: 2000-01-23T04:56:07.000+00:00
            category_type: category_type
            type: type
            utbms_activity_id: 2
            default: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            xero_service_code: xero_service_code
            visible_to_co_counsel: true
            accessible_to_user: true
            name: name
            etag: etag
            utbms_task_name: utbms_task_name
            currency: "{}"
            id: 3
          tax_setting: no_tax
          type: TimeEntry
          matter:
            open_date: 2000-01-23
            shared: true
            client_reference: client_reference
            billing_method: flat
            close_date: 2000-01-23
            custom_number: custom_number
            pending_date: 2000-01-23
            matter_stage_updated_at: 2000-01-23T04:56:07.000+00:00
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            last_activity_date: 2000-01-23
            billable: true
            client_id: 0
            number: 6
            has_tasks: true
            maildrop_address: maildrop_address
            updated_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            display_number: display_number
            currency: "{}"
            location: location
            id: 7
            status: Pending
          document_version:
            created_at: 2000-01-23T04:56:07.000+00:00
            version_number: 0
            document_id: 0
            uuid: uuid
            put_url: put_url
            filename: filename
            updated_at: 2000-01-23T04:56:07.000+00:00
            size: 9
            content_type: content_type
            fully_uploaded: true
            received_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 9
          reference: reference
          legal_aid_uk_activity:
            activity_sub_category: activity_sub_category
            form_of_civil_legal_service: 8
            tax_exclusive: true
            expert: 6
            uplift: 0.43431398
            json_key: json_key
            bolt_ons: bolt_ons
            eligible_for_sqm: true
            court: 4
            is_custom_rate: true
            bolt_ons_summary: bolt_ons_summary
            user_type: 2
            base_rate: 5.507387
            advocacy: 7
            id: 4
            region: 3
          timer:
            start_time: 2000-01-23T04:56:07.000+00:00
            updated_at: 2000-01-23T04:56:07.000+00:00
            elapsed_time: 3.0576100241049344
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 3
          total: 7.061401241503109
          billed: true
          text_message_conversation:
            etag: etag
            id: 7
          updated_at: 2000-01-23T04:56:07.000+00:00
          client_portal:
            unread_count: 7
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 3
            unread_notifiable_count: 0
          price: 2.3021358869347655
          on_bill: true
          expense_category:
            updated_at: 2000-01-23T04:56:07.000+00:00
            rate: 1
            accessible_to_user: true
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            currency: "{}"
            id: 7
            tax_setting: tax_setting
            entry_type: entry_type
            xero_expense_code: xero_expense_code
          utbms_expense:
            utbms_set_id: 0
            code: code
            updated_at: 2000-01-23T04:56:07.000+00:00
            name: name
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 4
            type: UtbmsTask
          vendor:
            secondary_email_address: secondary_email_address
            is_bill_recipient: true
            date_of_birth: 2000-01-23
            prefix: prefix
            created_at: 2000-01-23T04:56:07.000+00:00
            is_clio_for_client_user: true
            type: Company
            title: title
            primary_phone_number: primary_phone_number
            sales_tax_number: sales_tax_number
            updated_at: 2000-01-23T04:56:07.000+00:00
            has_clio_for_clients_permission: true
            currency: "{}"
            id: 6
            ledes_client_id: ledes_client_id
            first_name: first_name
            locked_clio_connect_email: true
            initials: initials
            primary_email_address: primary_email_address
            last_name: last_name
            middle_name: middle_name
            clio_connect_email: clio_connect_email
            client_connect_user_id: 4
            is_co_counsel: true
            name: name
            etag: etag
            is_client: true
            secondary_phone_number: secondary_phone_number
          contact_note:
            date: 2000-01-23
            updated_at: 2000-01-23T04:56:07.000+00:00
            subject: subject
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 4
            detail: detail
            time_entries_count: 8
            type: Matter
            detail_text_type: plain_text
          currency:
            code: code
            updated_at: 2000-01-23T04:56:07.000+00:00
            sign: sign
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 1
          id: 0
          communication:
            date: 2000-01-23
            updated_at: 2000-01-23T04:56:07.000+00:00
            subject: subject
            received_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 6
            time_entries_count: 3
            body: body
            type: EmailCommunication
          quantity: 5.962133916683182
          no_charge: true
          quantity_redacted: true
          contingency_fee: true
          bill:
            end_at: 2000-01-23
            shared: true
            services_secondary_taxable_sub_total: 3
            subject: subject
            pending: 5.025004791520295
            created_at: 2000-01-23T04:56:07.000+00:00
            memo: memo
            discount_services_only: discount_services_only
            credits_issued: 9.369310271410669
            type: MatterBill
            start_at: 2000-01-23
            services_tax: 9.018348186070783
            issued_at: 2000-01-23
            tax_rate: 1.4894159098541704
            secondary_tax_rate: 6.84685269835264
            number: number
            total: 1.1730742509559433
            updated_at: 2000-01-23T04:56:07.000+00:00
            balance: 7.457744773683766
            services_secondary_tax: 6.683562403749608
            tax_sum: 6.778324963048013
            due_at: 2000-01-23
            secondary_tax_sum: 6.878052220127876
            id: 1
            state: draft
            services_taxable_sub_total: 6
            can_update: true
            last_sent_at: 2000-01-23T04:56:07.000+00:00
            kind: revenue_kind
            total_tax: 5.944895607614016
            available_state_transitions:
            - awaiting_approval
            - awaiting_approval
            paid_at: 2000-01-23T04:56:07.000+00:00
            purchase_order: purchase_order
            due: 9.965781217890562
            secondary_taxable_sub_total: 1
            paid: 4.965218492984954
            taxable_sub_total: 6
            sub_total: 2.8841621266687802
            etag: etag
            services_sub_total: 8.762042012749001
          calendar_entry:
            calendar_owner_id: 1
            etag: etag
            id: id
          rounded_quantity_in_hours: 1.4658129805029452
          non_billable: true
          task:
            etag: etag
            id: 4
          etag: etag
          matter_note:
            date: 2000-01-23
            updated_at: 2000-01-23T04:56:07.000+00:00
            subject: subject
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 4
            detail: detail
            time_entries_count: 8
            type: Matter
            detail_text_type: plain_text
          user:
            court_rules_default_attendee: true
            clio_connect: true
            initials: initials
            roles:
            - roles
            - roles
            created_at: 2000-01-23T04:56:07.000+00:00
            last_name: last_name
            time_zone: time_zone
            account_owner: true
            enabled: true
            default_calendar_id: 7
            updated_at: 2000-01-23T04:56:07.000+00:00
            rate: 3.2588565
            name: name
            etag: etag
            phone_number: phone_number
            id: 5
            subscription_type: Attorney
            first_name: first_name
            email: email
        - date: 2000-01-23
          note: note
          rounded_quantity: 5.637376656633329
          subject:
            identifier: identifier
            secondary_identifier: secondary_identifier
            tertiary_identifier: tertiary_identifier
            id: 7
            type: Task
          flat_rate: true
          non_billable_total: 9.301444243932576
          quantity_in_hours: 6.027456183070403
          created_at: 2000-01-23T04:56:07.000+00:00
          activity_description:
            utbms_task_id: 4
            created_at: 2000-01-23T04:56:07.000+00:00
            category_type: category_type
            type: type
            utbms_activity_id: 2
            default: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            xero_service_code: xero_service_code
            visible_to_co_counsel: true
            accessible_to_user: true
            name: name
            etag: etag
            utbms_task_name: utbms_task_name
            currency: "{}"
            id: 3
          tax_setting: no_tax
          type: TimeEntry
          matter:
            open_date: 2000-01-23
            shared: true
            client_reference: client_reference
            billing_method: flat
            close_date: 2000-01-23
            custom_number: custom_number
            pending_date: 2000-01-23
            matter_stage_updated_at: 2000-01-23T04:56:07.000+00:00
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            last_activity_date: 2000-01-23
            billable: true
            client_id: 0
            number: 6
            has_tasks: true
            maildrop_address: maildrop_address
            updated_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            display_number: display_number
            currency: "{}"
            location: location
            id: 7
            status: Pending
          document_version:
            created_at: 2000-01-23T04:56:07.000+00:00
            version_number: 0
            document_id: 0
            uuid: uuid
            put_url: put_url
            filename: filename
            updated_at: 2000-01-23T04:56:07.000+00:00
            size: 9
            content_type: content_type
            fully_uploaded: true
            received_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 9
          reference: reference
          legal_aid_uk_activity:
            activity_sub_category: activity_sub_category
            form_of_civil_legal_service: 8
            tax_exclusive: true
            expert: 6
            uplift: 0.43431398
            json_key: json_key
            bolt_ons: bolt_ons
            eligible_for_sqm: true
            court: 4
            is_custom_rate: true
            bolt_ons_summary: bolt_ons_summary
            user_type: 2
            base_rate: 5.507387
            advocacy: 7
            id: 4
            region: 3
          timer:
            start_time: 2000-01-23T04:56:07.000+00:00
            updated_at: 2000-01-23T04:56:07.000+00:00
            elapsed_time: 3.0576100241049344
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 3
          total: 7.061401241503109
          billed: true
          text_message_conversation:
            etag: etag
            id: 7
          updated_at: 2000-01-23T04:56:07.000+00:00
          client_portal:
            unread_count: 7
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 3
            unread_notifiable_count: 0
          price: 2.3021358869347655
          on_bill: true
          expense_category:
            updated_at: 2000-01-23T04:56:07.000+00:00
            rate: 1
            accessible_to_user: true
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            currency: "{}"
            id: 7
            tax_setting: tax_setting
            entry_type: entry_type
            xero_expense_code: xero_expense_code
          utbms_expense:
            utbms_set_id: 0
            code: code
            updated_at: 2000-01-23T04:56:07.000+00:00
            name: name
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 4
            type: UtbmsTask
          vendor:
            secondary_email_address: secondary_email_address
            is_bill_recipient: true
            date_of_birth: 2000-01-23
            prefix: prefix
            created_at: 2000-01-23T04:56:07.000+00:00
            is_clio_for_client_user: true
            type: Company
            title: title
            primary_phone_number: primary_phone_number
            sales_tax_number: sales_tax_number
            updated_at: 2000-01-23T04:56:07.000+00:00
            has_clio_for_clients_permission: true
            currency: "{}"
            id: 6
            ledes_client_id: ledes_client_id
            first_name: first_name
            locked_clio_connect_email: true
            initials: initials
            primary_email_address: primary_email_address
            last_name: last_name
            middle_name: middle_name
            clio_connect_email: clio_connect_email
            client_connect_user_id: 4
            is_co_counsel: true
            name: name
            etag: etag
            is_client: true
            secondary_phone_number: secondary_phone_number
          contact_note:
            date: 2000-01-23
            updated_at: 2000-01-23T04:56:07.000+00:00
            subject: subject
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 4
            detail: detail
            time_entries_count: 8
            type: Matter
            detail_text_type: plain_text
          currency:
            code: code
            updated_at: 2000-01-23T04:56:07.000+00:00
            sign: sign
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 1
          id: 0
          communication:
            date: 2000-01-23
            updated_at: 2000-01-23T04:56:07.000+00:00
            subject: subject
            received_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 6
            time_entries_count: 3
            body: body
            type: EmailCommunication
          quantity: 5.962133916683182
          no_charge: true
          quantity_redacted: true
          contingency_fee: true
          bill:
            end_at: 2000-01-23
            shared: true
            services_secondary_taxable_sub_total: 3
            subject: subject
            pending: 5.025004791520295
            created_at: 2000-01-23T04:56:07.000+00:00
            memo: memo
            discount_services_only: discount_services_only
            credits_issued: 9.369310271410669
            type: MatterBill
            start_at: 2000-01-23
            services_tax: 9.018348186070783
            issued_at: 2000-01-23
            tax_rate: 1.4894159098541704
            secondary_tax_rate: 6.84685269835264
            number: number
            total: 1.1730742509559433
            updated_at: 2000-01-23T04:56:07.000+00:00
            balance: 7.457744773683766
            services_secondary_tax: 6.683562403749608
            tax_sum: 6.778324963048013
            due_at: 2000-01-23
            secondary_tax_sum: 6.878052220127876
            id: 1
            state: draft
            services_taxable_sub_total: 6
            can_update: true
            last_sent_at: 2000-01-23T04:56:07.000+00:00
            kind: revenue_kind
            total_tax: 5.944895607614016
            available_state_transitions:
            - awaiting_approval
            - awaiting_approval
            paid_at: 2000-01-23T04:56:07.000+00:00
            purchase_order: purchase_order
            due: 9.965781217890562
            secondary_taxable_sub_total: 1
            paid: 4.965218492984954
            taxable_sub_total: 6
            sub_total: 2.8841621266687802
            etag: etag
            services_sub_total: 8.762042012749001
          calendar_entry:
            calendar_owner_id: 1
            etag: etag
            id: id
          rounded_quantity_in_hours: 1.4658129805029452
          non_billable: true
          task:
            etag: etag
            id: 4
          etag: etag
          matter_note:
            date: 2000-01-23
            updated_at: 2000-01-23T04:56:07.000+00:00
            subject: subject
            created_at: 2000-01-23T04:56:07.000+00:00
            etag: etag
            id: 4
            detail: detail
            time_entries_count: 8
            type: Matter
            detail_text_type: plain_text
          user:
            court_rules_default_attendee: true
            clio_connect: true
            initials: initials
            roles:
            - roles
            - roles
            created_at: 2000-01-23T04:56:07.000+00:00
            last_name: last_name
            time_zone: time_zone
            account_owner: true
            enabled: true
            default_calendar_id: 7
            updated_at: 2000-01-23T04:56:07.000+00:00
            rate: 3.2588565
            name: name
            etag: etag
            phone_number: phone_number
            id: 5
            subscription_type: Attorney
            first_name: first_name
            email: email
      properties:
        data:
          description: Activity List Response
          items:
            $ref: '#/components/schemas/Activity'
          title: data
          type: array
      required:
      - data
      title: Activity_List
      type: object
    Activity_CalendarEntry_base:
      example:
        calendar_owner_id: 1
        etag: etag
        id: id
      properties:
        id:
          description: Unique identifier for the *CalendarEntry*
          title: id
          type: string
        etag:
          description: ETag for the *CalendarEntry*
          title: etag
          type: string
        calendar_owner_id:
          description: The id of the calendar owner.
          format: int64
          title: calendar_owner_id
          type: integer
      title: Activity_CalendarEntry_base
      type: object
    Activity_Task_base:
      example:
        etag: etag
        id: 4
      properties:
        id:
          description: Unique identifier for the *Task*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Task*
          title: etag
          type: string
      title: Activity_Task_base
      type: object
    Activity_TextMessageConversation_base:
      example:
        etag: etag
        id: 7
      properties:
        id:
          description: Unique identifier for the *TextMessageConversation*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *TextMessageConversation*
          title: etag
          type: string
      title: Activity_TextMessageConversation_base
      type: object
    Address_base:
      properties:
        id:
          description: Unique identifier for the *Address*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Address*
          title: etag
          type: string
        street:
          description: Street of the *Address*
          title: street
          type: string
        city:
          description: City of the *Address*
          title: city
          type: string
        province:
          description: Province or state of the *Address*
          title: province
          type: string
        postal_code:
          description: Postal code of the *Address*
          title: postal_code
          type: string
        country:
          description: Country of the *Address*
          title: country
          type: string
        name:
          description: The name of the *Address*
          enum:
          - Work
          - Home
          - Billing
          - Other
          title: name
          type: string
        created_at:
          description: The time the *Address* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Address* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        primary:
          description: Whether it is the default for this contact
          title: primary
          type: boolean
      title: Address_base
      type: object
    Address:
      allOf:
      - $ref: '#/components/schemas/Address_base'
      - properties: {}
        type: object
      type: object
    Allocation_base:
      properties:
        id:
          description: Unique identifier for the *Allocation*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Allocation*
          title: etag
          type: string
        date:
          description: The date the allocation was applied (as a ISO-8601 date)
          format: date
          title: date
          type: string
        amount:
          description: The total amount of money that the user has allocated
          format: double
          title: amount
          type: number
        interest:
          description: Whether the allocation is applied to interest amount
          title: interest
          type: boolean
        voided_at:
          description: Time the *Allocation* was voided (as a ISO-8601 timestamp)
          format: date-time
          title: voided_at
          type: string
        created_at:
          description: The time the *Allocation* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Allocation* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        description:
          description: The description from the associated Credit Memo (if applicable)
          title: description
          type: string
        has_online_payment:
          description: Whether this allocation is associated with an online payment
            or not
          title: has_online_payment
          type: boolean
        destroyable:
          description: Whether the record can be deleted or not
          title: destroyable
          type: boolean
        payment_type:
          description: A string indicating whether the payment is a card or an eCheck
            payment.
          title: payment_type
          type: string
      title: Allocation_base
      type: object
    Allocation:
      allOf:
      - $ref: '#/components/schemas/Allocation_base'
      - properties:
          bill:
            $ref: '#/components/schemas/Bill_base'
          source_bank_account:
            $ref: '#/components/schemas/BankAccount_base'
          destination_bank_account:
            $ref: '#/components/schemas/BankAccount_base'
          matter:
            $ref: '#/components/schemas/Matter_base'
          contact:
            $ref: '#/components/schemas/Contact_base'
          parent:
            $ref: '#/components/schemas/PolymorphicObject_base'
        type: object
      title: Allocation
      type: object
    Allocation_Show:
      properties:
        data:
          $ref: '#/components/schemas/Allocation'
      required:
      - data
      type: object
    Allocation_List:
      properties:
        data:
          description: Allocation List Response
          items:
            $ref: '#/components/schemas/Allocation'
          type: array
      required:
      - data
      type: object
    Balance_base:
      properties:
        id:
          description: Unique identifier for the *Balance*
          format: int64
          title: id
          type: integer
        amount:
          description: The amount for this Balance.
          format: double
          title: amount
          type: number
        type:
          description: The type of Balance this data is for.
          enum:
          - Matter
          - Client
          title: type
          type: string
        interest_amount:
          description: The interest amount for this Balance.
          format: double
          title: interest_amount
          type: number
        due:
          description: "The amount due for this Balance, factoring in applicable discounts."
          format: double
          title: due
          type: number
      title: Balance_base
      type: object
    Balance:
      allOf:
      - $ref: '#/components/schemas/Balance_base'
      - properties: {}
        type: object
      type: object
    BankAccount_base:
      properties:
        account_number:
          description: The account number for *BankAccount*
          title: account_number
          type: string
        balance:
          description: The current balance of the *BankAccount*
          format: double
          title: balance
          type: number
        bank_transactions_count:
          description: The number of bank transactions associated with the account.
          format: int32
          title: bank_transactions_count
          type: integer
        clio_payment_page_link:
          description: Link to Single Payment Page which allows to transfer funds
            without logging in.
          title: clio_payment_page_link
          type: string
        clio_payment_page_qr_code:
          description: A QR code that links to a Single Payment Page which allows
            to transfer funds without logging in.
          title: clio_payment_page_qr_code
          type: string
        clio_payments_enabled:
          description: Whether the bank account is connected to Clio Payments
          title: clio_payments_enabled
          type: boolean
        controlled_account:
          description: Whether is a controlled account
          title: controlled_account
          type: boolean
        created_at:
          description: The time the *BankAccount* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        currency:
          description: The currency type of the *BankAccount*
          title: currency
          type: string
        currency_symbol:
          description: The currency symbol of the *BankAccount*
          title: currency_symbol
          type: string
        currency_id:
          description: The currency ID of the *BankAccount*
          format: double
          title: currency_id
          type: number
        default_account:
          description: Whether it is the default account
          title: default_account
          type: boolean
        domicile_branch:
          description: The name of the branch where the account was opened
          title: domicile_branch
          type: string
        etag:
          description: ETag for the *BankAccount*
          title: etag
          type: string
        general_ledger_number:
          description: General ledger number
          title: general_ledger_number
          type: string
        holder:
          description: The name of the person or business that owns the *BankAccount*
          title: holder
          type: string
        id:
          description: Unique identifier for the *BankAccount*
          format: int64
          title: id
          type: integer
        institution:
          description: The financial institution where the *BankAccount* is registered
          title: institution
          type: string
        name:
          description: The name of the *BankAccount*
          title: name
          type: string
        swift:
          description: A unique identification code for the financial institution
          title: swift
          type: string
        transit_number:
          description: Transit number for the bank account branch
          title: transit_number
          type: string
        type:
          description: The type of the *BankAccount*
          enum:
          - Operating
          - Trust
          title: type
          type: string
        updated_at:
          description: The time the *BankAccount* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: BankAccount_base
      type: object
    BankAccount:
      allOf:
      - $ref: '#/components/schemas/BankAccount_base'
      - properties:
          user:
            $ref: '#/components/schemas/User_base'
        type: object
      title: BankAccount
      type: object
    BankAccount_Show:
      properties:
        data:
          $ref: '#/components/schemas/BankAccount'
      required:
      - data
      type: object
    BankAccount_List:
      properties:
        data:
          description: BankAccount List Response
          items:
            $ref: '#/components/schemas/BankAccount'
          type: array
      required:
      - data
      type: object
    BankTransaction_base:
      properties:
        id:
          description: Unique identifier for the *BankTransaction*
          format: int64
          title: id
          type: integer
        type:
          description: The type of the *BankTransaction*
          title: type
          type: string
        etag:
          description: ETag for the *BankTransaction*
          title: etag
          type: string
        created_at:
          description: The time the *BankTransaction* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *BankTransaction* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        bank_account_id:
          description: The associated bank account.
          format: int64
          title: bank_account_id
          type: integer
        source:
          description: Where the transaction came from.
          title: source
          type: string
        confirmation:
          description: The reference code for the transaction.
          title: confirmation
          type: string
        date:
          description: The date of the transaction.
          format: date
          title: date
          type: string
        amount:
          description: The amount of the transaction.
          format: double
          title: amount
          type: number
        currency:
          description: The currency of the transaction.
          title: currency
          type: string
        currency_id:
          description: The id of the currency of the transaction.
          format: int64
          title: currency_id
          type: integer
        description:
          description: The description of the transaction.
          title: description
          type: string
        exchange_rate:
          description: The exchange rate of the transaction.
          format: double
          title: exchange_rate
          type: number
        transaction_type:
          description: What kind of transaction.
          title: transaction_type
          type: string
        funds_in:
          description: The amount of funds received in this transaction.
          format: double
          title: funds_in
          type: number
        funds_out:
          description: The amount of funds withdrawn in this transaction.
          format: double
          title: funds_out
          type: number
        clio_payments_transaction:
          description: Whether the transaction was created through online payments.
          title: clio_payments_transaction
          type: boolean
        current_account_balance:
          description: The current account balance.
          format: double
          title: current_account_balance
          type: number
        read_only_confirmation:
          description: Whether the transaction's reference code is read-only.
          title: read_only_confirmation
          type: boolean
      title: BankTransaction_base
      type: object
    BankTransaction:
      allOf:
      - $ref: '#/components/schemas/BankTransaction_base'
      - properties:
          client:
            $ref: '#/components/schemas/Contact_base'
          matter:
            $ref: '#/components/schemas/Matter_base'
          bank_account:
            $ref: '#/components/schemas/BankAccount_base'
          bill:
            $ref: '#/components/schemas/Bill_base'
          allocation:
            $ref: '#/components/schemas/Allocation_base'
        type: object
      title: BankTransaction
      type: object
    BankTransaction_Show:
      properties:
        data:
          $ref: '#/components/schemas/BankTransaction'
      required:
      - data
      type: object
    BankTransaction_List:
      properties:
        data:
          description: BankTransaction List Response
          items:
            $ref: '#/components/schemas/BankTransaction'
          type: array
      required:
      - data
      type: object
    BankTransfer_base:
      properties:
        id:
          description: Unique identifier for the *BankTransfer*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *BankTransfer*
          title: etag
          type: string
        amount:
          description: The amount of the transfer.
          format: double
          title: amount
          type: number
        date:
          description: The date of the transfer.
          format: date-time
          title: date
          type: string
        description:
          description: The description of the transfer.
          title: description
          type: string
        primary_authorizer:
          description: The primary authorizer of the transfer.
          title: primary_authorizer
          type: string
        secondary_authorizer:
          description: The secondary authorizer of the transfer.
          title: secondary_authorizer
          type: string
        created_at:
          description: The time the *BankTransfer* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *BankTransfer* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: BankTransfer_base
      type: object
    BankTransfer:
      allOf:
      - $ref: '#/components/schemas/BankTransfer_base'
      - properties:
          client:
            $ref: '#/components/schemas/Contact_base'
          destination_account:
            $ref: '#/components/schemas/BankAccount_base'
          matter:
            $ref: '#/components/schemas/Matter_base'
          source_account:
            $ref: '#/components/schemas/BankAccount_base'
        type: object
      title: BankTransfer
      type: object
    BankTransfer_Show:
      properties:
        data:
          $ref: '#/components/schemas/BankTransfer'
      required:
      - data
      type: object
    Bill_base:
      example:
        end_at: 2000-01-23
        shared: true
        services_secondary_taxable_sub_total: 3
        subject: subject
        pending: 5.025004791520295
        created_at: 2000-01-23T04:56:07.000+00:00
        memo: memo
        discount_services_only: discount_services_only
        credits_issued: 9.369310271410669
        type: MatterBill
        start_at: 2000-01-23
        services_tax: 9.018348186070783
        issued_at: 2000-01-23
        tax_rate: 1.4894159098541704
        secondary_tax_rate: 6.84685269835264
        number: number
        total: 1.1730742509559433
        updated_at: 2000-01-23T04:56:07.000+00:00
        balance: 7.457744773683766
        services_secondary_tax: 6.683562403749608
        tax_sum: 6.778324963048013
        due_at: 2000-01-23
        secondary_tax_sum: 6.878052220127876
        id: 1
        state: draft
        services_taxable_sub_total: 6
        can_update: true
        last_sent_at: 2000-01-23T04:56:07.000+00:00
        kind: revenue_kind
        total_tax: 5.944895607614016
        available_state_transitions:
        - awaiting_approval
        - awaiting_approval
        paid_at: 2000-01-23T04:56:07.000+00:00
        purchase_order: purchase_order
        due: 9.965781217890562
        secondary_taxable_sub_total: 1
        paid: 4.965218492984954
        taxable_sub_total: 6
        sub_total: 2.8841621266687802
        etag: etag
        services_sub_total: 8.762042012749001
      properties:
        id:
          description: Unique identifier for the *Bill*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Bill*
          title: etag
          type: string
        number:
          description: The *Bill* identifier (not necessarily numeric)'
          title: number
          type: string
        issued_at:
          description: The time the *Bill* was issued (as a ISO-8601 date)
          format: date
          title: issued_at
          type: string
        created_at:
          description: The time the *Bill* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        due_at:
          description: The date the *Bill* is due (as a ISO-8601 date)
          format: date
          title: due_at
          type: string
        tax_rate:
          description: The tax rate to the *Bill*
          format: double
          title: tax_rate
          type: number
        secondary_tax_rate:
          description: A secondary tax rate applied to the *Bill*
          format: double
          title: secondary_tax_rate
          type: number
        updated_at:
          description: The time the *Bill* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        subject:
          description: The subject of the *Bill*
          title: subject
          type: string
        purchase_order:
          description: The purchase order of the *Bill*
          title: purchase_order
          type: string
        type:
          description: The type of the *Bill*
          enum:
          - MatterBill
          - ClientBill
          title: type
          type: string
        memo:
          description: A memo for the *Bill*
          title: memo
          type: string
        start_at:
          description: The time the billing period starts (as a ISO-8601 date)
          format: date
          title: start_at
          type: string
        end_at:
          description: The time the billing period ends (as a ISO-8601 date)
          format: date
          title: end_at
          type: string
        balance:
          description: The outstanding balance of the *Bill*
          format: double
          title: balance
          type: number
        state:
          description: The billing state the *Bill* is in
          enum:
          - draft
          - awaiting_approval
          - awaiting_payment
          - paid
          - void
          - deleted
          title: state
          type: string
        kind:
          description: The kind of the *Bill*
          enum:
          - revenue_kind
          - summary_kind
          - trust_kind
          - aggregate_all
          - aggregate_split
          - aggregate_services
          - aggregate_expenses
          title: kind
          type: string
        total:
          description: The total with interest of the *Bill*
          format: double
          title: total
          type: number
        paid:
          description: The total amount paid for the *Bill*
          format: double
          title: paid
          type: number
        paid_at:
          description: The date of the last payment on the *Bill*
          format: date-time
          title: paid_at
          type: string
        pending:
          description: The amount of pending credit card payments on the *Bill*
          format: double
          title: pending
          type: number
        due:
          description: The total amount of the *Bill* with interest and less discounts
          format: double
          title: due
          type: number
        discount_services_only:
          description: The selected discount is applied to services only.
          title: discount_services_only
          type: string
        can_update:
          description: This value indicates if your *Bill*'s line items and information
            can be updated.
          title: can_update
          type: boolean
        credits_issued:
          description: The total credits issued for the *Bill*
          format: double
          title: credits_issued
          type: number
        shared:
          description: Whether the *Bill* is a shared
          title: shared
          type: boolean
        last_sent_at:
          description: The last time the *Bill* was sent (as a ISO-8601 date)
          format: date-time
          title: last_sent_at
          type: string
        services_secondary_tax:
          description: The total secondary tax of the bill's line items of a service
            kind
          format: double
          title: services_secondary_tax
          type: number
        services_sub_total:
          description: The sub total of all the bill's line items of a service kind
          format: double
          title: services_sub_total
          type: number
        services_tax:
          description: The total tax of the bill's line items of a service kind
          format: double
          title: services_tax
          type: number
        services_taxable_sub_total:
          description: The services portion of the bill's primary tax
          format: int64
          title: services_taxable_sub_total
          type: integer
        services_secondary_taxable_sub_total:
          description: The services portion of the bill's secondary tax
          format: int64
          title: services_secondary_taxable_sub_total
          type: integer
        taxable_sub_total:
          description: The total taxable bill amount
          format: int64
          title: taxable_sub_total
          type: integer
        secondary_taxable_sub_total:
          description: The subtotal of the bill's secondary tax
          format: int64
          title: secondary_taxable_sub_total
          type: integer
        sub_total:
          description: Sub total for the *Bill*
          format: double
          title: sub_total
          type: number
        tax_sum:
          description: Sum of primary tax for the model
          format: double
          title: tax_sum
          type: number
        secondary_tax_sum:
          description: Sum of secondary tax for the model
          format: double
          title: secondary_tax_sum
          type: number
        total_tax:
          description: The total amount of tax for the bill.
          format: double
          title: total_tax
          type: number
        available_state_transitions:
          description: The available *Bill* state transitions.
          items:
            enum:
            - awaiting_approval
            - awaiting_payment
            - paid
            - void
            - deleted
            type: string
          title: available_state_transitions
          type: array
      title: Bill_base
      type: object
    Bill:
      allOf:
      - $ref: '#/components/schemas/Bill_base'
      - properties:
          user:
            $ref: '#/components/schemas/User_base'
          client:
            $ref: '#/components/schemas/Contact_base'
          discount:
            $ref: '#/components/schemas/Discount_base'
          interest:
            $ref: '#/components/schemas/Interest_base'
          matters:
            description: Matter
            items:
              $ref: '#/components/schemas/Matter_base'
            type: array
          group:
            $ref: '#/components/schemas/Group_base'
          bill_theme:
            $ref: '#/components/schemas/BillTheme_base'
          original_bill:
            $ref: '#/components/schemas/Bill_base'
          destination_account:
            $ref: '#/components/schemas/BankAccount_base'
          balances:
            description: Balance
            items:
              $ref: '#/components/schemas/Balance_base'
            type: array
          matter_totals:
            description: MatterBalance
            items:
              $ref: '#/components/schemas/MatterBalance_base'
            type: array
          currency:
            $ref: '#/components/schemas/Currency_base'
          billing_setting:
            $ref: '#/components/schemas/BillingSetting_base'
          client_addresses:
            description: Address
            items:
              $ref: '#/components/schemas/Address_base'
            type: array
          legal_aid_uk_bill:
            $ref: '#/components/schemas/LegalAidUkBill_base'
          split_invoice:
            $ref: '#/components/schemas/SplitInvoice_base'
        type: object
      title: Bill
      type: object
    Bill_Show:
      properties:
        data:
          $ref: '#/components/schemas/Bill'
      required:
      - data
      type: object
    Bill_List:
      properties:
        data:
          description: Bill List Response
          items:
            $ref: '#/components/schemas/Bill'
          type: array
      required:
      - data
      type: object
    BillTheme_base:
      properties:
        id:
          description: Unique identifier for the *BillTheme*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *BillTheme*
          title: etag
          type: string
        created_at:
          description: The time the *BillTheme* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *BillTheme* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        account_id:
          description: The account number the *BillTheme* belongs to
          format: int64
          title: account_id
          type: integer
        default:
          description: Whether the *BillTheme* is the default for its account
          title: default
          type: boolean
        name:
          description: The name of the *BillTheme*
          title: name
          type: string
        config:
          description: The configuration of the *BillTheme*
          title: config
          type: string
      title: BillTheme_base
      type: object
    BillTheme:
      allOf:
      - $ref: '#/components/schemas/BillTheme_base'
      - properties: {}
        type: object
      title: BillTheme
      type: object
    BillTheme_Show:
      properties:
        data:
          $ref: '#/components/schemas/BillTheme'
      required:
      - data
      type: object
    BillTheme_List:
      properties:
        data:
          description: BillTheme List Response
          items:
            $ref: '#/components/schemas/BillTheme'
          type: array
      required:
      - data
      type: object
    BillableClient_base:
      properties:
        id:
          description: Unique identifier for the *BillableClient*
          format: int64
          title: id
          type: integer
        unbilled_hours:
          description: The unbilled hours of  the client
          format: double
          title: unbilled_hours
          type: number
        unbilled_amount:
          description: The unbilled amount of the client
          format: double
          title: unbilled_amount
          type: number
        amount_in_trust:
          description: The trust amount available for the client
          format: double
          title: amount_in_trust
          type: number
        name:
          description: The name of the Client
          title: name
          type: string
        billable_matters_count:
          description: The total number of billable matters the client has
          format: int32
          title: billable_matters_count
          type: integer
      title: BillableClient_base
      type: object
    BillableClient:
      allOf:
      - $ref: '#/components/schemas/BillableClient_base'
      - properties:
          billable_matters:
            description: BillableMatter
            items:
              $ref: '#/components/schemas/BillableMatter_base'
            type: array
        type: object
      title: BillableClient
      type: object
    BillableClient_List:
      properties:
        data:
          description: BillableClient List Response
          items:
            $ref: '#/components/schemas/BillableClient'
          type: array
      required:
      - data
      type: object
    BillableMatter_base:
      properties:
        currency_code:
          description: The currency code
          title: currency_code
          type: string
        currency_id:
          description: The currency ID
          format: int64
          title: currency_id
          type: integer
        id:
          description: Unique identifier for the *BillableMatter*
          format: int64
          title: id
          type: integer
        unbilled_hours:
          description: The unbilled number of hours for the matter
          format: double
          title: unbilled_hours
          type: number
        unbilled_amount:
          description: The unbilled amount for the matter
          format: double
          title: unbilled_amount
          type: number
        amount_in_trust:
          description: The trust amount available for the matter
          format: double
          title: amount_in_trust
          type: number
        display_number:
          description: The reference to the matter
          title: display_number
          type: string
      title: BillableMatter_base
      type: object
    BillableMatter:
      allOf:
      - $ref: '#/components/schemas/BillableMatter_base'
      - properties:
          client:
            $ref: '#/components/schemas/Contact_base'
        type: object
      title: BillableMatter
      type: object
    BillableMatter_Show:
      properties:
        data:
          $ref: '#/components/schemas/BillableMatter'
      required:
      - data
      type: object
    BillableMatter_List:
      properties:
        data:
          description: BillableMatter List Response
          items:
            $ref: '#/components/schemas/BillableMatter'
          type: array
      required:
      - data
      type: object
    CalendarEntryEventType_base:
      properties:
        id:
          description: Unique identifier for the *CalendarEntryEventType*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *CalendarEntryEventType*
          title: etag
          type: string
        created_at:
          description: The time the *CalendarEntryEventType* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *CalendarEntryEventType* was last updated (as
            a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        color:
          description: The color describing the *CalendarEntryEventType*
          enum:
          - '#367B9C'
          - '#FFA5A4'
          - '#83D17F'
          - '#FFAC7B'
          - '#8E3F64'
          - '#C75300'
          - '#009CEC'
          - '#62D6B1'
          - '#9EEDCB'
          - '#F9A2C4'
          - '#616161'
          - '#BBDA81'
          - '#DFD3F8'
          - '#D6C4A5'
          - '#FFD478'
          - '#6AC9DE'
          - '#EABBB0'
          - '#BFC2E1'
          - '#DADADA'
          - '#CDE2F5'
          title: color
          type: string
        name:
          description: The name for the *CalendarEntryEventType*
          title: name
          type: string
      title: CalendarEntryEventType_base
      type: object
    CalendarEntryEventType:
      allOf:
      - $ref: '#/components/schemas/CalendarEntryEventType_base'
      - properties: {}
        type: object
      type: object
    CalendarEntry_base:
      properties:
        id:
          description: Unique identifier for the *CalendarEntry*
          title: id
          type: string
        etag:
          description: ETag for the *CalendarEntry*
          title: etag
          type: string
        summary:
          description: A short summary of the *CalendarEntry*
          title: summary
          type: string
        description:
          description: A detailed description of the *CalendarEntry*
          title: description
          type: string
        location:
          description: The geographic location of the *CalendarEntry*
          title: location
          type: string
        start_at:
          description: The time the *CalendarEntry* starts (as an ISO-8601 timestamp)
          format: date-time
          title: start_at
          type: string
        end_at:
          description: The time the *CalendarEntry* ends (as an ISO-8601 timestamp)
          format: date-time
          title: end_at
          type: string
        all_day:
          description: Whether the event is all day
          title: all_day
          type: boolean
        recurrence_rule:
          description: Recurrence rule for expanding
          title: recurrence_rule
          type: string
        parent_calendar_entry_id:
          description: Identifier for the parent *CalendarEntry*
          format: int64
          title: parent_calendar_entry_id
          type: integer
        court_rule:
          description: Whether this event is associated with a Court Rule
          title: court_rule
          type: boolean
        created_at:
          description: The time the *CalendarEntry* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *CalendarEntry* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        permission:
          description: "The view permission for the current user, will return 'viewer'\
            \ when permission is 'limited_viewer' and the user is an attendee."
          title: permission
          type: string
        calendar_owner_id:
          description: The id of the calendar owner.
          format: int64
          title: calendar_owner_id
          type: integer
        start_at_time_zone:
          description: Original start at time zone of the event.
          title: start_at_time_zone
          type: string
        time_entries_count:
          description: The number of `TimeEntry` activities associated with the *CalendarEntry*
          format: int32
          title: time_entries_count
          type: integer
      title: CalendarEntry_base
      type: object
    CalendarEntry:
      allOf:
      - $ref: '#/components/schemas/CalendarEntry_base'
      - properties:
          time_entries:
            description: Activity
            items:
              $ref: '#/components/schemas/Activity_base'
            type: array
          conference_meeting:
            $ref: '#/components/schemas/ConferenceMeeting_base'
          matter:
            $ref: '#/components/schemas/Matter_base'
          matter_docket:
            $ref: '#/components/schemas/MatterDocket_base'
          calendar_owner:
            $ref: '#/components/schemas/Calendar_base'
          parent_calendar_entry:
            $ref: '#/components/schemas/CalendarEntry_base'
          calendar_entry_event_type:
            $ref: '#/components/schemas/CalendarEntryEventType_base'
          attendees:
            description: Attendee
            items:
              $ref: '#/components/schemas/Attendee_base'
            type: array
          calendars:
            description: Calendar
            items:
              $ref: '#/components/schemas/Calendar_base'
            type: array
          reminders:
            description: Reminder
            items:
              $ref: '#/components/schemas/Reminder_base'
            type: array
          external_properties:
            description: ExternalProperty
            items:
              $ref: '#/components/schemas/ExternalProperty_base'
            type: array
        type: object
      title: CalendarEntry
      type: object
    CalendarEntry_Show:
      properties:
        data:
          $ref: '#/components/schemas/CalendarEntry'
      required:
      - data
      type: object
    CalendarEntry_List:
      properties:
        data:
          description: CalendarEntry List Response
          items:
            $ref: '#/components/schemas/CalendarEntry'
          type: array
      required:
      - data
      type: object
    Calendar_base:
      properties:
        id:
          description: Unique identifier for the *Calendar*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Calendar*
          title: etag
          type: string
        color:
          description: Color
          enum:
          - '#367B9C'
          - '#FFA5A4'
          - '#83D17F'
          - '#FFAC7B'
          - '#8E3F64'
          - '#C75300'
          - '#009CEC'
          - '#62D6B1'
          - '#9EEDCB'
          - '#F9A2C4'
          - '#616161'
          - '#BBDA81'
          - '#DFD3F8'
          - '#D6C4A5'
          - '#FFD478'
          - '#6AC9DE'
          - '#EABBB0'
          - '#BFC2E1'
          - '#DADADA'
          - '#CDE2F5'
          title: color
          type: string
        light_color:
          description: Accent color to complement the main calendar color.
          enum:
          - '#5DA5C7'
          - '#F95957'
          - '#209412'
          - '#FF7715'
          - '#DE649D'
          - '#FF6B02'
          - '#56C4FC'
          - '#00B177'
          - '#50D19B'
          - '#F14A8C'
          - '#A3A2A2'
          - '#84AB3B'
          - '#B091EE'
          - '#BD9E69'
          - '#F2A000'
          - '#00A5CA'
          - '#CB5A3D'
          - '#959CD0'
          - '#B0B0B0'
          - '#7BA6CD'
          title: light_color
          type: string
        court_rules_default_calendar:
          description: Whether the calendar is default court rules calendar for current
            user
          title: court_rules_default_calendar
          type: boolean
        name:
          description: The name of the *Calendar*
          title: name
          type: string
        permission:
          description: The user's permission to the *Calendar*
          enum:
          - owner
          - editor
          - viewer
          - limited_viewer
          - none
          title: permission
          type: string
        type:
          description: The type of the *Calendar*
          enum:
          - AccountCalendar
          - AdhocCalendar
          - UserCalendar
          title: type
          type: string
        visible:
          description: Whether the *Calendar* will be shown by default in the Clio
            Web UI (assuming no source is provided).
          title: visible
          type: boolean
        created_at:
          description: The time the *Calendar* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Calendar* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        source:
          description: "The source that visible applies to, by default the Clio Web\
            \ UI (Expects 'mobile' or 'web')."
          enum:
          - web
          - mobile
          title: source
          type: string
      title: Calendar_base
      type: object
    Calendar:
      allOf:
      - $ref: '#/components/schemas/Calendar_base'
      - properties:
          creator:
            $ref: '#/components/schemas/User_base'
        type: object
      title: Calendar
      type: object
    Calendar_Show:
      properties:
        data:
          $ref: '#/components/schemas/Calendar'
      required:
      - data
      type: object
    Calendar_List:
      properties:
        data:
          description: Calendar List Response
          items:
            $ref: '#/components/schemas/Calendar'
          type: array
      required:
      - data
      type: object
    ClioPaymentsLink_base:
      properties:
        active:
          description: Whether or not the payment link is active.
          title: active
          type: boolean
        amount:
          description: "The defined amount of the payment link, if set."
          format: double
          title: amount
          type: number
        created_at:
          description: The time the *ClioPaymentsLink* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        currency:
          description: The currency the payment link will collect.
          title: currency
          type: string
        description:
          description: "The defined description of the payment link, if set."
          title: description
          type: string
        email_address:
          description: "The email address to pre-fill the field on the the payment\
            \ link, if set."
          title: email_address
          type: string
        etag:
          description: ETag for the *ClioPaymentsLink*
          title: etag
          type: string
        expires_at:
          description: The ISO 8601 date and time the payment link will expire.
          format: date-time
          title: expires_at
          type: string
        id:
          description: Unique identifier for the *ClioPaymentsLink*
          format: int64
          title: id
          type: integer
        is_allocated_as_revenue:
          description: Whether the payment link is allocated as revenue.
          title: is_allocated_as_revenue
          type: boolean
        redirect_url:
          description: The URL to redirect the client to after the payment has been
            made.
          title: redirect_url
          type: string
        url:
          description: The URL of the payment link.
          title: url
          type: string
      title: ClioPaymentsLink_base
      type: object
    ClioPaymentsLink:
      allOf:
      - $ref: '#/components/schemas/ClioPaymentsLink_base'
      - properties:
          bank_account:
            $ref: '#/components/schemas/BankAccount_base'
          bill:
            $ref: '#/components/schemas/Bill_base'
          clio_payments_payment:
            $ref: '#/components/schemas/ClioPaymentsPayment_base'
          contact:
            $ref: '#/components/schemas/Contact_base'
          destination_account:
            $ref: '#/components/schemas/BankAccount_base'
          destination_contact:
            $ref: '#/components/schemas/Contact_base'
        type: object
      title: ClioPaymentsLink
      type: object
    ClioPaymentsLink_Show:
      properties:
        data:
          $ref: '#/components/schemas/ClioPaymentsLink'
      required:
      - data
      type: object
    ClioPaymentsLink_List:
      properties:
        data:
          description: ClioPaymentsLink List Response
          items:
            $ref: '#/components/schemas/ClioPaymentsLink'
          type: array
      required:
      - data
      type: object
    ClioPaymentsPayment_base:
      properties:
        amount:
          description: The amount of the payment.
          format: double
          title: amount
          type: number
        confirmation_number:
          description: The confirmation number of the payment.
          title: confirmation_number
          type: string
        created_at:
          description: The time the *ClioPaymentsPayment* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        currency:
          description: The currency the payment was processed in.
          title: currency
          type: string
        deposit_as_revenue:
          description: Whether the payment was deposited as revenue.
          title: deposit_as_revenue
          type: boolean
        description:
          description: The description of the payment.
          title: description
          type: string
        email_address:
          description: The email address of the client.
          title: email_address
          type: string
        id:
          description: Unique identifier for the *ClioPaymentsPayment*
          format: int64
          title: id
          type: integer
        state:
          description: "The state of the payment (authorized, completed, failed, etc)."
          enum:
          - pending
          - authorized
          - completed
          - voided
          - failed
          - canceled
          - requires_confirmation
          - completed_requiring_allocation
          title: state
          type: string
        updated_at:
          description: The time the *ClioPaymentsPayment* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: ClioPaymentsPayment_base
      type: object
    ClioPaymentsPayment:
      allOf:
      - $ref: '#/components/schemas/ClioPaymentsPayment_base'
      - properties:
          bank_transaction:
            $ref: '#/components/schemas/BankTransaction_base'
          clio_payments_link:
            $ref: '#/components/schemas/ClioPaymentsLink_base'
          contact:
            $ref: '#/components/schemas/Contact_base'
          destination_account:
            $ref: '#/components/schemas/BankAccount_base'
          user:
            $ref: '#/components/schemas/User_base'
          allocations:
            description: Allocation
            items:
              $ref: '#/components/schemas/Allocation_base'
            type: array
          bills:
            description: Bill
            items:
              $ref: '#/components/schemas/Bill_base'
            type: array
          matters:
            description: Matter
            items:
              $ref: '#/components/schemas/Matter_base'
            type: array
        type: object
      title: ClioPaymentsPayment
      type: object
    ClioPaymentsPayment_Show:
      properties:
        data:
          $ref: '#/components/schemas/ClioPaymentsPayment'
      required:
      - data
      type: object
    ClioPaymentsPayment_List:
      properties:
        data:
          description: ClioPaymentsPayment List Response
          items:
            $ref: '#/components/schemas/ClioPaymentsPayment'
          type: array
      required:
      - data
      type: object
    Communication_base:
      example:
        date: 2000-01-23
        updated_at: 2000-01-23T04:56:07.000+00:00
        subject: subject
        received_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        etag: etag
        id: 6
        time_entries_count: 3
        body: body
        type: EmailCommunication
      properties:
        id:
          description: Unique identifier for the *Communication*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Communication*
          title: etag
          type: string
        subject:
          description: The subject line of the *Communication*
          title: subject
          type: string
        body:
          description: The main content of the *Communication*
          title: body
          type: string
        type:
          description: The type of the *Communication*
          enum:
          - EmailCommunication
          - PhoneCommunication
          title: type
          type: string
        date:
          description: The date of the *Communication* (as a ISO-8601 datestamp)
          format: date
          title: date
          type: string
        time_entries_count:
          description: The number of time_entries associated with the *Communication*
          format: int32
          title: time_entries_count
          type: integer
        created_at:
          description: The time the *Communication* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Communication* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        received_at:
          description: The date-time of the *Communication* (in ISO-8601 format)
          format: date-time
          title: received_at
          type: string
      title: Communication_base
      type: object
    Communication:
      allOf:
      - $ref: '#/components/schemas/Communication_base'
      - properties:
          user:
            $ref: '#/components/schemas/User_base'
          matter:
            $ref: '#/components/schemas/Matter_base'
          communication_eml_file:
            $ref: '#/components/schemas/CommunicationEmlFile_base'
          senders:
            description: Participant
            items:
              $ref: '#/components/schemas/Participant'
            type: array
          receivers:
            description: Participant
            items:
              $ref: '#/components/schemas/Participant'
            type: array
          external_properties:
            description: ExternalProperty
            items:
              $ref: '#/components/schemas/ExternalProperty_base'
            type: array
          time_entries:
            description: Activity
            items:
              $ref: '#/components/schemas/Activity_base'
            type: array
          documents:
            description: Document
            items:
              $ref: '#/components/schemas/Document_base'
            type: array
          notification_event_subscribers:
            description: NotificationEventSubscriber
            items:
              $ref: '#/components/schemas/NotificationEventSubscriber_base'
            type: array
        type: object
      title: Communication
      type: object
    Communication_Show:
      properties:
        data:
          $ref: '#/components/schemas/Communication'
      required:
      - data
      type: object
    Communication_List:
      properties:
        data:
          description: Communication List Response
          items:
            $ref: '#/components/schemas/Communication'
          type: array
      required:
      - data
      type: object
    Contact_base:
      example:
        secondary_email_address: secondary_email_address
        is_bill_recipient: true
        date_of_birth: 2000-01-23
        prefix: prefix
        created_at: 2000-01-23T04:56:07.000+00:00
        is_clio_for_client_user: true
        type: Company
        title: title
        primary_phone_number: primary_phone_number
        sales_tax_number: sales_tax_number
        updated_at: 2000-01-23T04:56:07.000+00:00
        has_clio_for_clients_permission: true
        currency: "{}"
        id: 6
        ledes_client_id: ledes_client_id
        first_name: first_name
        locked_clio_connect_email: true
        initials: initials
        primary_email_address: primary_email_address
        last_name: last_name
        middle_name: middle_name
        clio_connect_email: clio_connect_email
        client_connect_user_id: 4
        is_co_counsel: true
        name: name
        etag: etag
        is_client: true
        secondary_phone_number: secondary_phone_number
      properties:
        id:
          description: Unique identifier for the *Contact*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Contact*
          title: etag
          type: string
        name:
          description: The full name of the *Contact*
          title: name
          type: string
        first_name:
          description: First name of the Person
          title: first_name
          type: string
        middle_name:
          description: Middle name of the Person
          title: middle_name
          type: string
        last_name:
          description: Last name of the Person
          title: last_name
          type: string
        date_of_birth:
          description: Date of birth
          format: date
          title: date_of_birth
          type: string
        type:
          description: The type of the *Contact*
          enum:
          - Company
          - Person
          title: type
          type: string
        created_at:
          description: The time the *Contact* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Contact* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        prefix:
          description: "The prefix of the *Contact* (Mr, Mrs, etc)"
          title: prefix
          type: string
        title:
          description: The designated title of the *Contact*
          title: title
          type: string
        initials:
          description: The initials of the *Contact*
          title: initials
          type: string
        clio_connect_email:
          description: Clio Connect email if the *Contact* is a ClioConnect User
          title: clio_connect_email
          type: string
        locked_clio_connect_email:
          description: A boolean indicating if the ability to modify this *Contacts
            Clio connect email is locked.
          title: locked_clio_connect_email
          type: boolean
        client_connect_user_id:
          description: The ID for the Clio Connect user associated with this *Contact*
          format: int64
          title: client_connect_user_id
          type: integer
        primary_email_address:
          description: The primary email address associated with this *Contact*.
          title: primary_email_address
          type: string
        secondary_email_address:
          description: The secondary email address associated with this *Contact*.
          title: secondary_email_address
          type: string
        primary_phone_number:
          description: The primary phone number associated with this *Contact*.
          title: primary_phone_number
          type: string
        secondary_phone_number:
          description: The secondary phone number of the *Contact*.
          title: secondary_phone_number
          type: string
        ledes_client_id:
          description: LEDES client id of the Contact
          title: ledes_client_id
          type: string
        has_clio_for_clients_permission:
          description: True if at least one resource has been shared with the contact
            using Clio for Clients.
          title: has_clio_for_clients_permission
          type: boolean
        is_client:
          description: Whether or not the Contact is a client
          title: is_client
          type: boolean
        is_clio_for_client_user:
          description: Whether or not this contact has client_login and client_user
            (can be created due to addition to client portal or client_share_permissions)
          title: is_clio_for_client_user
          type: boolean
        is_co_counsel:
          description: Whether or not the Contact has matters shared as co-counsel
          title: is_co_counsel
          type: boolean
        is_bill_recipient:
          description: Whether the Contact is a bill recipient on at least one matter.
          title: is_bill_recipient
          type: boolean
        sales_tax_number:
          description: The sales tax number of the *Contact*
          title: sales_tax_number
          type: string
        currency:
          description: Currency of the *Contact*
          title: currency
          type: object
      title: Contact_base
      type: object
    Contact:
      allOf:
      - $ref: '#/components/schemas/Contact_base'
      - properties:
          activity_rates:
            description: ActivityRate
            items:
              $ref: '#/components/schemas/ActivityRate_base'
            type: array
          addresses:
            description: Address
            items:
              $ref: '#/components/schemas/Address_base'
            type: array
          custom_field_values:
            description: CustomFieldValue
            items:
              $ref: '#/components/schemas/CustomFieldValue'
            type: array
          custom_field_set_associations:
            description: CustomFieldSetAssociation
            items:
              $ref: '#/components/schemas/CustomFieldSetAssociation_base'
            type: array
          email_addresses:
            description: EmailAddress
            items:
              $ref: '#/components/schemas/EmailAddress_base'
            type: array
          instant_messengers:
            description: InstantMessenger
            items:
              $ref: '#/components/schemas/InstantMessenger_base'
            type: array
          phone_numbers:
            description: PhoneNumber
            items:
              $ref: '#/components/schemas/PhoneNumber_base'
            type: array
          web_sites:
            description: WebSite
            items:
              $ref: '#/components/schemas/WebSite_base'
            type: array
          notification_methods:
            description: NotificationMethod
            items:
              $ref: '#/components/schemas/NotificationMethod_base'
            type: array
          account_balances:
            description: AccountBalance
            items:
              $ref: '#/components/schemas/AccountBalance_base'
            type: array
          related_contacts:
            description: Contact
            items:
              $ref: '#/components/schemas/Contact_base'
            type: array
          primary_work_address:
            $ref: '#/components/schemas/Address_base'
          primary_address:
            $ref: '#/components/schemas/Address_base'
          secondary_address:
            $ref: '#/components/schemas/Address_base'
          company:
            $ref: '#/components/schemas/Contact_base'
          avatar:
            $ref: '#/components/schemas/Avatar_base'
          payment_profile:
            $ref: '#/components/schemas/PaymentProfile_base'
          folder:
            $ref: '#/components/schemas/Folder_base'
          co_counsel_rate:
            $ref: '#/components/schemas/ActivityRate_base'
          primary_web_site:
            $ref: '#/components/schemas/WebSite_base'
          legal_aid_uk_contact:
            $ref: '#/components/schemas/LegalAidUkContact_base'
          currency:
            $ref: '#/components/schemas/Currency_base'
        type: object
      title: Contact
      type: object
    Contact_Show:
      properties:
        data:
          $ref: '#/components/schemas/Contact'
      required:
      - data
      type: object
    Contact_List:
      properties:
        data:
          description: Contact List Response
          items:
            $ref: '#/components/schemas/Contact'
          type: array
      required:
      - data
      type: object
    ConversationMessage_base:
      properties:
        id:
          description: Unique identifier for the *ConversationMessage*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *ConversationMessage*
          title: etag
          type: string
        date:
          description: The creation date of the message in the current user's time
            zone
          title: date
          type: string
        body:
          description: The main content of the *ConversationMessage*
          title: body
          type: string
        created_at:
          description: The time the *ConversationMessage* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *ConversationMessage* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: ConversationMessage_base
      type: object
    ConversationMessage:
      allOf:
      - $ref: '#/components/schemas/ConversationMessage_base'
      - properties:
          sender:
            $ref: '#/components/schemas/UnredactedParticipant_base'
          document:
            $ref: '#/components/schemas/Document_base'
          conversation:
            $ref: '#/components/schemas/Conversation_base'
          receivers:
            description: UnredactedParticipant
            items:
              $ref: '#/components/schemas/UnredactedParticipant_base'
            type: array
        type: object
      title: ConversationMessage
      type: object
    ConversationMessage_Show:
      properties:
        data:
          $ref: '#/components/schemas/ConversationMessage'
      required:
      - data
      type: object
    ConversationMessage_List:
      properties:
        data:
          description: ConversationMessage List Response
          items:
            $ref: '#/components/schemas/ConversationMessage'
          type: array
      required:
      - data
      type: object
    Conversation_base:
      properties:
        id:
          description: Unique identifier for the *Conversation*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Conversation*
          title: etag
          type: string
        archived:
          description: Whether the conversation has been archived
          title: archived
          type: boolean
        read_only:
          description: Whether the conversation is read only
          title: read_only
          type: boolean
        current_user_is_member:
          description: Whether the current user is a member of this conversation
          title: current_user_is_member
          type: boolean
        subject:
          description: The subject of the *Conversation*
          title: subject
          type: string
        message_count:
          description: The number of messages in this conversation
          format: int64
          title: message_count
          type: integer
        time_entries_count:
          description: The number of time entries applied to this conversation
          format: int64
          title: time_entries_count
          type: integer
        read:
          description: Whether any messages in this conversation have been viewed
          title: read
          type: boolean
        created_at:
          description: The time the *Conversation* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Conversation* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: Conversation_base
      type: object
    Conversation:
      allOf:
      - $ref: '#/components/schemas/Conversation_base'
      - properties:
          last_message:
            $ref: '#/components/schemas/ConversationMessage_base'
          first_message:
            $ref: '#/components/schemas/ConversationMessage_base'
          matter:
            $ref: '#/components/schemas/Matter_base'
          messages:
            description: ConversationMessage
            items:
              $ref: '#/components/schemas/ConversationMessage_base'
            type: array
          documents:
            description: Document
            items:
              $ref: '#/components/schemas/Document_base'
            type: array
          memberships:
            description: ConversationMembership
            items:
              $ref: '#/components/schemas/ConversationMembership'
            type: array
        type: object
      title: Conversation
      type: object
    Conversation_Show:
      properties:
        data:
          $ref: '#/components/schemas/Conversation'
      required:
      - data
      type: object
    Conversation_List:
      properties:
        data:
          description: Conversation List Response
          items:
            $ref: '#/components/schemas/Conversation'
          type: array
      required:
      - data
      type: object
    Jurisdiction_base:
      properties:
        id:
          description: Unique identifier for the *Jurisdiction*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Jurisdiction*
          title: etag
          type: string
        created_at:
          description: The time the *Jurisdiction* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Jurisdiction* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        system_id:
          description: Server ID
          format: int64
          title: system_id
          type: integer
        description:
          description: Description
          title: description
          type: string
        default:
          description: Whether the *Jurisdiction* is default for the current user
          title: default
          type: boolean
        display_timezone:
          description: Formatted IANA timezone with UTC offset
          title: display_timezone
          type: string
        valid_subscription:
          description: Boolean value for whether the user has the jurisdictions
          title: valid_subscription
          type: boolean
        is_local_timezone:
          description: Boolean value for when the timezone is in the local users timezone
          title: is_local_timezone
          type: boolean
      title: Jurisdiction_base
      type: object
    Jurisdiction:
      allOf:
      - $ref: '#/components/schemas/Jurisdiction_base'
      - properties:
          service_types:
            description: ServiceType
            items:
              $ref: '#/components/schemas/ServiceType_base'
            type: array
        type: object
      title: Jurisdiction
      type: object
    Jurisdiction_Show:
      properties:
        data:
          $ref: '#/components/schemas/Jurisdiction'
      required:
      - data
      type: object
    Jurisdiction_List:
      properties:
        data:
          description: Jurisdiction List Response
          items:
            $ref: '#/components/schemas/Jurisdiction'
          type: array
      required:
      - data
      type: object
    JurisdictionsToTrigger_base:
      properties:
        id:
          description: Unique identifier for the *JurisdictionsToTrigger*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *JurisdictionsToTrigger*
          title: etag
          type: string
        system_id:
          description: Server id
          format: int64
          title: system_id
          type: integer
        description:
          description: A detailed description of the *JurisdictionsToTrigger*
          title: description
          type: string
        do_not_recalculate:
          description: Whether the associated dates should not be recalculated
          title: do_not_recalculate
          type: boolean
        is_served:
          description: Whether the user must select a Date Offset (Service Type)
          title: is_served
          type: boolean
        is_requirements_required:
          description: Whether the trigger has requirements
          title: is_requirements_required
          type: boolean
        created_at:
          description: The time the *JurisdictionsToTrigger* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *JurisdictionsToTrigger* was last updated (as
            a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: JurisdictionsToTrigger_base
      type: object
    JurisdictionsToTrigger:
      allOf:
      - $ref: '#/components/schemas/JurisdictionsToTrigger_base'
      - properties: {}
        type: object
      title: JurisdictionsToTrigger
      type: object
    JurisdictionsToTrigger_Show:
      properties:
        data:
          $ref: '#/components/schemas/JurisdictionsToTrigger'
      required:
      - data
      type: object
    JurisdictionsToTrigger_List:
      properties:
        data:
          description: JurisdictionsToTrigger List Response
          items:
            $ref: '#/components/schemas/JurisdictionsToTrigger'
          type: array
      required:
      - data
      type: object
    MatterDocket_base:
      properties:
        id:
          description: Unique identifier for the *MatterDocket*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *MatterDocket*
          title: etag
          type: string
        name:
          description: The name of the *MatterDocket*
          title: name
          type: string
        start_date:
          description: The date the *MatterDocket* will start (as a ISO-8601 date)
          format: date
          title: start_date
          type: string
        start_time:
          description: "The time the *MatterDocket* will start, required for specific\
            \ triggers (as a ISO-8601 timestamp)"
          format: date-time
          title: start_time
          type: string
        status:
          description: The status of the *MatterDocket* creation
          title: status
          type: string
        created_at:
          description: The time the *MatterDocket* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *MatterDocket* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        deleted_at:
          description: The time the *MatterDocket* was deleted (as a ISO-8601 timestamp)
          format: date-time
          title: deleted_at
          type: string
      title: MatterDocket_base
      type: object
    MatterDocket:
      allOf:
      - $ref: '#/components/schemas/MatterDocket_base'
      - properties:
          matter:
            $ref: '#/components/schemas/Matter_base'
          jurisdiction:
            $ref: '#/components/schemas/Jurisdiction_base'
          trigger:
            $ref: '#/components/schemas/JurisdictionsToTrigger_base'
          service_type:
            $ref: '#/components/schemas/ServiceType_base'
          calendar_entries:
            description: CalendarEntry
            items:
              $ref: '#/components/schemas/CalendarEntry_base'
            type: array
        type: object
      title: MatterDocket
      type: object
    MatterDocket_Show:
      properties:
        data:
          $ref: '#/components/schemas/MatterDocket'
      required:
      - data
      type: object
    MatterDocket_List:
      properties:
        data:
          description: MatterDocket List Response
          items:
            $ref: '#/components/schemas/MatterDocket'
          type: array
      required:
      - data
      type: object
    ServiceType_base:
      properties:
        id:
          description: Unique identifier for the *ServiceType*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *ServiceType*
          title: etag
          type: string
        created_at:
          description: The time the *ServiceType* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *ServiceType* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        system_id:
          description: Server ID
          format: int64
          title: system_id
          type: integer
        description:
          description: A detailed description of the *ServiceType*
          title: description
          type: string
        default:
          description: Whether *ServiceType* is default for the current user
          title: default
          type: boolean
      title: ServiceType_base
      type: object
    ServiceType:
      allOf:
      - $ref: '#/components/schemas/ServiceType_base'
      - properties: {}
        type: object
      title: ServiceType
      type: object
    ServiceType_Show:
      properties:
        data:
          $ref: '#/components/schemas/ServiceType'
      required:
      - data
      type: object
    ServiceType_List:
      properties:
        data:
          description: ServiceType List Response
          items:
            $ref: '#/components/schemas/ServiceType'
          type: array
      required:
      - data
      type: object
    CreditMemo_base:
      properties:
        id:
          description: Unique identifier for the *CreditMemo*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *CreditMemo*
          title: etag
          type: string
        date:
          description: Date the *CreditMemo* was recorded (as a ISO-8601 date)
          format: date
          title: date
          type: string
        amount:
          description: Total amount credited
          format: double
          title: amount
          type: number
        description:
          description: A detailed description for the *CreditMemo*
          title: description
          type: string
        discount:
          description: Whether the *CreditMemo* is applied as discount
          title: discount
          type: boolean
        voided_at:
          description: Time the *CreditMemo* was voided (as a ISO-8601 timestamp)
          format: date-time
          title: voided_at
          type: string
        created_at:
          description: The time the *CreditMemo* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *CreditMemo* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: CreditMemo_base
      type: object
    CreditMemo:
      allOf:
      - $ref: '#/components/schemas/CreditMemo_base'
      - properties:
          user:
            $ref: '#/components/schemas/User_base'
          contact:
            $ref: '#/components/schemas/Contact_base'
          allocations:
            description: Allocation
            items:
              $ref: '#/components/schemas/Allocation_base'
            type: array
        type: object
      title: CreditMemo
      type: object
    CreditMemo_Show:
      properties:
        data:
          $ref: '#/components/schemas/CreditMemo'
      required:
      - data
      type: object
    CreditMemo_List:
      properties:
        data:
          description: CreditMemo List Response
          items:
            $ref: '#/components/schemas/CreditMemo'
          type: array
      required:
      - data
      type: object
    Currency_base:
      example:
        code: code
        updated_at: 2000-01-23T04:56:07.000+00:00
        sign: sign
        created_at: 2000-01-23T04:56:07.000+00:00
        etag: etag
        id: 1
      properties:
        id:
          description: Unique identifier for the *Currency*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Currency*
          title: etag
          type: string
        code:
          description: ISO 4217 code for the *Currency*
          title: code
          type: string
        sign:
          description: Symbol used to denote monetary values using this *Currency*
          title: sign
          type: string
        created_at:
          description: The time the *Currency* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Currency* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: Currency_base
      type: object
    Currency:
      allOf:
      - $ref: '#/components/schemas/Currency_base'
      - properties: {}
        type: object
      title: Currency
      type: object
    Currency_List:
      properties:
        data:
          description: Currency List Response
          items:
            $ref: '#/components/schemas/Currency'
          type: array
      required:
      - data
      type: object
    CustomAction_base:
      properties:
        id:
          description: Unique identifier for the *CustomAction*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *CustomAction*
          title: etag
          type: string
        created_at:
          description: The time the *CustomAction* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *CustomAction* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        label:
          description: Text label to be displayed on the custom link.
          title: label
          type: string
        target_url:
          description: Target URL which will be opened in a new tab when the user
            clicks the custom link.
          title: target_url
          type: string
        ui_reference:
          description: UI reference location within Clio where the link will be displayed.
          enum:
          - activities/show
          - documents/show
          - contacts/show
          - matters/show
          - folders/show
          title: ui_reference
          type: string
      title: CustomAction_base
      type: object
    CustomAction:
      allOf:
      - $ref: '#/components/schemas/CustomAction_base'
      - properties: {}
        type: object
      title: CustomAction
      type: object
    CustomAction_Show:
      properties:
        data:
          $ref: '#/components/schemas/CustomAction'
      required:
      - data
      type: object
    CustomAction_List:
      properties:
        data:
          description: CustomAction List Response
          items:
            $ref: '#/components/schemas/CustomAction'
          type: array
      required:
      - data
      type: object
    CustomField_base:
      properties:
        id:
          description: Unique identifier for the *CustomField*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *CustomField*
          title: etag
          type: string
        created_at:
          description: The time the *CustomField* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *CustomField* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        name:
          description: The name of the *CustomField*
          title: name
          type: string
        parent_type:
          description: Type of object the *CustomField* is for
          enum:
          - Contact
          - Matter
          title: parent_type
          type: string
        field_type:
          description: Field type of the *CustomField*
          enum:
          - checkbox
          - contact
          - currency
          - date
          - time
          - email
          - matter
          - numeric
          - picklist
          - text_area
          - text_line
          - url
          title: field_type
          type: string
        displayed:
          description: Whether the *CustomField* is displayed by default
          title: displayed
          type: boolean
        deleted:
          description: Whether the *CustomField* is deleted for future use
          title: deleted
          type: boolean
        required:
          description: Whether the *CustomField* requires a value
          title: required
          type: boolean
        display_order:
          description: The display position of the *CustomField*
          format: int32
          title: display_order
          type: integer
      title: CustomField_base
      type: object
    CustomField:
      allOf:
      - $ref: '#/components/schemas/CustomField_base'
      - properties:
          picklist_options:
            description: PicklistOption
            items:
              $ref: '#/components/schemas/PicklistOption_base'
            type: array
        type: object
      title: CustomField
      type: object
    CustomField_Show:
      properties:
        data:
          $ref: '#/components/schemas/CustomField'
      required:
      - data
      type: object
    CustomField_List:
      properties:
        data:
          description: CustomField List Response
          items:
            $ref: '#/components/schemas/CustomField'
          type: array
      required:
      - data
      type: object
    CustomFieldSet_base:
      properties:
        id:
          description: Unique identifier for the *CustomFieldSet*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *CustomFieldSet*
          title: etag
          type: string
        name:
          description: The name of the custom field set.
          title: name
          type: string
        parent_type:
          description: Type of object the *CustomFieldSet* is for.
          enum:
          - Contact
          - Matter
          title: parent_type
          type: string
        displayed:
          description: Whether or not the *CustomFieldSet* should be displayed by
            default.
          title: displayed
          type: boolean
        created_at:
          description: The time the *CustomFieldSet* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *CustomFieldSet* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: CustomFieldSet_base
      type: object
    CustomFieldSet:
      allOf:
      - $ref: '#/components/schemas/CustomFieldSet_base'
      - properties:
          custom_fields:
            description: CustomField
            items:
              $ref: '#/components/schemas/CustomField_base'
            type: array
        type: object
      title: CustomFieldSet
      type: object
    CustomFieldSet_Show:
      properties:
        data:
          $ref: '#/components/schemas/CustomFieldSet'
      required:
      - data
      type: object
    CustomFieldSet_List:
      properties:
        data:
          description: CustomFieldSet List Response
          items:
            $ref: '#/components/schemas/CustomFieldSet'
          type: array
      required:
      - data
      type: object
    EmailAddress_base:
      properties:
        id:
          description: Unique identifier for the *EmailAddress*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *EmailAddress*
          title: etag
          type: string
        address:
          description: The address of the *EmailAddress*
          title: address
          type: string
        name:
          description: "A descriptive name for the *EmailAddress. Common values include\
            \ `Home`, `Work`, and `Other`, as these are the only selectable options\
            \ within Clio Manage, but other values may be returned for this field."
          title: name
          type: string
        primary:
          description: Whether it is the default for this contact
          title: primary
          type: boolean
        created_at:
          description: The time the *EmailAddress* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *EmailAddress* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: EmailAddress_base
      type: object
    EmailAddress:
      allOf:
      - $ref: '#/components/schemas/EmailAddress_base'
      - properties: {}
        type: object
      title: EmailAddress
      type: object
    EmailAddress_List:
      properties:
        data:
          description: EmailAddress List Response
          items:
            $ref: '#/components/schemas/EmailAddress'
          type: array
      required:
      - data
      type: object
    ExpenseCategory_base:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        rate: 1
        accessible_to_user: true
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        etag: etag
        currency: "{}"
        id: 7
        tax_setting: tax_setting
        entry_type: entry_type
        xero_expense_code: xero_expense_code
      properties:
        id:
          description: Unique identifier for the *ExpenseCategory*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *ExpenseCategory*
          title: etag
          type: string
        name:
          description: The name of the expense category
          title: name
          type: string
        rate:
          description: The price charged per unit cost
          format: int32
          title: rate
          type: integer
        entry_type:
          description: "The type of expense entry the category is associated to. Can\
            \ be either \"hard_cost\", \"soft_cost\" or \"unassociated\""
          title: entry_type
          type: string
        created_at:
          description: The time the *ExpenseCategory* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *ExpenseCategory* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        xero_expense_code:
          description: Custom Xero expense code for an expense category
          title: xero_expense_code
          type: string
        accessible_to_user:
          description: Determines if expense category is accessible to user
          title: accessible_to_user
          type: boolean
        tax_setting:
          description: The type of tax rate applied to the expense category.
          title: tax_setting
          type: string
        currency:
          description: The currency details for the expense category
          title: currency
          type: object
      title: ExpenseCategory_base
      type: object
    ExpenseCategory:
      allOf:
      - $ref: '#/components/schemas/ExpenseCategory_base'
      - properties:
          groups:
            description: Group
            items:
              $ref: '#/components/schemas/Group_base'
            type: array
          utbms_code:
            $ref: '#/components/schemas/UtbmsCode_base'
          currency:
            $ref: '#/components/schemas/Currency_base'
        type: object
      title: ExpenseCategory
      type: object
    ExpenseCategory_Show:
      properties:
        data:
          $ref: '#/components/schemas/ExpenseCategory'
      required:
      - data
      type: object
    ExpenseCategory_List:
      properties:
        data:
          description: ExpenseCategory List Response
          items:
            $ref: '#/components/schemas/ExpenseCategory'
          type: array
      required:
      - data
      type: object
    GrantFundingSource_base:
      properties:
        id:
          description: Unique identifier for the *GrantFundingSource*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *GrantFundingSource*
          title: etag
          type: string
        name:
          description: The name of the *GrantFundingSource*
          title: name
          type: string
        created_at:
          description: The time the *GrantFundingSource* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *GrantFundingSource* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: GrantFundingSource_base
      type: object
    GrantFundingSource:
      allOf:
      - $ref: '#/components/schemas/GrantFundingSource_base'
      - properties:
          grants:
            description: Grant
            items:
              $ref: '#/components/schemas/Grant_base'
            type: array
        type: object
      title: GrantFundingSource
      type: object
    GrantFundingSource_Show:
      properties:
        data:
          $ref: '#/components/schemas/GrantFundingSource'
      required:
      - data
      type: object
    GrantFundingSource_List:
      properties:
        data:
          description: GrantFundingSource List Response
          items:
            $ref: '#/components/schemas/GrantFundingSource'
          type: array
      required:
      - data
      type: object
    Grant_base:
      properties:
        id:
          description: Unique identifier for the *Grant*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Grant*
          title: etag
          type: string
        name:
          description: The name of the *Grant*
          title: name
          type: string
        funding_code:
          description: Funding code of the grant
          title: funding_code
          type: string
        funding_code_and_name:
          description: Funding code and name of the grant
          title: funding_code_and_name
          type: string
        funding_source_name:
          description: Name of the funding source of the grant
          title: funding_source_name
          type: string
        created_at:
          description: The time the *Grant* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Grant* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        balance:
          description: Balance of the grant
          title: balance
          type: string
        start_date:
          description: Start date of the grant
          format: date
          title: start_date
          type: string
        end_date:
          description: End date of the grant
          format: date
          title: end_date
          type: string
      title: Grant_base
      type: object
    Grant:
      allOf:
      - $ref: '#/components/schemas/Grant_base'
      - properties:
          grant_funding_source:
            $ref: '#/components/schemas/GrantFundingSource_base'
        type: object
      title: Grant
      type: object
    Grant_Show:
      properties:
        data:
          $ref: '#/components/schemas/Grant'
      required:
      - data
      type: object
    Grant_List:
      properties:
        data:
          description: Grant List Response
          items:
            $ref: '#/components/schemas/Grant'
          type: array
      required:
      - data
      type: object
    Group_base:
      properties:
        client_connect_user:
          description: Whether or not the Group is a UserGroup for a Clio Connect
            User
          title: client_connect_user
          type: boolean
        etag:
          description: ETag for the *Group*
          title: etag
          type: string
        id:
          description: Unique identifier for the *Group*
          format: int64
          title: id
          type: integer
        name:
          description: The name of the *Group*
          title: name
          type: string
        type:
          description: The type of the *Group*
          enum:
          - UserGroup
          - AdhocGroup
          - AccountGroup
          - TeamGroup
          title: type
          type: string
        updated_at:
          description: The time the *Group* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: Group_base
      type: object
    Group:
      allOf:
      - $ref: '#/components/schemas/Group_base'
      - properties:
          users:
            description: User
            items:
              $ref: '#/components/schemas/User_base'
            type: array
        type: object
      title: Group
      type: object
    Group_Show:
      properties:
        data:
          $ref: '#/components/schemas/Group'
      required:
      - data
      type: object
    Group_List:
      properties:
        data:
          description: Group List Response
          items:
            $ref: '#/components/schemas/Group'
          type: array
      required:
      - data
      type: object
    InterestCharge_base:
      properties:
        id:
          description: Unique identifier for the *InterestCharge*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *InterestCharge*
          title: etag
          type: string
        date:
          description: The *InterestCharge* date (as a ISO-8601 date)
          format: date
          title: date
          type: string
        description:
          description: The description for the *InterestCharge*
          title: description
          type: string
        total:
          description: The total amount for the *InterestCharge*
          format: double
          title: total
          type: number
        created_at:
          description: The time the *InterestCharge* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *InterestCharge* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: InterestCharge_base
      type: object
    InterestCharge:
      allOf:
      - $ref: '#/components/schemas/InterestCharge_base'
      - properties:
          bill:
            $ref: '#/components/schemas/Bill_base'
          balances:
            description: Balance
            items:
              $ref: '#/components/schemas/Balance_base'
            type: array
          matters:
            description: Matter
            items:
              $ref: '#/components/schemas/Matter_base'
            type: array
        type: object
      title: InterestCharge
      type: object
    InterestCharge_List:
      properties:
        data:
          description: InterestCharge List Response
          items:
            $ref: '#/components/schemas/InterestCharge'
          type: array
      required:
      - data
      type: object
    Interest_base:
      properties:
        balance:
          description: Interest balance for the object
          format: double
          title: balance
          type: number
        period:
          description: Number of days that represent the frequency which your *Interest%*
            will be applied
          format: int32
          title: period
          type: integer
        rate:
          description: Rate for the *Interest%*
          format: double
          title: rate
          type: number
        total:
          description: Interest total for the object
          format: double
          title: total
          type: number
        type:
          description: Type of *Interest%* being applied
          enum:
          - simple
          - compound
          title: type
          type: string
      title: Interest_base
      type: object
    Interest:
      allOf:
      - $ref: '#/components/schemas/Interest_base'
      - properties: {}
        type: object
      type: object
    EventMetrics_base:
      properties:
        unread_mobile_events:
          description: The number of unread mobile event notifications for the current
            user
          format: int64
          title: unread_mobile_events
          type: integer
        unread_web_events:
          description: The number of unread web event notifications for the current
            user
          format: int64
          title: unread_web_events
          type: integer
        unread_secure_messages:
          description: The number of unread secure messages for the current user
          format: int64
          title: unread_secure_messages
          type: integer
        unread_client_portal_messages:
          description: The number of unread client portal messages for the current
            user
          format: int64
          title: unread_client_portal_messages
          type: integer
        unread_text_messages:
          description: The number of unread text messages for the current user
          format: int64
          title: unread_text_messages
          type: integer
      title: EventMetrics_base
      type: object
    EventMetrics:
      allOf:
      - $ref: '#/components/schemas/EventMetrics_base'
      - properties: {}
        type: object
      title: EventMetrics
      type: object
    EventMetrics_Show:
      properties:
        data:
          $ref: '#/components/schemas/EventMetrics'
      required:
      - data
      type: object
    MyEvent_base:
      properties: {}
      type: object
    MyEvent:
      allOf:
      - $ref: '#/components/schemas/MyEvent_base'
      - properties:
          event:
            $ref: '#/components/schemas/Event_base'
        type: object
      title: MyEvent
      type: object
    MyEvent_Show:
      properties:
        data:
          $ref: '#/components/schemas/MyEvent'
      required:
      - data
      type: object
    MyEvent_List:
      properties:
        data:
          description: MyEvent List Response
          items:
            $ref: '#/components/schemas/MyEvent'
          type: array
      required:
      - data
      type: object
    Event_base:
      properties:
        id:
          description: Unique identifier for the *Event*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Event*
          title: etag
          type: string
        message:
          description: Concise headline message describing the event
          title: message
          type: string
        icon:
          description: Font Awesome icon to display (without the fa- prefix)
          title: icon
          type: string
        title:
          description: "The title or subject of the event (e.g. Matter Number, Document\
            \ Title)"
          title: title
          type: string
        title_url:
          description: Target URL that will be opened if the user clicks on the event
            title
          title: title_url
          type: string
        description:
          description: Description or additional information about the event (e.g.
            Matter Description)
          title: description
          type: string
        description_url:
          description: Target URL that will be opened if the user clicks on the event
            description
          title: description_url
          type: string
        primary_detail:
          description: "Optional additional information about the event (e.g. Matter\
            \ Client, Document Author)"
          title: primary_detail
          type: string
        primary_detail_url:
          description: Target URL that will be opened if the user clicks on the primary
            detail
          title: primary_detail_url
          type: string
        secondary_detail:
          description: "Optional additional information about the event (e.g. Matter\
            \ Status, Document Size)"
          title: secondary_detail
          type: string
        secondary_detail_url:
          description: Target URL that will be opened if the user clicks on the secondary
            detail
          title: secondary_detail_url
          type: string
        occurred_at:
          description: When the event occurred
          format: date-time
          title: occurred_at
          type: string
        mobile_icon:
          description: Icon to be displayed in the mobile app
          title: mobile_icon
          type: string
        subject_type:
          description: "The type of subject that triggered the notification (e.g.\
            \ Matter, Document)"
          title: subject_type
          type: string
        subject_id:
          description: Id of the subject that triggered the notification
          format: int64
          title: subject_id
          type: integer
      title: Event_base
      type: object
    Event:
      allOf:
      - $ref: '#/components/schemas/Event_base'
      - properties: {}
        type: object
      type: object
    LaukCivilCertificatedRate_base:
      properties:
        id:
          description: Unique identifier for the *LaukCivilCertificatedRate*
          format: int64
          title: id
          type: integer
        activity:
          description: Activity of the *LaukCivilCertificatedRate*
          title: activity
          type: string
        activity_sub_category:
          description: Activity sub-category
          title: activity_sub_category
          type: string
        activity_type:
          description: Activity type
          title: activity_type
          type: string
        attended_several_hearings_for_multiple_clients:
          description: Multiple hearings for multiple clients indicator
          title: attended_several_hearings_for_multiple_clients
          type: boolean
        category_of_law:
          description: Category of law
          title: category_of_law
          type: string
        created_at:
          description: The time the *LaukCivilCertificatedRate* was created (as a
            ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        change_of_solicitor:
          description: Change of solicitor indicator
          title: change_of_solicitor
          type: boolean
        court:
          description: Court associated
          title: court
          type: string
        eligible_for_sqm:
          description: SQM eligibility (Legal Aid England and Wales)
          title: eligible_for_sqm
          type: boolean
        exceptional:
          description: Fee applied for high activity count
          format: decimal
          title: exceptional
          type: number
        exceptional_warning:
          description: Warning for exceptional status
          title: exceptional_warning
          type: string
        etag:
          description: ETag for the *LaukCivilCertificatedRate*
          title: etag
          type: string
        fee:
          description: Fee amount
          format: decimal
          title: fee
          type: number
        fee_scheme:
          description: Fee scheme
          title: fee_scheme
          type: string
        first_conducting_solicitor:
          description: First conducting solicitor indicator
          title: first_conducting_solicitor
          type: boolean
        key:
          description: Unique key
          title: key
          type: string
        number_of_clients:
          description: Number of clients
          title: number_of_clients
          type: string
        party:
          description: Associated party
          title: party
          type: string
        post_transfer_clients_represented:
          description: Post-transfer clients represented
          title: post_transfer_clients_represented
          type: string
        rate_type:
          description: Rate type
          title: rate_type
          type: string
        region:
          description: Region
          title: region
          type: string
        session_type:
          description: Session type
          title: session_type
          type: string
        user_type:
          description: User type
          title: user_type
          type: string
        updated_at:
          description: The time the *LaukCivilCertificatedRate* was last updated (as
            a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: LaukCivilCertificatedRate_base
      type: object
    LaukCivilCertificatedRate:
      allOf:
      - $ref: '#/components/schemas/LaukCivilCertificatedRate_base'
      - properties: {}
        type: object
      title: LaukCivilCertificatedRate
      type: object
    LaukCivilCertificatedRate_List:
      properties:
        data:
          description: LaukCivilCertificatedRate List Response
          items:
            $ref: '#/components/schemas/LaukCivilCertificatedRate'
          type: array
      required:
      - data
      type: object
    LaukCivilControlledRate_base:
      properties:
        id:
          description: Unique identifier for the *LaukCivilControlledRate*
          format: int64
          title: id
          type: integer
        activity:
          description: Activity of the *LaukCivilControlledRate*
          title: activity
          type: string
        activity_type:
          description: Activity type
          title: activity_type
          type: string
        category_of_law:
          description: Category of law
          title: category_of_law
          type: string
        created_at:
          description: The time the *LaukCivilControlledRate* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        etag:
          description: ETag for the *LaukCivilControlledRate*
          title: etag
          type: string
        exceptional:
          description: Fee applied for high activity count
          format: decimal
          title: exceptional
          type: number
        fee:
          description: Fee amount
          format: decimal
          title: fee
          type: number
        fee_scheme:
          description: Fee scheme
          title: fee_scheme
          type: string
        key:
          description: Unique key
          title: key
          type: string
        rate_type:
          description: Rate type
          title: rate_type
          type: string
        region:
          description: Region
          title: region
          type: string
        updated_at:
          description: The time the *LaukCivilControlledRate* was last updated (as
            a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: LaukCivilControlledRate_base
      type: object
    LaukCivilControlledRate:
      allOf:
      - $ref: '#/components/schemas/LaukCivilControlledRate_base'
      - properties: {}
        type: object
      title: LaukCivilControlledRate
      type: object
    LaukCivilControlledRate_List:
      properties:
        data:
          description: LaukCivilControlledRate List Response
          items:
            $ref: '#/components/schemas/LaukCivilControlledRate'
          type: array
      required:
      - data
      type: object
    LaukCriminalControlledRate_base:
      properties:
        id:
          description: Unique identifier for the *LaukCriminalControlledRate*
          format: int64
          title: id
          type: integer
        activity:
          description: Activity of the *LaukCriminalControlledRate*
          title: activity
          type: string
        activity_type:
          description: Activity type
          title: activity_type
          type: string
        category_of_law:
          description: Category of law
          title: category_of_law
          type: string
        counsel:
          description: Associated counsel
          title: counsel
          type: string
        court:
          description: Court associated
          title: court
          type: string
        created_at:
          description: The time the *LaukCriminalControlledRate* was created (as a
            ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        etag:
          description: ETag for the *LaukCriminalControlledRate*
          title: etag
          type: string
        exceptional:
          description: Fee applied for high activity count
          format: decimal
          title: exceptional
          type: number
        fee:
          description: Fee amount
          format: decimal
          title: fee
          type: number
        fee_scheme:
          description: Fee scheme
          title: fee_scheme
          type: string
        post_nov_24_exceptional:
          description: Post-Nov 24 exceptional fee
          format: decimal
          title: post_nov_24_exceptional
          type: number
        post_nov_24_fee:
          description: Post-Nov 24 fee amount
          format: decimal
          title: post_nov_24_fee
          type: number
        post_sept_22_exceptional:
          description: Post-Sept 22 exceptional fee
          format: decimal
          title: post_sept_22_exceptional
          type: number
        post_sept_22_fee:
          description: Post-Sept 22 fee amount
          format: decimal
          title: post_sept_22_fee
          type: number
        key:
          description: Unique key
          title: key
          type: string
        rate_type:
          description: Rate type
          title: rate_type
          type: string
        region:
          description: Region
          title: region
          type: string
        solicitor_type:
          description: Solicitor type
          title: solicitor_type
          type: string
        updated_at:
          description: The time the *LaukCriminalControlledRate* was last updated
            (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: LaukCriminalControlledRate_base
      type: object
    LaukCriminalControlledRate:
      allOf:
      - $ref: '#/components/schemas/LaukCriminalControlledRate_base'
      - properties: {}
        type: object
      title: LaukCriminalControlledRate
      type: object
    LaukCriminalControlledRate_List:
      properties:
        data:
          description: LaukCriminalControlledRate List Response
          items:
            $ref: '#/components/schemas/LaukCriminalControlledRate'
          type: array
      required:
      - data
      type: object
    LaukExpenseCategory_base:
      properties:
        certificated:
          description: Certificated boolean identifier for expense
          title: certificated
          type: boolean
        civil:
          description: Civil boolean identifier for expense
          title: civil
          type: boolean
        created_at:
          description: The time the *LaukExpenseCategory* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        criminal:
          description: Criminal boolean identifier for expense
          title: criminal
          type: boolean
        etag:
          description: ETag for the *LaukExpenseCategory*
          title: etag
          type: string
        id:
          description: Unique identifier for the *LaukExpenseCategory*
          format: int64
          title: id
          type: integer
        key:
          description: Unique key
          title: key
          type: string
        name:
          description: Expense name
          title: name
          type: string
        rate:
          description: Determines rate based on region param
          format: decimal
          title: rate
          type: number
        updated_at:
          description: The time the *LaukExpenseCategory* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: LaukExpenseCategory_base
      type: object
    LaukExpenseCategory:
      allOf:
      - $ref: '#/components/schemas/LaukExpenseCategory_base'
      - properties: {}
        type: object
      title: LaukExpenseCategory
      type: object
    LaukExpenseCategory_List:
      properties:
        data:
          description: LaukExpenseCategory List Response
          items:
            $ref: '#/components/schemas/LaukExpenseCategory'
          type: array
      required:
      - data
      type: object
    LineItem_base:
      properties:
        id:
          description: Unique identifier for the *LineItem*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *LineItem*
          title: etag
          type: string
        type:
          description: The type of the *LineItem*
          enum:
          - ActivityLineItem
          - LineItem
          - NoChargeLineItem
          - SummaryLineItem
          title: type
          type: string
        description:
          description: The description for the *LineItem*
          title: description
          type: string
        date:
          description: The *LineItem* date (as a ISO-8601 date)
          format: date
          title: date
          type: string
        price:
          description: The price of the *LineItem*
          format: double
          title: price
          type: number
        taxable:
          description: Whether the *LineItem* is taxable
          title: taxable
          type: boolean
        kind:
          description: The kind of *LineItem*
          enum:
          - Service
          - Expense
          title: kind
          type: string
        note:
          description: The note attached to the *LineItem*
          title: note
          type: string
        secondary_taxable:
          description: Whether the *LineItem* is secondary taxable
          title: secondary_taxable
          type: boolean
        total:
          description: The total amount for the *LineItem*
          format: double
          title: total
          type: number
        tax:
          description: The tax amount for the *LineItem*
          format: double
          title: tax
          type: number
        secondary_tax:
          description: The secondary tax amount for the *LineItem*
          format: double
          title: secondary_tax
          type: number
        sub_total:
          description: The subtotal amount for the *LineItem*
          format: double
          title: sub_total
          type: number
        quantity:
          description: The amount of hours for the *LineItem*
          format: double
          title: quantity
          type: number
        group_ordering:
          description: The value to specify the ordering of the *LineItem* on a bill
          format: int32
          title: group_ordering
          type: integer
        created_at:
          description: The time the *LineItem* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *LineItem* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: LineItem_base
      type: object
    LineItem:
      allOf:
      - $ref: '#/components/schemas/LineItem_base'
      - properties:
          bill:
            $ref: '#/components/schemas/Bill_base'
          activity:
            $ref: '#/components/schemas/Activity_base'
          matter:
            $ref: '#/components/schemas/Matter_base'
          user:
            $ref: '#/components/schemas/User_base'
          discount:
            $ref: '#/components/schemas/Discount_base'
          included_line_item_totals:
            $ref: '#/components/schemas/LineItemTotals_base'
        type: object
      title: LineItem
      type: object
    LineItem_Show:
      properties:
        data:
          $ref: '#/components/schemas/LineItem'
      required:
      - data
      type: object
    LineItem_List:
      properties:
        data:
          description: LineItem List Response
          items:
            $ref: '#/components/schemas/LineItem'
          type: array
      required:
      - data
      type: object
    LogEntry_base:
      properties:
        id:
          description: Unique identifier for the *LogEntry*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *LogEntry*
          title: etag
          type: string
        type:
          description: The type of the *LogEntry*
          enum:
          - MatterLogEntry
          - ContactLogEntry
          title: type
          type: string
        accessed_at:
          description: The time the item was last accessed (as a ISO-8601 timestamp)
          format: date-time
          title: accessed_at
          type: string
        created_at:
          description: The time the *LogEntry* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *LogEntry* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: LogEntry_base
      type: object
    LogEntry:
      allOf:
      - $ref: '#/components/schemas/LogEntry_base'
      - properties:
          item:
            $ref: '#/components/schemas/PolymorphicObject_base'
          user:
            $ref: '#/components/schemas/User_base'
        type: object
      title: LogEntry
      type: object
    LogEntry_List:
      properties:
        data:
          description: LogEntry List Response
          items:
            $ref: '#/components/schemas/LogEntry'
          type: array
      required:
      - data
      type: object
    Matter_base:
      example:
        open_date: 2000-01-23
        shared: true
        client_reference: client_reference
        billing_method: flat
        close_date: 2000-01-23
        custom_number: custom_number
        pending_date: 2000-01-23
        matter_stage_updated_at: 2000-01-23T04:56:07.000+00:00
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        last_activity_date: 2000-01-23
        billable: true
        client_id: 0
        number: 6
        has_tasks: true
        maildrop_address: maildrop_address
        updated_at: 2000-01-23T04:56:07.000+00:00
        etag: etag
        display_number: display_number
        currency: "{}"
        location: location
        id: 7
        status: Pending
      properties:
        id:
          description: Unique identifier for the *Matter*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Matter*
          title: etag
          type: string
        number:
          description: The number given to the *Matter* within an account
          format: int32
          title: number
          type: integer
        display_number:
          description: "The reference and label of the *Matter*. Depending on the\
            \ account's manual_matter_numbering setting, this is either read only\
            \ (generated) or customizable."
          title: display_number
          type: string
        custom_number:
          description: User defined custom number of the *Matter*
          title: custom_number
          type: string
        currency:
          description: Currency of the matter
          title: currency
          type: object
        description:
          description: The detailed description of the *Matter*
          title: description
          type: string
        status:
          description: The current status of the *Matter*
          enum:
          - Pending
          - Open
          - Closed
          title: status
          type: string
        location:
          description: The location of the *Matter*
          title: location
          type: string
        client_reference:
          description: Client Reference string for external uses
          title: client_reference
          type: string
        client_id:
          description: Client ID
          format: int64
          title: client_id
          type: integer
        billable:
          description: Whether this matter is billable
          title: billable
          type: boolean
        maildrop_address:
          description: A unique Maildrop email address for the matter
          title: maildrop_address
          type: string
        billing_method:
          description: Billing method of this matter
          enum:
          - flat
          - contingency
          - hourly
          title: billing_method
          type: string
        open_date:
          description: The date the matter was set to open (as a ISO-8601 date)
          format: date
          title: open_date
          type: string
        close_date:
          description: The date the matter was set to closed (as a ISO-8601 date)
          format: date
          title: close_date
          type: string
        pending_date:
          description: The date the matter was set to pending (as a ISO-8601 date)
          format: date
          title: pending_date
          type: string
        created_at:
          description: The time the *Matter* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Matter* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        shared:
          description: Whether the matter is currently shared with Clio Connect
          title: shared
          type: boolean
        has_tasks:
          description: Whether or not the matter has any tasks.
          title: has_tasks
          type: boolean
        last_activity_date:
          description: The greatest date out of all of the activities on the matter
            (as a ISO-8601 date)
          format: date
          title: last_activity_date
          type: string
        matter_stage_updated_at:
          description: The date the matter stage was last updated (as a ISO-8601 date)
          format: date-time
          title: matter_stage_updated_at
          type: string
      title: Matter_base
      type: object
    Matter:
      allOf:
      - $ref: '#/components/schemas/Matter_base'
      - properties:
          client:
            $ref: '#/components/schemas/Contact_base'
          contingency_fee:
            $ref: '#/components/schemas/ContingencyFee_base'
          custom_rate:
            $ref: '#/components/schemas/MatterCustomRate'
          evergreen_retainer:
            $ref: '#/components/schemas/EvergreenRetainer_base'
          folder:
            $ref: '#/components/schemas/Folder_base'
          group:
            $ref: '#/components/schemas/Group_base'
          matter_budget:
            $ref: '#/components/schemas/MatterBudget_base'
          matter_stage:
            $ref: '#/components/schemas/MatterStage_base'
          originating_attorney:
            $ref: '#/components/schemas/User_base'
          practice_area:
            $ref: '#/components/schemas/PracticeArea_base'
          responsible_attorney:
            $ref: '#/components/schemas/User_base'
          responsible_staff:
            $ref: '#/components/schemas/User_base'
          statute_of_limitations:
            $ref: '#/components/schemas/Task_base'
          user:
            $ref: '#/components/schemas/User_base'
          legal_aid_uk_matter:
            $ref: '#/components/schemas/LegalAidUkMatter_base'
          currency:
            $ref: '#/components/schemas/Currency_base'
          account_balances:
            description: AccountBalance
            items:
              $ref: '#/components/schemas/AccountBalance_base'
            type: array
          custom_field_values:
            description: CustomFieldValue
            items:
              $ref: '#/components/schemas/CustomFieldValue'
            type: array
          custom_field_set_associations:
            description: CustomFieldSetAssociation
            items:
              $ref: '#/components/schemas/CustomFieldSetAssociation_base'
            type: array
          matter_bill_recipients:
            description: MatterBillRecipient
            items:
              $ref: '#/components/schemas/MatterBillRecipient'
            type: array
          relationships:
            description: Relationship
            items:
              $ref: '#/components/schemas/Relationship_base'
            type: array
          task_template_list_instances:
            description: TaskTemplateListInstace
            items:
              $ref: '#/components/schemas/TaskTemplateListInstace_base'
            type: array
          split_invoice_payers:
            description: SplitInvoicePayer
            items:
              $ref: '#/components/schemas/SplitInvoicePayer_base'
            type: array
        type: object
      title: Matter
      type: object
    Matter_Show:
      properties:
        data:
          $ref: '#/components/schemas/Matter'
      required:
      - data
      type: object
    Matter_List:
      properties:
        data:
          description: Matter List Response
          items:
            $ref: '#/components/schemas/Matter'
          type: array
      required:
      - data
      type: object
    MatterStage_base:
      properties:
        id:
          description: Unique identifier for the *MatterStage*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *MatterStage*
          title: etag
          type: string
        practice_area_id:
          description: Practice Area ID
          title: practice_area_id
          type: string
        name:
          description: The name of the *MatterStage*
          title: name
          type: string
        order:
          description: The order of the matter stage within a practice area
          format: int32
          title: order
          type: integer
        created_at:
          description: The time the *MatterStage* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *MatterStage* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: MatterStage_base
      type: object
    MatterStage:
      allOf:
      - $ref: '#/components/schemas/MatterStage_base'
      - properties: {}
        type: object
      title: MatterStage
      type: object
    MatterStage_List:
      properties:
        data:
          description: MatterStage List Response
          items:
            $ref: '#/components/schemas/MatterStage'
          type: array
      required:
      - data
      type: object
    Client_base:
      properties:
        id:
          description: Unique identifier for the *Client*
          format: int64
          title: id
          type: integer
        name:
          description: The full name of the *Client*
          title: name
          type: string
        first_name:
          description: First name of the Person
          title: first_name
          type: string
        middle_name:
          description: Middle name of the Person
          title: middle_name
          type: string
        last_name:
          description: Last name of the Person
          title: last_name
          type: string
        type:
          description: The type of the *Client*
          enum:
          - Company
          - Person
          title: type
          type: string
        created_at:
          description: The time the *Client* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Client* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        prefix:
          description: "The prefix of the *Client* (Mr, Mrs, etc)"
          title: prefix
          type: string
        title:
          description: The designated title of the *Client*
          title: title
          type: string
        initials:
          description: The initials of the *Client*
          title: initials
          type: string
        is_matter_client:
          description: Whether or not the Client is also the client of the matter
          title: is_matter_client
          type: boolean
        primary_email_address:
          description: The primary email address of client
          title: primary_email_address
          type: string
        primary_phone_number:
          description: The primary phone number of client
          title: primary_phone_number
          type: string
        client_connect_user_id:
          description: The client connect ID of the contacts associated user
          format: int64
          title: client_connect_user_id
          type: integer
        date_of_birth:
          description: Date of Birth
          format: date
          title: date_of_birth
          type: string
      title: Client_base
      type: object
    Client:
      allOf:
      - $ref: '#/components/schemas/Client_base'
      - properties:
          avatar:
            $ref: '#/components/schemas/Avatar_base'
          company:
            $ref: '#/components/schemas/Contact_base'
          addresses:
            description: Address
            items:
              $ref: '#/components/schemas/Address_base'
            type: array
          email_addresses:
            description: EmailAddress
            items:
              $ref: '#/components/schemas/EmailAddress_base'
            type: array
          phone_numbers:
            description: PhoneNumber
            items:
              $ref: '#/components/schemas/PhoneNumber_base'
            type: array
          web_sites:
            description: WebSite
            items:
              $ref: '#/components/schemas/WebSite_base'
            type: array
        type: object
      title: Client
      type: object
    Client_Show:
      properties:
        data:
          $ref: '#/components/schemas/Client'
      required:
      - data
      type: object
    MatterContacts_base:
      properties:
        contact_created_at:
          description: Timestamp of the time the contact was created
          format: date-time
          title: contact_created_at
          type: string
        contact_updated_at:
          description: Timestamp of the time the contact was created
          format: date-time
          title: contact_updated_at
          type: string
        created_at:
          description: The time the *MatterContacts* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        description:
          description: Description of the matter
          title: description
          type: string
        etag:
          description: ETag for the *MatterContacts*
          title: etag
          type: string
        first_name:
          description: First name of the Person
          title: first_name
          type: string
        id:
          description: Unique identifier for the *MatterContacts*
          format: int64
          title: id
          type: integer
        initials:
          description: The initials of the *MatterContacts*
          title: initials
          type: string
        is_client:
          description: Whether or not the MatterContacts is a client
          title: is_client
          type: boolean
        last_name:
          description: Last name of the Person
          title: last_name
          type: string
        matter_id:
          description: ID of the matter
          format: int64
          title: matter_id
          type: integer
        matter_number:
          description: Number of the matter
          title: matter_number
          type: string
        middle_name:
          description: Middle name of the Person
          title: middle_name
          type: string
        name:
          description: The full name of the *MatterContacts*
          title: name
          type: string
        prefix:
          description: "The prefix of the *MatterContacts* (Mr, Mrs, etc)"
          title: prefix
          type: string
        primary_email_address:
          description: The primary email address associated with this *MatterContacts*.
          title: primary_email_address
          type: string
        primary_phone_number:
          description: The primary phone number associated with this *MatterContacts*.
          title: primary_phone_number
          type: string
        relationship_name:
          description: "The description of the relation between the contact and the\
            \ matter, or \"Client\" if the user is the client."
          title: relationship_name
          type: string
        secondary_email_address:
          description: The secondary email address of the contact
          title: secondary_email_address
          type: string
        secondary_phone_number:
          description: The secondary phone number of the contact
          title: secondary_phone_number
          type: string
        title:
          description: The designated title of the *MatterContacts*
          title: title
          type: string
        type:
          description: The type of the *MatterContacts*
          enum:
          - Company
          - Person
          title: type
          type: string
        updated_at:
          description: The time the *MatterContacts* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        client_connect_user_id:
          description: The client connect ID of the contacts associated user
          format: int64
          title: client_connect_user_id
          type: integer
      title: MatterContacts_base
      type: object
    MatterContacts:
      allOf:
      - $ref: '#/components/schemas/MatterContacts_base'
      - properties:
          avatar:
            $ref: '#/components/schemas/Avatar_base'
          company:
            $ref: '#/components/schemas/Contact_base'
          primary_address:
            $ref: '#/components/schemas/Address_base'
          primary_web_site:
            $ref: '#/components/schemas/WebSite_base'
          secondary_address:
            $ref: '#/components/schemas/Address_base'
          secondary_web_site:
            $ref: '#/components/schemas/WebSite_base'
          addresses:
            description: Address
            items:
              $ref: '#/components/schemas/Address_base'
            type: array
          custom_field_values:
            description: CustomFieldValue
            items:
              $ref: '#/components/schemas/CustomFieldValue_base'
            type: array
          email_addresses:
            description: EmailAddress
            items:
              $ref: '#/components/schemas/EmailAddress_base'
            type: array
          phone_numbers:
            description: PhoneNumber
            items:
              $ref: '#/components/schemas/PhoneNumber_base'
            type: array
          web_sites:
            description: WebSite
            items:
              $ref: '#/components/schemas/WebSite_base'
            type: array
          relationship:
            $ref: '#/components/schemas/Relationship_base'
        type: object
      title: MatterContacts
      type: object
    MatterContacts_List:
      properties:
        data:
          description: MatterContacts List Response
          items:
            $ref: '#/components/schemas/MatterContacts'
          type: array
      required:
      - data
      type: object
    RelatedContacts_base:
      properties:
        id:
          description: Unique identifier for the *RelatedContacts*
          format: int64
          title: id
          type: integer
        contact_id:
          description: The id of the *RelatedContacts*
          format: int64
          title: contact_id
          type: integer
        name:
          description: The full name of the *RelatedContacts*
          title: name
          type: string
        first_name:
          description: First name of the Person
          title: first_name
          type: string
        middle_name:
          description: Middle name of the Person
          title: middle_name
          type: string
        last_name:
          description: Last name of the Person
          title: last_name
          type: string
        type:
          description: The type of the *RelatedContacts*
          enum:
          - Company
          - Person
          title: type
          type: string
        created_at:
          description: The time the *RelatedContacts* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *RelatedContacts* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        prefix:
          description: "The prefix of the *RelatedContacts* (Mr, Mrs, etc)"
          title: prefix
          type: string
        title:
          description: The designated title of the *RelatedContacts*
          title: title
          type: string
        initials:
          description: The initials of the *RelatedContacts*
          title: initials
          type: string
        is_matter_client:
          description: Whether or not the RelatedContacts is also the client of the
            matter
          title: is_matter_client
          type: boolean
        primary_email_address:
          description: The primary email address of related contact
          title: primary_email_address
          type: string
        primary_phone_number:
          description: The primary phone number of related contact
          title: primary_phone_number
          type: string
        client_connect_user_id:
          description: The client connect ID of the contacts associated user
          format: int64
          title: client_connect_user_id
          type: integer
      title: RelatedContacts_base
      type: object
    RelatedContacts:
      allOf:
      - $ref: '#/components/schemas/RelatedContacts_base'
      - properties:
          avatar:
            $ref: '#/components/schemas/Avatar_base'
          company:
            $ref: '#/components/schemas/Contact_base'
          primary_address:
            $ref: '#/components/schemas/Address_base'
          primary_web_site:
            $ref: '#/components/schemas/WebSite_base'
          secondary_address:
            $ref: '#/components/schemas/Address_base'
          secondary_web_site:
            $ref: '#/components/schemas/WebSite_base'
          addresses:
            description: Address
            items:
              $ref: '#/components/schemas/Address_base'
            type: array
          custom_field_values:
            description: CustomFieldValue
            items:
              $ref: '#/components/schemas/CustomFieldValue_base'
            type: array
          email_addresses:
            description: EmailAddress
            items:
              $ref: '#/components/schemas/EmailAddress_base'
            type: array
          phone_numbers:
            description: PhoneNumber
            items:
              $ref: '#/components/schemas/PhoneNumber_base'
            type: array
          web_sites:
            description: WebSite
            items:
              $ref: '#/components/schemas/WebSite_base'
            type: array
          relationship:
            $ref: '#/components/schemas/Relationship_base'
        type: object
      title: RelatedContacts
      type: object
    RelatedContacts_List:
      properties:
        data:
          description: RelatedContacts List Response
          items:
            $ref: '#/components/schemas/RelatedContacts'
          type: array
      required:
      - data
      type: object
    Note_base:
      example:
        date: 2000-01-23
        updated_at: 2000-01-23T04:56:07.000+00:00
        subject: subject
        created_at: 2000-01-23T04:56:07.000+00:00
        etag: etag
        id: 4
        detail: detail
        time_entries_count: 8
        type: Matter
        detail_text_type: plain_text
      properties:
        id:
          description: Unique identifier for the *Note*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Note*
          title: etag
          type: string
        type:
          description: The type of the *Note*
          enum:
          - Matter
          - Contact
          title: type
          type: string
        subject:
          description: The subject of the *Note*
          title: subject
          type: string
        detail:
          description: "The text body of the *Note*. This Note supports rich text\
            \ when setting the field `detail_text_type` to `rich_text`. With supported\
            \ tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`,\
            \ `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Note also supports\
            \ attributes such as `href`, `rel`, `type`, and `target`."
          title: detail
          type: string
        detail_text_type:
          description: The text type of the *Note*
          enum:
          - plain_text
          - rich_text
          title: detail_text_type
          type: string
        date:
          description: The date the *Note* is for (as a ISO-8601 date)
          format: date
          title: date
          type: string
        created_at:
          description: The time the *Note* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Note* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        time_entries_count:
          description: The number of time_entries associated with the *Note*
          format: int32
          title: time_entries_count
          type: integer
      title: Note_base
      type: object
    Note:
      allOf:
      - $ref: '#/components/schemas/Note_base'
      - properties:
          matter:
            $ref: '#/components/schemas/Matter_base'
          contact:
            $ref: '#/components/schemas/Contact_base'
          author:
            $ref: '#/components/schemas/User_base'
          time_entries:
            description: Activity
            items:
              $ref: '#/components/schemas/Activity_base'
            type: array
          notification_event_subscribers:
            description: NotificationEventSubscriber
            items:
              $ref: '#/components/schemas/NotificationEventSubscriber_base'
            type: array
        type: object
      title: Note
      type: object
    Note_Show:
      properties:
        data:
          $ref: '#/components/schemas/Note'
      required:
      - data
      type: object
    Note_List:
      properties:
        data:
          description: Note List Response
          items:
            $ref: '#/components/schemas/Note'
          type: array
      required:
      - data
      type: object
    OutstandingClientBalance_base:
      properties:
        associated_matter_ids:
          description: An array of Matter IDs associated with bills in the unpaid
            state
          items:
            format: int64
            type: integer
          title: associated_matter_ids
          type: array
        etag:
          description: ETag for the *OutstandingClientBalance*
          title: etag
          type: string
        id:
          description: Unique identifier for the *OutstandingClientBalance*
          format: int64
          title: id
          type: integer
        last_payment_date:
          description: The date the most recent payment from the contact was received
          format: date
          title: last_payment_date
          type: string
        last_shared_date:
          description: The date of the most recently shared bills through the outstanding
            balance table
          format: date
          title: last_shared_date
          type: string
        newest_issued_bill_due_date:
          description: The due date of the contact's newest bill
          format: date
          title: newest_issued_bill_due_date
          type: string
        pending_payments_total:
          description: The sum of all online payments in a pending state on the outstanding
            bills
          format: double
          title: pending_payments_total
          type: number
        reminders_enabled:
          description: The status of automated reminders for this client
          title: reminders_enabled
          type: boolean
        total_outstanding_balance:
          description: The sum of all bills in the unpaid state
          format: double
          title: total_outstanding_balance
          type: number
        created_at:
          description: The time the *OutstandingClientBalance* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *OutstandingClientBalance* was last updated (as
            a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: OutstandingClientBalance_base
      type: object
    OutstandingClientBalance:
      allOf:
      - $ref: '#/components/schemas/OutstandingClientBalance_base'
      - properties:
          outstanding_bills:
            description: Bill
            items:
              $ref: '#/components/schemas/Bill_base'
            type: array
          contact:
            $ref: '#/components/schemas/Contact_base'
          currency:
            $ref: '#/components/schemas/Currency_base'
        type: object
      title: OutstandingClientBalance
      type: object
    OutstandingClientBalance_List:
      properties:
        data:
          description: OutstandingClientBalance List Response
          items:
            $ref: '#/components/schemas/OutstandingClientBalance'
          type: array
      required:
      - data
      type: object
    Payment_base:
      properties:
        id:
          description: Unique identifier for the *Payment*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Payment*
          title: etag
          type: string
        description:
          description: A detailed description of the *Payment*
          title: description
          type: string
        reference:
          description: A reference for the payment
          title: reference
          type: string
        amount:
          description: Total amount paid. The default is 0.00.
          format: double
          title: amount
          type: number
        date:
          description: The date the *Payment* was recorded (as a ISO-8601 date)
          format: date
          title: date
          type: string
        source_fund_type:
          description: The fund type for *Payment* source
          enum:
          - Client
          - Matter
          title: source_fund_type
          type: string
        voided_at:
          description: Time the *Payment* was voided (as a ISO-8601 timestamp)
          format: date-time
          title: voided_at
          type: string
        created_at:
          description: The time the *Payment* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Payment* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: Payment_base
      type: object
    Payment:
      allOf:
      - $ref: '#/components/schemas/Payment_base'
      - properties:
          contact:
            $ref: '#/components/schemas/Contact_base'
          user:
            $ref: '#/components/schemas/User_base'
          source_bank_account:
            $ref: '#/components/schemas/BankAccount_base'
          destination_bank_account:
            $ref: '#/components/schemas/BankAccount_base'
          allocations:
            description: Allocation
            items:
              $ref: '#/components/schemas/Allocation_base'
            type: array
        type: object
      type: object
    Damage_base:
      properties:
        id:
          description: Unique identifier for the *Damage*
          format: int64
          title: id
          type: integer
        amount:
          description: Amount for Damage
          format: double
          title: amount
          type: number
        damage_type:
          description: Damage type of the record
          enum:
          - special
          - general
          - other
          title: damage_type
          type: string
        description:
          description: Description for Damage
          title: description
          type: string
        etag:
          description: ETag for the *Damage*
          title: etag
          type: string
        created_at:
          description: The time the *Damage* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Damage* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: Damage_base
      type: object
    Damage:
      allOf:
      - $ref: '#/components/schemas/Damage_base'
      - properties:
          matter:
            $ref: '#/components/schemas/Matter_base'
        type: object
      title: Damage
      type: object
    Damage_Show:
      properties:
        data:
          $ref: '#/components/schemas/Damage'
      required:
      - data
      type: object
    Damage_List:
      properties:
        data:
          description: Damage List Response
          items:
            $ref: '#/components/schemas/Damage'
          type: array
      required:
      - data
      type: object
    MedicalBill_base:
      properties:
        id:
          description: Unique identifier for the *MedicalBill*
          format: int64
          title: id
          type: integer
        adjustment:
          description: Adjustment for Medical Bill
          format: double
          title: adjustment
          type: number
        amount:
          description: Amount for Medical Bill
          format: double
          title: amount
          type: number
        bill_date:
          description: Bill date for Medical Bill (as a ISO-8601 date)
          format: date
          title: bill_date
          type: string
        bill_received_date:
          description: Bill received date for Medical Bill (as a ISO-8601 date)
          format: date
          title: bill_received_date
          type: string
        damage_type:
          description: Damage Type
          title: damage_type
          type: string
        document_id:
          description: The id of the document associated with the Medical Bill
          format: int64
          title: document_id
          type: integer
        etag:
          description: ETag for the *MedicalBill*
          title: etag
          type: string
        name:
          description: Name of the Medical Bill
          title: name
          type: string
        created_at:
          description: The time the *MedicalBill* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *MedicalBill* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: MedicalBill_base
      type: object
    MedicalBill:
      allOf:
      - $ref: '#/components/schemas/MedicalBill_base'
      - properties:
          matter:
            $ref: '#/components/schemas/Matter_base'
          liens:
            description: Lien
            items:
              $ref: '#/components/schemas/Lien_base'
            type: array
        type: object
      title: MedicalBill
      type: object
    MedicalBill_Show:
      properties:
        data:
          $ref: '#/components/schemas/MedicalBill'
      required:
      - data
      type: object
    MedicalRecord_base:
      properties:
        id:
          description: Unique identifier for the *MedicalRecord*
          format: int64
          title: id
          type: integer
        document_id:
          description: The id of the document associated with the Medical Record
          format: int64
          title: document_id
          type: integer
        etag:
          description: ETag for the *MedicalRecord*
          title: etag
          type: string
        end_date:
          description: End date for *MedicalRecord* (as a ISO-8601 date)
          format: date-time
          title: end_date
          type: string
        start_date:
          description: Start date for *MedicalRecord* (as a ISO-8601 date)
          format: date-time
          title: start_date
          type: string
        created_at:
          description: The time the *MedicalRecord* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *MedicalRecord* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: MedicalRecord_base
      type: object
    MedicalRecord:
      allOf:
      - $ref: '#/components/schemas/MedicalRecord_base'
      - properties:
          matter:
            $ref: '#/components/schemas/Matter_base'
        type: object
      title: MedicalRecord
      type: object
    MedicalRecord_Show:
      properties:
        data:
          $ref: '#/components/schemas/MedicalRecord'
      required:
      - data
      type: object
    MedicalRecordsRequest_base:
      properties:
        id:
          description: Unique identifier for the *MedicalRecordsRequest*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *MedicalRecordsRequest*
          title: etag
          type: string
        bills_follow_up_date:
          description: Follow up date for Medical Bills (as a ISO-8601 date)
          format: date-time
          title: bills_follow_up_date
          type: string
        bills_request_date:
          description: Date for when the Medical Bills were requested (as a ISO-8601
            date)
          format: date-time
          title: bills_request_date
          type: string
        bills_status:
          description: Medical Bills status
          enum:
          - not_yet_requested
          - requested
          - received
          - incomplete
          - certified
          title: bills_status
          type: string
        description:
          description: Description of the Medical Records Detail
          title: description
          type: string
        in_treatment:
          description: Treatment status for Medical Records Detail
          title: in_treatment
          type: boolean
        records_follow_up_date:
          description: Follow up date for Medical Records (as a ISO-8601 date)
          format: date-time
          title: records_follow_up_date
          type: string
        records_request_date:
          description: Date for when the Medical Records were requested (as a ISO-8601
            date)
          format: date-time
          title: records_request_date
          type: string
        records_status:
          description: Medical Records status
          enum:
          - not_yet_requested
          - requested
          - received
          - incomplete
          - certified
          title: records_status
          type: string
        treatment_end_date:
          description: Treatment end date for Medical Records Detail (as a ISO-8601
            date)
          format: date-time
          title: treatment_end_date
          type: string
        treatment_start_date:
          description: Treatment start date for Medical Records Detail (as a ISO-8601
            date)
          format: date-time
          title: treatment_start_date
          type: string
        created_at:
          description: The time the *MedicalRecordsRequest* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *MedicalRecordsRequest* was last updated (as a
            ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: MedicalRecordsRequest_base
      type: object
    MedicalRecordsRequest:
      allOf:
      - $ref: '#/components/schemas/MedicalRecordsRequest_base'
      - properties:
          matter:
            $ref: '#/components/schemas/Matter_base'
          medical_provider:
            $ref: '#/components/schemas/Contact_base'
          medical_bills:
            description: MedicalBill
            items:
              $ref: '#/components/schemas/MedicalBill_base'
            type: array
          medical_records:
            description: MedicalRecord
            items:
              $ref: '#/components/schemas/MedicalRecord_base'
            type: array
        type: object
      title: MedicalRecordsRequest
      type: object
    MedicalRecordsRequest_Show:
      properties:
        data:
          $ref: '#/components/schemas/MedicalRecordsRequest'
      required:
      - data
      type: object
    MedicalRecordsRequest_List:
      properties:
        data:
          description: MedicalRecordsRequest List Response
          items:
            $ref: '#/components/schemas/MedicalRecordsRequest'
          type: array
      required:
      - data
      type: object
    PhoneNumber_base:
      properties:
        id:
          description: Unique identifier for the *PhoneNumber*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *PhoneNumber*
          title: etag
          type: string
        number:
          description: Contact's Phone Number
          title: number
          type: string
        name:
          description: The type of *PhoneNumber* it is
          enum:
          - Work
          - Personal
          - Other
          title: name
          type: string
        primary:
          description: Whether it is default for this contact
          title: primary
          type: boolean
        created_at:
          description: The time the *PhoneNumber* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *PhoneNumber* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: PhoneNumber_base
      type: object
    PhoneNumber:
      allOf:
      - $ref: '#/components/schemas/PhoneNumber_base'
      - properties: {}
        type: object
      title: PhoneNumber
      type: object
    PhoneNumber_List:
      properties:
        data:
          description: PhoneNumber List Response
          items:
            $ref: '#/components/schemas/PhoneNumber'
          type: array
      required:
      - data
      type: object
    PracticeArea_base:
      properties:
        id:
          description: Unique identifier for the *PracticeArea*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *PracticeArea*
          title: etag
          type: string
        created_at:
          description: The time the *PracticeArea* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *PracticeArea* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        name:
          description: The name of the *PracticeArea*
          title: name
          type: string
        category:
          description: |
            The practice area category associated with the *PracticeArea*
          enum:
          - administrative
          - admiralty_and_maritime
          - anti_trust_and_competition
          - appellate
          - banking_and_finance
          - bankruptcy
          - business_formation_and_compliance
          - civil_litigation
          - civil_rights_and_constitutional
          - collections_and_debt
          - commercial_and_sale_of_goods
          - commercial_litigation
          - construction
          - consumer_protection
          - contracts
          - corporate_litigation
          - criminal
          - disability_and_social_security
          - education
          - elder
          - employment_and_labor
          - energy_and_environmental
          - ethics
          - family
          - food_and_drug
          - general_practice
          - government
          - healthcare
          - immigration
          - in_house_counsel
          - insurance
          - intellectual_property
          - international
          - juvenile
          - legal_aid
          - mediation_and_arbitration
          - medical_malpractice
          - military
          - multi_practice
          - non_profit_and_pro_bono
          - other
          - personal_injury
          - privacy_and_information_security
          - private_client
          - product_liability
          - real_estate
          - science_and_technology
          - securities_and_mergers_and_acquisitions
          - small_claims
          - sports_and_entertainment_and_gaming
          - tax
          - telecommunications
          - traffic_offenses
          - transportation
          - tribal
          - trusts
          - wills_and_estates
          - workers_compensation
          title: category
          type: string
        code:
          description: The code of the *PracticeArea*
          title: code
          type: string
      title: PracticeArea_base
      type: object
    PracticeArea:
      allOf:
      - $ref: '#/components/schemas/PracticeArea_base'
      - properties: {}
        type: object
      title: PracticeArea
      type: object
    PracticeArea_Show:
      properties:
        data:
          $ref: '#/components/schemas/PracticeArea'
      required:
      - data
      type: object
    PracticeArea_List:
      properties:
        data:
          description: PracticeArea List Response
          items:
            $ref: '#/components/schemas/PracticeArea'
          type: array
      required:
      - data
      type: object
    Relationship_base:
      properties:
        id:
          description: Unique identifier for the *Relationship*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Relationship*
          title: etag
          type: string
        description:
          description: A detailed description of the *Relationship*
          title: description
          type: string
        created_at:
          description: The time the *Relationship* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Relationship* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: Relationship_base
      type: object
    Relationship:
      allOf:
      - $ref: '#/components/schemas/Relationship_base'
      - properties:
          matter:
            $ref: '#/components/schemas/Matter_base'
          contact:
            $ref: '#/components/schemas/Contact_base'
        type: object
      title: Relationship
      type: object
    Relationship_Show:
      properties:
        data:
          $ref: '#/components/schemas/Relationship'
      required:
      - data
      type: object
    Relationship_List:
      properties:
        data:
          description: Relationship List Response
          items:
            $ref: '#/components/schemas/Relationship'
          type: array
      required:
      - data
      type: object
    Reminder_base:
      properties:
        id:
          description: Unique identifier for the *Reminder*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Reminder*
          title: etag
          type: string
        duration:
          description: Time in minutes to remind user before the subject
          format: int32
          title: duration
          type: integer
        next_delivery_at:
          description: The time the *Reminder* will be delivered (as a ISO-8601 timestamp)
          format: date-time
          title: next_delivery_at
          type: string
        state:
          description: The current state of the *Reminder*
          enum:
          - initializing
          - scheduling
          - rescheduling
          - scheduled
          - attempting_delivery
          - delivery_failed
          - delivered
          - delivery_skipped
          - invalid_user
          title: state
          type: string
        created_at:
          description: The time the *Reminder* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Reminder* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: Reminder_base
      type: object
    Reminder:
      allOf:
      - $ref: '#/components/schemas/Reminder_base'
      - properties:
          notification_method:
            $ref: '#/components/schemas/NotificationMethod_base'
          subject:
            $ref: '#/components/schemas/PolymorphicObject_base'
        type: object
      title: Reminder
      type: object
    Reminder_Show:
      properties:
        data:
          $ref: '#/components/schemas/Reminder'
      required:
      - data
      type: object
    Reminder_List:
      properties:
        data:
          description: Reminder List Response
          items:
            $ref: '#/components/schemas/Reminder'
          type: array
      required:
      - data
      type: object
    ReportPreset_base:
      properties:
        id:
          description: Unique identifier for the *ReportPreset*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *ReportPreset*
          title: etag
          type: string
        name:
          description: A specified name for the report preset
          title: name
          type: string
        kind:
          description: The kind of report the preset generates
          enum:
          - accounts_receivable
          - accounts_receivable_aging
          - bank_account_activity
          - billing_history
          - billing_rate
          - client_activity
          - client_ledger
          - clio_payments_deposit
          - clio_payments_ledger
          - clio_payments_monthly_statement
          - clio_payments_sales_tax
          - clio_payments_transaction
          - contact_information
          - disbursement_payment
          - fee_allocation
          - general_ledger
          - grant_matters
          - invoice_payments_v2
          - law_society_of_alberta
          - law_society_of_alberta_al
          - law_society_of_alberta_bar
          - law_society_of_alberta_tl
          - law_society_of_alberta_tt
          - matter
          - matter_balance_summary
          - matter_productivity_by_user
          - matters_by_responsible_attorney
          - originating_attorney_revenue
          - other_revenue
          - productivity_by_client
          - productivity_by_user
          - revenue
          - task_productivity_by_user
          - task_progress_by_user
          - trust_ledger
          - trust_ledger_nsw
          - trust_listing
          - trust_management
          - work_in_progress
          title: kind
          type: string
        format:
          description: The format of the report the preset generates
          enum:
          - csv
          - html
          - json
          - pdf
          - xlsx
          - zip
          title: format
          type: string
        last_generated_at:
          description: The time of the last generated report from this preset (as
            a ISO-8601 timestamp)
          format: date-time
          title: last_generated_at
          type: string
        created_at:
          description: The time the *ReportPreset* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *ReportPreset* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        category:
          description: The category of the report the preset generates
          enum:
          - billing
          - client
          - compliance
          - financial
          - matter
          - online_payments
          - productivity
          - revenue
          - task
          title: category
          type: string
        options:
          description: The report options parameters
          title: options
          type: string
      title: ReportPreset_base
      type: object
    ReportPreset:
      allOf:
      - $ref: '#/components/schemas/ReportPreset_base'
      - properties:
          report_schedule:
            $ref: '#/components/schemas/ReportSchedule_base'
        type: object
      title: ReportPreset
      type: object
    ReportPreset_Show:
      properties:
        data:
          $ref: '#/components/schemas/ReportPreset'
      required:
      - data
      type: object
    ReportPreset_List:
      properties:
        data:
          description: ReportPreset List Response
          items:
            $ref: '#/components/schemas/ReportPreset'
          type: array
      required:
      - data
      type: object
    ReportSchedule_base:
      properties:
        id:
          description: Unique identifier for the *ReportSchedule*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *ReportSchedule*
          title: etag
          type: string
        time_of_day:
          description: What time the Report Schedule is run
          format: date-time
          title: time_of_day
          type: string
        frequency:
          description: How often the Report Schedule is run
          enum:
          - daily
          - weekly
          - monthly
          title: frequency
          type: string
        days_of_week:
          description: "If the frequency is weekly, which days of the week the Report\
            \ Schedule is run. Values are 0 to 6, representing Sunday to Saturday."
          items:
            format: int32
            type: integer
          title: days_of_week
          type: array
        day_of_month:
          description: "If the frequency is monthly, which day of the month the Report\
            \ Schedule is run. 32 is used to represent the last day of the month."
          format: int32
          title: day_of_month
          type: integer
        status:
          description: The status of the Report Schedule
          enum:
          - initial
          - queued
          - processing
          - failed
          - completed
          title: status
          type: string
        status_updated_at:
          description: When the status of the Report Schedule was last updated
          format: date-time
          title: status_updated_at
          type: string
        next_scheduled_date:
          description: The next time the Report Schedule should run
          format: date-time
          title: next_scheduled_date
          type: string
        time_zone:
          description: Used in conjunction with `time_of_day` to determine when the
            Report Schedule should run
          title: time_zone
          type: string
        report_preset_id:
          description: The unique identifier of the Report Preset to use when generating
            the scheduled report
          format: int64
          title: report_preset_id
          type: integer
        created_at:
          description: The time the *ReportSchedule* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *ReportSchedule* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        every_no_of_months:
          description: "If the frequency is monthly, how many months between each\
            \ run of the Report Schedule"
          format: int32
          title: every_no_of_months
          type: integer
        effective_from:
          description: The date the Report Schedule will become enabled (a ISO-8601
            date)
          format: date
          title: effective_from
          type: string
      title: ReportSchedule_base
      type: object
    ReportSchedule:
      allOf:
      - $ref: '#/components/schemas/ReportSchedule_base'
      - properties: {}
        type: object
      title: ReportSchedule
      type: object
    ReportSchedule_Show:
      properties:
        data:
          $ref: '#/components/schemas/ReportSchedule'
      required:
      - data
      type: object
    ReportSchedule_List:
      properties:
        data:
          description: ReportSchedule List Response
          items:
            $ref: '#/components/schemas/ReportSchedule'
          type: array
      required:
      - data
      type: object
    Report_base:
      properties:
        id:
          description: Unique identifier for the *Report*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Report*
          title: etag
          type: string
        name:
          description: A specified name for the report
          title: name
          type: string
        state:
          description: The current state of the report
          enum:
          - not_started
          - queued
          - in_progress
          - failed
          - completed
          - empty
          title: state
          type: string
        kind:
          description: The kind of report to generate
          enum:
          - accounts_receivable
          - accounts_receivable_aging
          - bank_account_activity
          - billing_history
          - billing_rate
          - client_activity
          - client_ledger
          - clio_payments_deposit
          - clio_payments_ledger
          - clio_payments_monthly_statement
          - clio_payments_sales_tax
          - clio_payments_transaction
          - contact_information
          - disbursement_payment
          - fee_allocation
          - general_ledger
          - grant_matters
          - invoice_payments_v2
          - law_society_of_alberta
          - law_society_of_alberta_al
          - law_society_of_alberta_bar
          - law_society_of_alberta_tl
          - law_society_of_alberta_tt
          - matter
          - matter_balance_summary
          - matter_productivity_by_user
          - matters_by_responsible_attorney
          - originating_attorney_revenue
          - other_revenue
          - productivity_by_client
          - productivity_by_user
          - revenue
          - task_productivity_by_user
          - task_progress_by_user
          - trust_ledger
          - trust_ledger_nsw
          - trust_listing
          - trust_management
          - work_in_progress
          title: kind
          type: string
        format:
          description: The requested format of the report
          enum:
          - csv
          - html
          - json
          - pdf
          - xlsx
          - zip
          title: format
          type: string
        progress:
          description: The integer percentage of how complete the report is.
          format: int32
          title: progress
          type: integer
        created_at:
          description: The time the *Report* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Report* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        category:
          description: The category of the report
          enum:
          - billing
          - client
          - compliance
          - financial
          - matter
          - online_payments
          - productivity
          - revenue
          - task
          title: category
          type: string
        source:
          description: The source of the report
          enum:
          - reports
          - presets
          - scheduled
          title: source
          type: string
      title: Report_base
      type: object
    Report:
      allOf:
      - $ref: '#/components/schemas/Report_base'
      - properties: {}
        type: object
      title: Report
      type: object
    Report_Show:
      properties:
        data:
          $ref: '#/components/schemas/Report'
      required:
      - data
      type: object
    Report_List:
      properties:
        data:
          description: Report List Response
          items:
            $ref: '#/components/schemas/Report'
          type: array
      required:
      - data
      type: object
    BillingSetting_base:
      properties:
        id:
          description: Unique identifier for the *BillingSetting*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *BillingSetting*
          title: etag
          type: string
        rounded_duration:
          description: Rounded equivalent of duration submitted
          format: float
          title: rounded_duration
          type: number
        rounding:
          description: Minute increment for time rounding
          format: int32
          title: rounding
          type: integer
        use_decimal_rounding:
          description: Round time to two decimal places
          title: use_decimal_rounding
          type: boolean
        currency:
          description: Current user setting of currency
          title: currency
          type: string
        currency_sign:
          description: The sign of the current currency
          title: currency_sign
          type: string
        tax_rate:
          description: Rate applied for primary tax on invoices using this BillingSetting
          format: double
          title: tax_rate
          type: number
        tax_name:
          description: Name shown for primary tax on invoices using this BillingSetting
          title: tax_name
          type: string
        apply_tax_by_default:
          description: Used to determine if primary tax should be applied to invoices
            by default
          title: apply_tax_by_default
          type: boolean
        time_on_flat_rate_contingency_matters_is_non_billable:
          description: Used to determine if hourly time entries on flat rate or contingency
            fee matters should be non-billable by default
          title: time_on_flat_rate_contingency_matters_is_non_billable
          type: boolean
        use_secondary_tax:
          description: Used to determine if secondary tax applies to invoices using
            this BillingSetting
          title: use_secondary_tax
          type: boolean
        secondary_tax_rate:
          description: Rate applied for secondary tax on invoices using this BillingSetting
          format: double
          title: secondary_tax_rate
          type: number
        secondary_tax_rule:
          description: Used to determine if secondary tax should be applied separately
            or additionally to primary tax
          enum:
          - Pre
          - Post
          title: secondary_tax_rule
          type: string
        secondary_tax_name:
          description: Name shown for secondary tax on invoices using this BillingSetting
          title: secondary_tax_name
          type: string
        notify_after_bill_created:
          description: Flag to indicate if users should have the option to notify
            other users when generating a bill
          title: notify_after_bill_created
          type: boolean
        use_utbms_codes:
          description: "Controls usage of UTBMS codes, allowing creation of coded\
            \ time entries and expenses"
          title: use_utbms_codes
          type: boolean
        created_at:
          description: The time the *BillingSetting* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *BillingSetting* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: BillingSetting_base
      type: object
    BillingSetting:
      allOf:
      - $ref: '#/components/schemas/BillingSetting_base'
      - properties: {}
        type: object
      title: BillingSetting
      type: object
    BillingSetting_Show:
      properties:
        data:
          $ref: '#/components/schemas/BillingSetting'
      required:
      - data
      type: object
    TextSnippet_base:
      properties:
        id:
          description: Unique identifier for the *TextSnippet*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *TextSnippet*
          title: etag
          type: string
        created_at:
          description: The time the *TextSnippet* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *TextSnippet* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        snippet:
          description: The abbreviation that should be expanded
          title: snippet
          type: string
        phrase:
          description: The phrase the abbreviation should be expanded to
          title: phrase
          type: string
        whole_word:
          description: Whether the *TextSnippet* abbreviation requires a space after
            it has been entered to expand to a phrase
          title: whole_word
          type: boolean
      title: TextSnippet_base
      type: object
    TextSnippet:
      allOf:
      - $ref: '#/components/schemas/TextSnippet_base'
      - properties: {}
        type: object
      title: TextSnippet
      type: object
    TextSnippet_Show:
      properties:
        data:
          $ref: '#/components/schemas/TextSnippet'
      required:
      - data
      type: object
    TextSnippet_List:
      properties:
        data:
          description: TextSnippet List Response
          items:
            $ref: '#/components/schemas/TextSnippet'
          type: array
      required:
      - data
      type: object
    CalendarVisibility_base:
      properties:
        id:
          description: Unique identifier for the *CalendarVisibility*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *CalendarVisibility*
          title: etag
          type: string
        color:
          description: Calendar color
          enum:
          - '#658CDA'
          - '#DA6666'
          - '#49B050'
          - '#E7804C'
          - '#8C66DA'
          - '#C4A882'
          - '#64AD88'
          - '#84AAA5'
          - '#56BFB3'
          - '#E77399'
          - '#BFBF4B'
          - '#8BBF3C'
          - '#B473B4'
          - '#A7A77D'
          - '#F2A53D'
          - '#658CB3'
          - '#BE9494'
          - '#A992A9'
          - '#8897A5'
          - '#93A2BE'
          title: color
          type: string
        light_color:
          description: Accent color to complement the main calendar color.
          enum:
          - '#5DA5C7'
          - '#F95957'
          - '#209412'
          - '#FF7715'
          - '#DE649D'
          - '#FF6B02'
          - '#56C4FC'
          - '#00B177'
          - '#50D19B'
          - '#F14A8C'
          - '#A3A2A2'
          - '#84AB3B'
          - '#B091EE'
          - '#BD9E69'
          - '#F2A000'
          - '#00A5CA'
          - '#CB5A3D'
          - '#959CD0'
          - '#B0B0B0'
          - '#7BA6CD'
          title: light_color
          type: string
        visible:
          description: Whether the *CalendarVisibility* will be shown by default in
            the Clio Web UI.
          title: visible
          type: boolean
        name:
          description: Calendar name
          title: name
          type: string
        created_at:
          description: The time the *CalendarVisibility* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *CalendarVisibility* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: CalendarVisibility_base
      type: object
    CalendarVisibility:
      allOf:
      - $ref: '#/components/schemas/CalendarVisibility_base'
      - properties: {}
        type: object
      title: CalendarVisibility
      type: object
    CalendarVisibility_Show:
      properties:
        data:
          $ref: '#/components/schemas/CalendarVisibility'
      required:
      - data
      type: object
    CalendarVisibility_List:
      properties:
        data:
          description: CalendarVisibility List Response
          items:
            $ref: '#/components/schemas/CalendarVisibility'
          type: array
      required:
      - data
      type: object
    Task_base:
      properties:
        id:
          description: Unique identifier for the *Task*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Task*
          title: etag
          type: string
        name:
          description: The name of the *Task*
          title: name
          type: string
        status:
          description: Status of the *Task*. (Note that users without advanced tasks
            can only have either complete or pending)
          enum:
          - pending
          - in_progress
          - in_review
          - complete
          title: status
          type: string
        description:
          description: "A detailed description of the *Task*. This Task supports rich\
            \ text when setting the field `description_text_type` to `rich_text`.\
            \ With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>`\
            \ `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Task\
            \ also supports attributes such as `href`, `rel`, `type`, and `target`."
          title: description
          type: string
        description_text_type:
          description: The text type of the *Task*
          enum:
          - plain_text
          - rich_text
          title: description_text_type
          type: string
        priority:
          description: The priority of the *Task*
          enum:
          - High
          - Normal
          - Low
          title: priority
          type: string
        due_at:
          description: The date the *Task* is due (as a ISO-8601 date)
          format: date
          title: due_at
          type: string
        permission:
          description: The permission of the *Task*
          title: permission
          type: string
        completed_at:
          description: The time the *Task* was completed (as a ISO-8601 timestamp)
          format: date-time
          title: completed_at
          type: string
        notify_completion:
          description: Whether to notify the assigner of the task's completion
          title: notify_completion
          type: boolean
        statute_of_limitations:
          description: Whether the task is a statute of limitations
          title: statute_of_limitations
          type: boolean
        time_estimated:
          description: Time the *Task* should take to complete
          format: int32
          title: time_estimated
          type: integer
        created_at:
          description: The time the *Task* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Task* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        time_entries_count:
          description: The number of time entries associated with this task
          format: int32
          title: time_entries_count
          type: integer
      title: Task_base
      type: object
    Task:
      allOf:
      - $ref: '#/components/schemas/Task_base'
      - properties:
          time_entries:
            description: Activity
            items:
              $ref: '#/components/schemas/Activity_base'
            type: array
          task_type:
            $ref: '#/components/schemas/TaskType_base'
          assigner:
            $ref: '#/components/schemas/User_base'
          matter:
            $ref: '#/components/schemas/Matter_base'
          assignee:
            $ref: '#/components/schemas/Participant'
          reminders:
            description: Reminder
            items:
              $ref: '#/components/schemas/Reminder_base'
            type: array
        type: object
      title: Task
      type: object
    Task_Show:
      properties:
        data:
          $ref: '#/components/schemas/Task'
      required:
      - data
      type: object
    Task_List:
      properties:
        data:
          description: Task List Response
          items:
            $ref: '#/components/schemas/Task'
          type: array
      required:
      - data
      type: object
    TaskTemplateList_base:
      properties:
        created_at:
          description: The time the *TaskTemplateList* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        description:
          description: A detailed description of the *TaskTemplateList*
          title: description
          type: string
        id:
          description: Unique identifier for the *TaskTemplateList*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *TaskTemplateList*
          title: etag
          type: string
        name:
          description: The name of the *TaskTemplateList*
          title: name
          type: string
        templates_count:
          description: How many task templates exist as an association to the *TaskTemplateList*
          format: int32
          title: templates_count
          type: integer
        updated_at:
          description: The time the *TaskTemplateList* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: TaskTemplateList_base
      type: object
    TaskTemplateList:
      allOf:
      - $ref: '#/components/schemas/TaskTemplateList_base'
      - properties:
          practice_area:
            $ref: '#/components/schemas/PracticeArea_base'
          creator:
            $ref: '#/components/schemas/User_base'
        type: object
      title: TaskTemplateList
      type: object
    TaskTemplateList_Show:
      properties:
        data:
          $ref: '#/components/schemas/TaskTemplateList'
      required:
      - data
      type: object
    TaskTemplateList_List:
      properties:
        data:
          description: TaskTemplateList List Response
          items:
            $ref: '#/components/schemas/TaskTemplateList'
          type: array
      required:
      - data
      type: object
    TaskTemplate_base:
      properties:
        id:
          description: Unique identifier for the *TaskTemplate*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *TaskTemplate*
          title: etag
          type: string
        name:
          description: The name of the *TaskTemplate*
          title: name
          type: string
        description:
          description: "The text body of the *TaskTemplate*. This TaskTemplate supports\
            \ rich text when setting the field `detail_text_type` to `rich_text`.\
            \ With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>`\
            \ `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This TaskTemplate\
            \ also supports attributes such as `href`, `rel`, `type`, and `target`."
          title: description
          type: string
        description_text_type:
          description: The type of text in the description field.
          enum:
          - plain_text
          - rich_text
          title: description_text_type
          type: string
        priority:
          description: '*TaskTemplate* priority'
          enum:
          - High
          - Normal
          - Low
          title: priority
          type: string
        private:
          description: Whether the *TaskTemplate* is private.
          title: private
          type: boolean
        created_at:
          description: The time the *TaskTemplate* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *TaskTemplate* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: TaskTemplate_base
      type: object
    TaskTemplate:
      allOf:
      - $ref: '#/components/schemas/TaskTemplate_base'
      - properties:
          cascading_source:
            $ref: '#/components/schemas/CascadingTaskTemplate_base'
          assignee:
            $ref: '#/components/schemas/User_base'
          task_template_list:
            $ref: '#/components/schemas/TaskTemplateList_base'
          task_type:
            $ref: '#/components/schemas/TaskType_base'
          template_creator:
            $ref: '#/components/schemas/User_base'
          reminder_templates:
            description: ReminderTemplate
            items:
              $ref: '#/components/schemas/ReminderTemplate_base'
            type: array
        type: object
      title: TaskTemplate
      type: object
    TaskTemplate_Show:
      properties:
        data:
          $ref: '#/components/schemas/TaskTemplate'
      required:
      - data
      type: object
    TaskTemplate_List:
      properties:
        data:
          description: TaskTemplate List Response
          items:
            $ref: '#/components/schemas/TaskTemplate'
          type: array
      required:
      - data
      type: object
    TaskType_base:
      properties:
        id:
          description: Unique identifier for the *TaskType*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *TaskType*
          title: etag
          type: string
        name:
          description: The name of the *TaskType*
          title: name
          type: string
        deleted_at:
          description: The time the *TaskType* was deleted (as a ISO-8601 timestamp)
          format: date-time
          title: deleted_at
          type: string
        created_at:
          description: The time the *TaskType* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *TaskType* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: TaskType_base
      type: object
    TaskType:
      allOf:
      - $ref: '#/components/schemas/TaskType_base'
      - properties: {}
        type: object
      title: TaskType
      type: object
    TaskType_Show:
      properties:
        data:
          $ref: '#/components/schemas/TaskType'
      required:
      - data
      type: object
    TaskType_List:
      properties:
        data:
          description: TaskType List Response
          items:
            $ref: '#/components/schemas/TaskType'
          type: array
      required:
      - data
      type: object
    Timer_base:
      example:
        start_time: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        elapsed_time: 3.0576100241049344
        created_at: 2000-01-23T04:56:07.000+00:00
        etag: etag
        id: 3
      properties:
        id:
          description: Unique identifier for the *Timer*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Timer*
          title: etag
          type: string
        start_time:
          description: The time the *Timer* was started (as ISO-8601 timestamp)
          format: date-time
          title: start_time
          type: string
        elapsed_time:
          description: "How much time has elapsed, in hours, since the timer was started"
          format: double
          title: elapsed_time
          type: number
        created_at:
          description: The time the *Timer* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Timer* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: Timer_base
      type: object
    Timer:
      allOf:
      - $ref: '#/components/schemas/Timer_base'
      - properties:
          activity:
            $ref: '#/components/schemas/Activity_base'
        type: object
      title: Timer
      type: object
    Timer_Show:
      properties:
        data:
          $ref: '#/components/schemas/Timer'
      required:
      - data
      type: object
    TrustLineItem_base:
      properties:
        id:
          description: Unique identifier for the *TrustLineItem*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *TrustLineItem*
          title: etag
          type: string
        date:
          description: The date of the *TrustLineItem* (as a ISO-8601 date)
          format: date
          title: date
          type: string
        total:
          description: The total amount for the *TrustLineItem*
          format: double
          title: total
          type: number
        note:
          description: Note for the *TrustLineItem*
          title: note
          type: string
        created_at:
          description: The time the *TrustLineItem* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *TrustLineItem* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: TrustLineItem_base
      type: object
    TrustLineItem:
      allOf:
      - $ref: '#/components/schemas/TrustLineItem_base'
      - properties:
          bill:
            $ref: '#/components/schemas/Bill_base'
          matter:
            $ref: '#/components/schemas/Matter_base'
          client:
            $ref: '#/components/schemas/Contact_base'
        type: object
      title: TrustLineItem
      type: object
    TrustLineItem_Show:
      properties:
        data:
          $ref: '#/components/schemas/TrustLineItem'
      required:
      - data
      type: object
    TrustLineItem_List:
      properties:
        data:
          description: TrustLineItem List Response
          items:
            $ref: '#/components/schemas/TrustLineItem'
          type: array
      required:
      - data
      type: object
    TrustRequest_base:
      properties:
        id:
          description: Unique identifier for the *TrustRequest*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *TrustRequest*
          title: etag
          type: string
        created_at:
          description: The time the *TrustRequest* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *TrustRequest* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: TrustRequest_base
      type: object
    TrustRequest:
      allOf:
      - $ref: '#/components/schemas/TrustRequest_base'
      - properties: {}
        type: object
      title: TrustRequest
      type: object
    TrustRequest_Show:
      properties:
        data:
          $ref: '#/components/schemas/TrustRequest'
      required:
      - data
      type: object
    User_base:
      example:
        court_rules_default_attendee: true
        clio_connect: true
        initials: initials
        roles:
        - roles
        - roles
        created_at: 2000-01-23T04:56:07.000+00:00
        last_name: last_name
        time_zone: time_zone
        account_owner: true
        enabled: true
        default_calendar_id: 7
        updated_at: 2000-01-23T04:56:07.000+00:00
        rate: 3.2588565
        name: name
        etag: etag
        phone_number: phone_number
        id: 5
        subscription_type: Attorney
        first_name: first_name
        email: email
      properties:
        account_owner:
          description: Whether the *User* is the owner of the account
          title: account_owner
          type: boolean
        clio_connect:
          description: Whether the *User* is a Clio Connect user
          title: clio_connect
          type: boolean
        court_rules_default_attendee:
          description: Whether the *User* is a default attendee for court rules events
          title: court_rules_default_attendee
          type: boolean
        created_at:
          description: The time the *User* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        default_calendar_id:
          description: Default calendar id for *User*.
          format: int64
          title: default_calendar_id
          type: integer
        email:
          description: The email of the *User*
          title: email
          type: string
        enabled:
          description: Whether the *User* is allowed to log in
          title: enabled
          type: boolean
        etag:
          description: ETag for the *User*
          title: etag
          type: string
        first_name:
          description: The first name of the *User*
          title: first_name
          type: string
        id:
          description: Unique identifier for the *User*
          format: int64
          title: id
          type: integer
        initials:
          description: The initials of the *User*
          title: initials
          type: string
        last_name:
          description: The last name of the *User*
          title: last_name
          type: string
        name:
          description: The full name of the *User*
          title: name
          type: string
        phone_number:
          description: The primary phone number for the *User*.
          title: phone_number
          type: string
        rate:
          description: Default user activity rate for *User*.
          format: float
          title: rate
          type: number
        roles:
          description: An array of roles assigned to this *User*
          items:
            type: string
          title: roles
          type: array
        subscription_type:
          description: The subscription type of the *User*
          enum:
          - Attorney
          - NonAttorney
          title: subscription_type
          type: string
        time_zone:
          description: The selected time zone of the *User*
          title: time_zone
          type: string
        updated_at:
          description: The time the *User* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: User_base
      type: object
    User:
      allOf:
      - $ref: '#/components/schemas/User_base'
      - properties:
          default_activity_description:
            $ref: '#/components/schemas/ActivityDescription_base'
          notification_methods:
            description: NotificationMethod
            items:
              $ref: '#/components/schemas/NotificationMethod_base'
            type: array
          account:
            $ref: '#/components/schemas/Account_base'
          avatar:
            $ref: '#/components/schemas/Avatar_base'
          contact:
            $ref: '#/components/schemas/Contact_base'
          job_title:
            $ref: '#/components/schemas/JobTitle_base'
          groups:
            description: Group
            items:
              $ref: '#/components/schemas/Group_base'
            type: array
        type: object
      title: User
      type: object
    User_Show:
      properties:
        data:
          $ref: '#/components/schemas/User'
      required:
      - data
      type: object
    User_List:
      properties:
        data:
          description: User List Response
          items:
            $ref: '#/components/schemas/User'
          type: array
      required:
      - data
      type: object
    UtbmsCode_base:
      example:
        utbms_set_id: 0
        code: code
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        etag: etag
        id: 4
        type: UtbmsTask
      properties:
        id:
          description: Unique identifier for the *UtbmsCode*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *UtbmsCode*
          title: etag
          type: string
        name:
          description: The name of the *UtbmsCode*
          title: name
          type: string
        code:
          description: The UTBMS code for the *UtbmsCode*
          title: code
          type: string
        description:
          description: The UTBMS description for the *UtbmsCode*
          title: description
          type: string
        type:
          description: The type of the *UtbmsCode*
          enum:
          - UtbmsTask
          - UtbmsExpense
          - UtbmsActivity
          title: type
          type: string
        utbms_set_id:
          description: Set id for the *UtbmsCode*
          format: int64
          title: utbms_set_id
          type: integer
        created_at:
          description: The time the *UtbmsCode* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *UtbmsCode* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: UtbmsCode_base
      type: object
    UtbmsCode:
      allOf:
      - $ref: '#/components/schemas/UtbmsCode_base'
      - properties: {}
        type: object
      title: UtbmsCode
      type: object
    UtbmsCode_Show:
      properties:
        data:
          $ref: '#/components/schemas/UtbmsCode'
      required:
      - data
      type: object
    UtbmsCode_List:
      properties:
        data:
          description: UtbmsCode List Response
          items:
            $ref: '#/components/schemas/UtbmsCode'
          type: array
      required:
      - data
      type: object
    UtbmsSet_base:
      properties:
        id:
          description: Unique identifier for the *UtbmsSet*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *UtbmsSet*
          title: etag
          type: string
        name:
          description: The name of the *UtbmsSet*
          title: name
          type: string
        enabled:
          description: Whether the *UtbmsSet* is enabled for the current account.
          title: enabled
          type: boolean
        created_at:
          description: The time the *UtbmsSet* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *UtbmsSet* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: UtbmsSet_base
      type: object
    UtbmsSet:
      allOf:
      - $ref: '#/components/schemas/UtbmsSet_base'
      - properties: {}
        type: object
      title: UtbmsSet
      type: object
    UtbmsSet_List:
      properties:
        data:
          description: UtbmsSet List Response
          items:
            $ref: '#/components/schemas/UtbmsSet'
          type: array
      required:
      - data
      type: object
    Webhook_base:
      properties:
        id:
          description: Unique identifier for the *Webhook*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Webhook*
          title: etag
          type: string
        url:
          description: The `https` URL to send the data to when the events are triggered
          title: url
          type: string
        fields:
          description: Fields to be included in the webhook request
          title: fields
          type: string
        shared_secret:
          description: A shared secret used to create a signature for the payload
          title: shared_secret
          type: string
        model:
          description: What kind of records the webhook is for
          enum:
          - activity
          - bill
          - calendar_entry
          - clio_payments_payment
          - communication
          - contact
          - document
          - folder
          - matter
          - task
          title: model
          type: string
        status:
          description: The current status of the webhook.
          enum:
          - pending
          - enabled
          - suspended
          title: status
          type: string
        events:
          description: The events your webhook is subscribed to.
          items:
            enum:
            - created
            - updated
            - deleted
            - matter_opened
            - matter_pended
            - matter_closed
            type: string
          title: events
          type: array
        expires_at:
          description: The time webhook will expire (as a ISO-8601 timestamp)
          format: date-time
          title: expires_at
          type: string
        created_at:
          description: The time the *Webhook* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Webhook* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: Webhook_base
      type: object
    Webhook:
      allOf:
      - $ref: '#/components/schemas/Webhook_base'
      - properties:
          user:
            $ref: '#/components/schemas/User_base'
        type: object
      title: Webhook
      type: object
    Webhook_Show:
      properties:
        data:
          $ref: '#/components/schemas/Webhook'
      required:
      - data
      type: object
    Webhook_List:
      properties:
        data:
          description: Webhook List Response
          items:
            $ref: '#/components/schemas/Webhook'
          type: array
      required:
      - data
      type: object
    LinkedFolder_base:
      properties:
        id:
          description: Unique identifier for the *Folder*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Folder*
          title: etag
          type: string
        created_at:
          description: The time the *Folder* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Folder* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        deleted_at:
          description: The time the *Folder* was deleted (as a ISO-8601 timestamp)
          format: date-time
          title: deleted_at
          type: string
        type:
          description: The type of the *Folder*
          enum:
          - Folder
          title: type
          type: string
        locked:
          description: Whether or not the Folder is locked. Locked Folder cannot be
            modified
          title: locked
          type: boolean
        name:
          description: The name of the *Folder*
          title: name
          type: string
        root:
          description: Whether or not the Folder is the root folder. There is only
            one root folder per account
          title: root
          type: boolean
      title: LinkedFolder_base
      type: object
    MultipartHeader_base:
      properties:
        name:
          description: Required HTTP header field name for uploading.
          title: name
          type: string
        value:
          description: Required HTTP header field value for uploading.
          title: value
          type: string
      title: MultipartHeader_base
      type: object
    Multipart_base:
      properties:
        part_number:
          description: Unique identifier of a part which defines its position within
            the document being uploaded.
          format: int32
          title: part_number
          type: integer
        put_url:
          description: A signed URL for uploading the file part. It expires in 10
            minutes.
          title: put_url
          type: string
      title: Multipart_base
      type: object
    AccountBalance_base:
      properties:
        id:
          description: Unique identifier for the *AccountBalance*
          format: int64
          title: id
          type: integer
        balance:
          description: The current balance of the bank account available to the matter
            or contact
          format: double
          title: balance
          type: number
        type:
          description: The bank account type. Either Operating or Trust
          title: type
          type: string
        name:
          description: The name of the bank account
          title: name
          type: string
        currency_id:
          description: The currency ID of the bank account
          format: int64
          title: currency_id
          type: integer
      title: AccountBalance_base
      type: object
    ActivityDescriptionRate_base:
      properties:
        amount:
          description: Monetary value of this rate. Either hourly value or flat rate
            value
          format: double
          title: amount
          type: number
        non_billable_amount:
          description: Monetary value of this rate for non billable activities. Either
            hourly value or flat rate value
          format: double
          title: non_billable_amount
          type: number
        type:
          description: What kind of rate it is.
          enum:
          - User
          - FlatRate
          - Custom
          title: type
          type: string
        hierarchy:
          description: What rate hierarchy the rate belongs to.
          enum:
          - Default
          - Activity
          - Matter
          - Client
          title: hierarchy
          type: string
      title: ActivityDescriptionRate_base
      type: object
    Attendee_base:
      properties:
        id:
          description: Unique identifier for the *Attendee*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Attendee*
          title: etag
          type: string
        type:
          description: The class name of the *Attendee*
          enum:
          - Contact
          - Calendar
          title: type
          type: string
        name:
          description: The name of the *Attendee*
          title: name
          type: string
        enabled:
          description: "If the Attendee is a user, represents whether the user is\
            \ enabled or disabled. Returns null if attendee is a Contact."
          title: enabled
          type: boolean
        email:
          description: "If the Attendee is a User, this is the User's email. If the\
            \ Attendee is a contact, this is the Contact's primary email address."
          title: email
          type: string
        created_at:
          description: The time the *Attendee* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Attendee* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: Attendee_base
      type: object
    Avatar_base:
      properties:
        id:
          description: Unique identifier for the *Avatar*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Avatar*
          title: etag
          type: string
        created_at:
          description: The time the *Avatar* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Avatar* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        url:
          description: The URL for the *Avatar*
          title: url
          type: string
        _destroy:
          description: Whether to destroy the *Avatar*
          title: _destroy
          type: boolean
      title: Avatar_base
      type: object
    BillRecipient_base:
      properties:
        created_at:
          description: The time the *BillRecipient* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        etag:
          description: ETag for the *BillRecipient*
          title: etag
          type: string
        id:
          description: Unique identifier for the *BillRecipient*
          format: int64
          title: id
          type: integer
        on_all_matters:
          description: If the associated contact is a recipient for all of the bill's
            matters
          title: on_all_matters
          type: boolean
        updated_at:
          description: The time the *BillRecipient* was updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: BillRecipient_base
      type: object
    CascadingTask_base:
      properties: {}
      type: object
    CascadingTaskTemplate_base:
      properties:
        id:
          description: Unique identifier for the *TaskTemplate*
          format: int64
          title: id
          type: integer
        name:
          description: The name of the *TaskTemplate*
          title: name
          type: string
      title: CascadingTaskTemplate_base
      type: object
    ClientPortal_base:
      example:
        unread_count: 7
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        etag: etag
        id: 3
        unread_notifiable_count: 0
      properties:
        id:
          description: Unique identifier for the *ClientPortal*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *ClientPortal*
          title: etag
          type: string
        created_at:
          description: The time the *ClientPortal* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *ClientPortal* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        unread_count:
          description: The number of unread count messages for the current user.
          format: int32
          title: unread_count
          type: integer
        unread_notifiable_count:
          description: The number of unread messages for the current user once their
            notification settings have been applied.
          format: int32
          title: unread_notifiable_count
          type: integer
      title: ClientPortal_base
      type: object
    ClioCreator_base:
      properties:
        account_owner:
          description: Whether the *ClioCreator* is the owner of the account
          title: account_owner
          type: boolean
        clio_connect:
          description: Whether the *ClioCreator* is a Clio Connect user
          title: clio_connect
          type: boolean
        court_rules_default_attendee:
          description: Whether the *ClioCreator* is a default attendee for court rules
            events
          title: court_rules_default_attendee
          type: boolean
        default_calendar_id:
          description: Default calendar id for *ClioCreator*.
          format: int64
          title: default_calendar_id
          type: integer
        email:
          description: The email of the *ClioCreator*
          title: email
          type: string
        enabled:
          description: Whether the *ClioCreator* is allowed to log in
          title: enabled
          type: boolean
        etag:
          description: ETag for the *ClioCreator*
          title: etag
          type: string
        id:
          description: Unique identifier for the *ClioCreator*
          format: int64
          title: id
          type: integer
        type:
          description: The type of the *ClioCreator*
          enum:
          - ManageUser
          - ClientUser
          title: type
          type: string
        initials:
          description: The initials of the *ClioCreator*
          title: initials
          type: string
        first_name:
          description: The first name of the *ClioCreator*
          title: first_name
          type: string
        last_name:
          description: The last name of the *ClioCreator*
          title: last_name
          type: string
        name:
          description: The full name of the *ClioCreator*
          title: name
          type: string
        phone_number:
          description: The primary phone number for the *ClioCreator*.
          title: phone_number
          type: string
        rate:
          description: Default user activity rate for *ClioCreator*.
          format: float
          title: rate
          type: number
        subscription_type:
          description: The subscription type of the *ClioCreator*
          enum:
          - Attorney
          - NonAttorney
          title: subscription_type
          type: string
        time_zone:
          description: The selected time zone of the *ClioCreator*
          title: time_zone
          type: string
        roles:
          description: An array of roles assigned to this *ClioCreator*
          items:
            type: string
          title: roles
          type: array
        created_at:
          description: The time the *ClioCreator* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *ClioCreator* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: ClioCreator_base
      type: object
    CommunicationEmlFile_base:
      properties:
        id:
          description: Unique identifier for the *CommunicationEmlFile*
          format: int64
          title: id
          type: integer
      title: CommunicationEmlFile_base
      type: object
    ConferenceMeeting_base:
      properties:
        conference_id:
          description: Third-party provider unique meeting ID
          format: int64
          title: conference_id
          type: integer
        conference_password:
          description: Third-party provider meeting password
          title: conference_password
          type: string
        created_at:
          description: The time the *ConferenceMeeting* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        etag:
          description: ETag for the *ConferenceMeeting*
          title: etag
          type: string
        id:
          description: Unique identifier for the *ConferenceMeeting*
          format: int64
          title: id
          type: integer
        join_url:
          description: URL for participants to join the video conference
          title: join_url
          type: string
        type:
          description: The type of video conference
          title: type
          type: string
        source_id:
          description: The external ID of the video conference meeting
          format: int64
          title: source_id
          type: integer
        updated_at:
          description: The time the *ConferenceMeeting* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: ConferenceMeeting_base
      type: object
    ContingencyFee_base:
      properties:
        id:
          description: Unique identifier for the *ContingencyFee*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *ContingencyFee*
          title: etag
          type: string
        created_at:
          description: The time the *ContingencyFee* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *ContingencyFee* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        show_contingency_award:
          description: Whether the *ContingencyFee* is posted or on a bill
          title: show_contingency_award
          type: boolean
      title: ContingencyFee_base
      type: object
    ConversationMembership_base:
      properties:
        id:
          description: Unique identifier for the *ConversationMembership*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *ConversationMembership*
          title: etag
          type: string
        read:
          description: Whether or not the ConversationMembership has been read by
            the member
          title: read
          type: boolean
        archived:
          description: Whether or not the ConversationMembership has been archived
            by the member
          title: archived
          type: boolean
        created_at:
          description: The time the *ConversationMembership* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *ConversationMembership* was last updated (as
            a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: ConversationMembership_base
      type: object
    PicklistOption_base:
      properties:
        id:
          description: Unique identifier for the *PicklistOption*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *PicklistOption*
          title: etag
          type: string
        created_at:
          description: The time the *PicklistOption* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *PicklistOption* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        option:
          description: The value of the *PicklistOption*
          title: option
          type: string
        deleted_at:
          description: The time the *PicklistOption* was deleted (as a ISO-8601 timestamp)
          format: date-time
          title: deleted_at
          type: string
      title: PicklistOption_base
      type: object
    CustomFieldSetAssociation_base:
      properties:
        id:
          description: Unique identifier for the *CustomFieldSetAssociation*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *CustomFieldSetAssociation*
          title: etag
          type: string
        display_order:
          description: The display position of the *CustomFieldSetAssociation*
          format: int32
          title: display_order
          type: integer
        created_at:
          description: The time the *CustomFieldSetAssociation* was created (as a
            ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *CustomFieldSetAssociation* was last updated (as
            a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: CustomFieldSetAssociation_base
      type: object
    CustomFieldValue_base:
      properties:
        id:
          description: Unique identifier for the *CustomFieldValue*
          title: id
          type: string
        etag:
          description: ETag for the *CustomFieldValue*
          title: etag
          type: string
        field_name:
          description: The name of the custom field
          title: field_name
          type: string
        created_at:
          description: The time the *CustomFieldValue* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *CustomFieldValue* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        field_type:
          description: The type of the *CustomFieldValue*
          enum:
          - checkbox
          - contact
          - currency
          - date
          - time
          - email
          - matter
          - numeric
          - picklist
          - text_area
          - text_line
          - url
          title: field_type
          type: string
        field_required:
          description: Whether the *CustomFieldValue* requires a value
          title: field_required
          type: boolean
        field_displayed:
          description: Whether the *CustomFieldValue* is displayed by default
          title: field_displayed
          type: boolean
        field_display_order:
          description: The display position of the *CustomFieldValue*
          format: int32
          title: field_display_order
          type: integer
        value:
          description: The value of the *CustomFieldValue*
          title: value
          type: string
        soft_deleted:
          description: Whether the value is associated with a deleted custom field
          title: soft_deleted
          type: boolean
      title: CustomFieldValue_base
      type: object
    Discount_base:
      properties:
        rate:
          description: The rate of the *Discount%*
          format: double
          title: rate
          type: number
        type:
          description: The type of *Discount* being applied in your *Discount* rate.
          enum:
          - percentage
          - money
          title: type
          type: string
        note:
          description: A note for your *Discount*
          title: note
          type: string
        early_payment_rate:
          description: The % discount that will be applied if your *Discount* is paid
            within the early payment period.
          format: int32
          title: early_payment_rate
          type: integer
        early_payment_period:
          description: "The number of days for your *Discount* period. If your bill\
            \ is paid within this time, apply your *Discount* rate to the bill."
          format: int32
          title: early_payment_period
          type: integer
      title: Discount_base
      type: object
    EvergreenRetainer_base:
      properties:
        id:
          description: Unique identifier for the *EvergreenRetainer*
          format: int64
          title: id
          type: integer
        created_at:
          description: The time the *EvergreenRetainer* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *EvergreenRetainer* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        etag:
          description: ETag for the *EvergreenRetainer*
          title: etag
          type: string
        minimum_threshold:
          description: "The trust balance threshold for the associated Matter. When\
            \ the balance falls below the threshold, the retainer's associated recipients\
            \ (firm users) will receive a notification."
          format: double
          title: minimum_threshold
          type: number
      title: EvergreenRetainer_base
      type: object
    ExternalProperty_base:
      properties:
        id:
          description: Unique identifier for the *ExternalProperty*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *ExternalProperty*
          title: etag
          type: string
        name:
          description: The name of the *ExternalProperty*
          title: name
          type: string
        value:
          description: The value of the *ExternalProperty*
          title: value
          type: string
        created_at:
          description: The time the *ExternalProperty* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *ExternalProperty* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: ExternalProperty_base
      type: object
    InstantMessenger_base:
      properties:
        id:
          description: Unique identifier for the *InstantMessenger*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *InstantMessenger*
          title: etag
          type: string
        address:
          description: The address of the *InstantMessenger*
          title: address
          type: string
        name:
          description: The type of *InstantMessenger* it is
          enum:
          - Work
          - Personal
          - Other
          title: name
          type: string
        created_at:
          description: The time the *InstantMessenger* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *InstantMessenger* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: InstantMessenger_base
      type: object
    JobTitle_base:
      properties:
        id:
          description: Unique identifier for the *JobTitle*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *JobTitle*
          title: etag
          type: string
        name:
          description: Name of the job title
          title: name
          type: string
        initials:
          description: Initials of the job title
          title: initials
          type: string
      title: JobTitle_base
      type: object
    LegalAidUkActivity_base:
      example:
        activity_sub_category: activity_sub_category
        form_of_civil_legal_service: 8
        tax_exclusive: true
        expert: 6
        uplift: 0.43431398
        json_key: json_key
        bolt_ons: bolt_ons
        eligible_for_sqm: true
        court: 4
        is_custom_rate: true
        bolt_ons_summary: bolt_ons_summary
        user_type: 2
        base_rate: 5.507387
        advocacy: 7
        id: 4
        region: 3
      properties:
        activity_sub_category:
          description: Activity sub-category
          title: activity_sub_category
          type: string
        advocacy:
          description: Advocacy
          format: int32
          title: advocacy
          type: integer
        base_rate:
          description: Base rate
          format: float
          title: base_rate
          type: number
        bolt_ons:
          description: Bolt ons
          title: bolt_ons
          type: string
        bolt_ons_summary:
          description: Bolt ons summary
          title: bolt_ons_summary
          type: string
        court:
          description: Court
          format: int32
          title: court
          type: integer
        eligible_for_sqm:
          description: Eligible for SQM
          title: eligible_for_sqm
          type: boolean
        expert:
          description: Expert
          format: int32
          title: expert
          type: integer
        form_of_civil_legal_service:
          description: Form of civil legal service
          format: int32
          title: form_of_civil_legal_service
          type: integer
        id:
          description: Unique identifier for the *LegalAidUkActivity*
          format: int64
          title: id
          type: integer
        is_custom_rate:
          description: Flag to indicate if rate was manually entered by user
          title: is_custom_rate
          type: boolean
        json_key:
          description: Lookup key that references JSON data
          title: json_key
          type: string
        region:
          description: Region
          format: int32
          title: region
          type: integer
        tax_exclusive:
          description: Flag to indicate if tax is exclusive
          title: tax_exclusive
          type: boolean
        uplift:
          description: Uplift percentage applied to activity rate
          format: float
          title: uplift
          type: number
        user_type:
          description: User type
          format: int32
          title: user_type
          type: integer
      title: LegalAidUkActivity_base
      type: object
    LegalAidUkBill_base:
      properties:
        additional_travel_payment:
          description: "Additional travel payment, for Legal Aid England and Wales"
          title: additional_travel_payment
          type: boolean
        adjourned_hearing_fee:
          description: Adjourned hearing fee
          title: adjourned_hearing_fee
          type: string
        advocacy_costs:
          description: Advocacy costs
          format: double
          title: advocacy_costs
          type: number
        advice_time:
          description: Advice time
          format: int32
          title: advice_time
          type: integer
        bill_type:
          description: Bill type
          format: int32
          title: bill_type
          type: integer
        case_concluded:
          description: Case concluded
          format: date
          title: case_concluded
          type: string
        case_stage_level:
          description: Case stage level
          format: int32
          title: case_stage_level
          type: integer
        cla_exemption_code:
          description: CLA exemption code
          title: cla_exemption_code
          type: string
        cla_reference:
          description: CLA reference
          title: cla_reference
          type: string
        cmrh_oral:
          description: CMRH oral
          format: int32
          title: cmrh_oral
          type: integer
        cmrh_telephone:
          description: CMRH telephone
          format: int32
          title: cmrh_telephone
          type: integer
        cost_of_counsel:
          description: Cost of counsel
          title: cost_of_counsel
          type: string
        costs_are_those_of:
          description: Costs are those of
          format: int32
          title: costs_are_those_of
          type: integer
        court_location:
          description: Court location (HPCDS matters)
          title: court_location
          type: string
        date_of_claim:
          description: Date of claim
          format: date
          title: date_of_claim
          type: string
        designated_accredited_representative:
          description: Designated accredited representative
          format: int32
          title: designated_accredited_representative
          type: integer
        detention_travel_and_waiting_costs:
          description: Detention travel & waiting costs ex VAT
          title: detention_travel_and_waiting_costs
          type: string
        disbursements_vat:
          description: Disbursements VAT
          format: double
          title: disbursements_vat
          type: number
        exceptional_case_funding_reference:
          description: Exceptional case funding reference
          title: exceptional_case_funding_reference
          type: string
        exemption_criteria_satisfied:
          description: Exemption criteria satisfied
          format: int32
          title: exemption_criteria_satisfied
          type: integer
        follow_on_work:
          description: Follow on work
          format: int32
          title: follow_on_work
          type: integer
        ho_interview:
          description: HO interview
          format: int32
          title: ho_interview
          type: integer
        ho_ucn:
          description: HO UCN
          format: int32
          title: ho_ucn
          type: integer
        id:
          description: Unique identifier for the *LegalAidUkBill*
          format: int64
          title: id
          type: integer
        independent_medical_reports_claimed:
          description: Independent medical reports claimed
          title: independent_medical_reports_claimed
          type: string
        jr_form_filling:
          description: "JR/Form filling ex VAT, for Legal Aid England and Wales"
          title: jr_form_filling
          type: string
        maat_id:
          description: MAAT ID
          title: maat_id
          type: string
        meetings_attended:
          description: Meetings attended
          format: int32
          title: meetings_attended
          type: integer
        mht_ref_no:
          description: MHT reference number
          title: mht_ref_no
          type: string
        net_disbursements:
          description: Net disbursements
          format: double
          title: net_disbursements
          type: number
        net_profit_costs:
          description: Net profit cost
          format: double
          title: net_profit_costs
          type: number
        niat_disbursement_prior_authority_number:
          description: NIAT disbursement prior authority number
          title: niat_disbursement_prior_authority_number
          type: string
        number_of_attendances:
          description: Number of attendances
          format: int32
          title: number_of_attendances
          type: integer
        outcome_for_the_client:
          description: Outcome for the client
          format: int32
          title: outcome_for_the_client
          type: integer
        profit_costs_ex_vat:
          description: Profit costs ex VAT
          format: int32
          title: profit_costs_ex_vat
          type: integer
        prior_authority_reference:
          description: Prior authority reference number
          title: prior_authority_reference
          type: string
        representation_order_date:
          description: Representation order date
          format: date
          title: representation_order_date
          type: string
        stage_reached:
          description: Stage reached
          format: int32
          title: stage_reached
          type: integer
        substantive_hearing:
          description: Substantive hearing
          format: int32
          title: substantive_hearing
          type: integer
        travel_and_waiting_costs:
          description: Travel & waiting costs
          format: double
          title: travel_and_waiting_costs
          type: number
        travel_time:
          description: Travel time
          format: int32
          title: travel_time
          type: integer
        value_of_costs:
          description: Value of costs
          title: value_of_costs
          type: string
        waiting_time:
          description: Waiting time
          format: int32
          title: waiting_time
          type: integer
      title: LegalAidUkBill_base
      type: object
    LegalAidUkContact_base:
      properties:
        id:
          description: Unique identifier for the *LegalAidUkContact*
          format: int64
          title: id
          type: integer
        disability:
          description: The disability of the LegalAidUkContact
          format: int32
          title: disability
          type: integer
        disability_code:
          description: The disability code of the LegalAidUkContact
          title: disability_code
          type: string
        ethnicity:
          description: The ethnicity of the LegalAidUkContact
          format: int32
          title: ethnicity
          type: integer
        ethnicity_title:
          description: The ethnicity title of the LegalAidUkContact
          title: ethnicity_title
          type: string
        financially_eligible:
          description: The financial eligibility of the LegalAidUkContact
          title: financially_eligible
          type: boolean
        gender:
          description: The gender of the LegalAidUkContact
          format: int32
          title: gender
          type: integer
        gender_title:
          description: The gender title of the LegalAidUkContact
          title: gender_title
          type: string
        national_insurance_number:
          description: National Insurance Number
          title: national_insurance_number
          type: string
      title: LegalAidUkContact_base
      type: object
    LegalAidUkMatter_base:
      properties:
        access_point:
          description: Access point
          title: access_point
          type: string
        laa_office_number:
          description: LAA office number
          title: laa_office_number
          type: string
        ait_hearing_centre:
          description: AIT hearing centre
          format: int32
          title: ait_hearing_centre
          type: integer
        attended_several_hearings_acting_for_multiple_clients:
          description: Attended several hearings acting for multiple clients
          title: attended_several_hearings_acting_for_multiple_clients
          type: boolean
        bill_ho_ucn:
          description: Bill HO UCN
          title: bill_ho_ucn
          type: string
        bill_number_of_attendances:
          description: Bill number of attendances
          format: int32
          title: bill_number_of_attendances
          type: integer
        bill_outcome_for_the_client_code:
          description: Bill outcome for the client code
          format: int32
          title: bill_outcome_for_the_client_code
          type: integer
        bill_stage_reached_code:
          description: Bill stage reached code
          format: int32
          title: bill_stage_reached_code
          type: integer
        case_reference:
          description: Case reference
          title: case_reference
          type: string
        case_start_date:
          description: Case start date
          format: date
          title: case_start_date
          type: string
        category:
          description: Category
          format: int32
          title: category
          type: integer
        category_as_string:
          description: Category as string
          title: category_as_string
          type: string
        certificate_effective_date:
          description: Certificate effective date
          format: date
          title: certificate_effective_date
          type: string
        certificate_expiration_date:
          description: Certificate expiration date
          format: date
          title: certificate_expiration_date
          type: string
        certificate_number:
          description: Certificate number
          title: certificate_number
          type: string
        certificate_scope:
          description: Certificate scope
          title: certificate_scope
          type: string
        certification_type:
          description: Certification type
          format: int32
          title: certification_type
          type: integer
        change_of_solicitor:
          description: Change of solicitor
          title: change_of_solicitor
          type: boolean
        client_equal_opportunity_monitoring:
          description: Client equal opportunity monitoring
          title: client_equal_opportunity_monitoring
          type: string
        client_type:
          description: Client type
          format: int32
          title: client_type
          type: integer
        clr_start_date:
          description: CLR start date
          format: date
          title: clr_start_date
          type: string
        clr_total_profit_costs:
          description: CLR total profit costs
          title: clr_total_profit_costs
          type: string
        cost_limit:
          description: Cost limit
          title: cost_limit
          type: string
        counsel:
          description: Counsel
          format: int32
          title: counsel
          type: integer
        court:
          description: Court
          format: int32
          title: court
          type: integer
        court_id:
          description: Court ID
          format: int32
          title: court_id
          type: integer
        court_id_code:
          description: Court ID code
          title: court_id_code
          type: string
        created_at:
          description: The time the *LegalAidUkMatter* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        delivery_location:
          description: Delivery location
          title: delivery_location
          type: string
        dscc_number:
          description: DSCC number
          title: dscc_number
          type: string
        duty_solicitor:
          description: Duty solicitor
          title: duty_solicitor
          type: boolean
        etag:
          description: ETag for the *LegalAidUkMatter*
          title: etag
          type: string
        exceptional_case_funding_reference:
          description: Exceptional case funding reference
          title: exceptional_case_funding_reference
          type: string
        expense_limit:
          description: Expense limit
          title: expense_limit
          type: string
        fee_scheme:
          description: Fee scheme
          format: int32
          title: fee_scheme
          type: integer
        first_conducting_solicitor:
          description: First conducting solicitor
          title: first_conducting_solicitor
          type: boolean
        id:
          description: Unique identifier for the *LegalAidUkMatter*
          format: int64
          title: id
          type: integer
        irc_surgery:
          description: Irc surgery
          title: irc_surgery
          type: string
        legacy_case:
          description: Legacy case
          title: legacy_case
          type: string
        legal_representation_number:
          description: Legal representation number
          title: legal_representation_number
          type: string
        lh_total_disbursements:
          description: LH total disbursements
          title: lh_total_disbursements
          type: string
        lh_start_date:
          description: LH start date
          title: lh_start_date
          type: string
        lh_total_profit_costs:
          description: LH total profit costs
          title: lh_total_profit_costs
          type: string
        linked_matter_id:
          description: Linked matter ID
          format: int64
          title: linked_matter_id
          type: integer
        local_authority_number:
          description: Local authority number
          title: local_authority_number
          type: string
        maat_id:
          description: MAAT ID
          title: maat_id
          type: string
        matter_type:
          description: Matter type
          format: int32
          title: matter_type
          type: integer
        matter_type_code:
          description: Matter type code
          title: matter_type_code
          type: string
        matter_type_1:
          description: Matter type 1
          format: int32
          title: matter_type_1
          type: integer
        matter_type_1_code:
          description: Matter type 1 code
          title: matter_type_1_code
          type: string
        matter_type_1_title:
          description: Matter type 1 title
          title: matter_type_1_title
          type: string
        matter_type_2:
          description: Matter type 2
          format: int32
          title: matter_type_2
          type: integer
        matter_type_2_code:
          description: Matter type 2 code
          title: matter_type_2_code
          type: string
        matter_type_2_title:
          description: Matter type 2 title
          title: matter_type_2_title
          type: string
        matter_types_combined:
          description: Matter types combined
          title: matter_types_combined
          type: string
        number_of_clients_seen_at_surgery:
          description: Number of clients seen at surgery
          format: int32
          title: number_of_clients_seen_at_surgery
          type: integer
        number_of_clients:
          description: Number of clients
          format: int32
          title: number_of_clients
          type: integer
        party:
          description: Party
          format: int32
          title: party
          type: integer
        police_station:
          description: Police station
          title: police_station
          type: string
        post_transfer_clients_represented:
          description: Post transfer clients represented
          format: int32
          title: post_transfer_clients_represented
          type: integer
        postal_application_accepted:
          description: Postal application accepted
          title: postal_application_accepted
          type: string
        prior_authority_reference:
          description: Priory authority reference
          title: prior_authority_reference
          type: string
        prison_id:
          description: Prison ID
          format: int32
          title: prison_id
          type: integer
        prison_law_prior_approval_number:
          description: Prison law prior approval number
          title: prison_law_prior_approval_number
          type: string
        procurement_area:
          description: Procurement area
          title: procurement_area
          type: string
        region:
          description: Region
          format: int32
          title: region
          type: integer
        related_claims_number:
          description: Related claims number
          title: related_claims_number
          type: string
        representation_order_date:
          description: Representation order date
          format: date
          title: representation_order_date
          type: string
        schedule_reference_number:
          description: Schedule reference number
          title: schedule_reference_number
          type: string
        scheme_id:
          description: Scheme ID
          title: scheme_id
          type: string
        session_type:
          description: Session type
          format: int32
          title: session_type
          type: integer
        solicitor_type:
          description: Solicitor type
          format: int32
          title: solicitor_type
          type: integer
        standard_fee_category:
          description: Standard fee category
          format: int32
          title: standard_fee_category
          type: integer
        surgery_clients_resulting_in_a_legal_help_matter_opened:
          description: Surgery clients resulting in a legal help matter opened
          format: int32
          title: surgery_clients_resulting_in_a_legal_help_matter_opened
          type: integer
        surgery_clients:
          description: Surgery clients
          format: int32
          title: surgery_clients
          type: integer
        surgery_date:
          description: Surgery date
          format: date
          title: surgery_date
          type: string
        transfer_date:
          description: Transfer date
          format: date
          title: transfer_date
          type: string
        type_of_advice:
          description: Type of advice
          format: int32
          title: type_of_advice
          type: integer
        type_of_service:
          description: Type of service
          title: type_of_service
          type: string
        ucn:
          description: UCN
          title: ucn
          type: string
        ufn:
          description: UFN
          title: ufn
          type: string
        undesignated_area_court:
          description: Undesignated area court
          title: undesignated_area_court
          type: boolean
        updated_at:
          description: The time the *LegalAidUkMatter* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        user_type:
          description: User type
          format: int32
          title: user_type
          type: integer
        youth_court:
          description: Youth court
          title: youth_court
          type: boolean
      title: LegalAidUkMatter_base
      type: object
    LineItemTotals_base:
      properties:
        quantity:
          description: Sum of quantity for included line items.
          format: double
          title: quantity
          type: number
        price:
          description: Sum of price for included line items.
          format: double
          title: price
          type: number
        discount_percent:
          description: Sum of discount as percentage for included line items.
          format: double
          title: discount_percent
          type: number
        total:
          description: Sum of total for included line items.
          format: double
          title: total
          type: number
        sub_total:
          description: Sum of total before discount and tax is applied.
          format: double
          title: sub_total
          type: number
      title: LineItemTotals_base
      type: object
    MatterBillRecipient_base:
      properties:
        created_at:
          description: The time the *MatterBillRecipient* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        etag:
          description: ETag for the *MatterBillRecipient*
          title: etag
          type: string
        id:
          description: Unique identifier for the *MatterBillRecipient*
          format: int64
          title: id
          type: integer
        updated_at:
          description: The time the *MatterBillRecipient* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: MatterBillRecipient_base
      type: object
    MatterBudget_base:
      properties:
        id:
          description: Unique identifier for the *MatterBudget*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *MatterBudget*
          title: etag
          type: string
        budget:
          description: The amount allocated for the matter.
          format: double
          title: budget
          type: number
        include_expenses:
          description: Whether the budget includes expenses.
          title: include_expenses
          type: boolean
        notification_threshold:
          description: Percentage of the budget when it starts notifying users. The
            number must be between 0 and 100.
          format: int32
          title: notification_threshold
          type: integer
        notify_users:
          description: Whether to notify users when the matter reaches the notification
            threshold.
          title: notify_users
          type: boolean
        created_at:
          description: The time the *MatterBudget* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *MatterBudget* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: MatterBudget_base
      type: object
    MatterCustomRate_base:
      properties:
        type:
          description: The type of the *MatterCustomRate*
          enum:
          - FlatRate
          - HourlyRate
          - ContingencyFee
          title: type
          type: string
        on_invoice:
          description: Specifies if the matter's associated activity is posted or
            on a bill.
          title: on_invoice
          type: boolean
      title: MatterCustomRate_base
      type: object
    MatterBalance_base:
      properties:
        id:
          description: Unique identifier for the *MatterBalance*
          format: int64
          title: id
          type: integer
        amount:
          description: The amount of balance of a matter.
          format: double
          title: amount
          type: number
      title: MatterBalance_base
      type: object
    NotificationEventSubscriber_base:
      properties:
        id:
          description: Unique identifier for the *NotificationEventSubscriber*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *NotificationEventSubscriber*
          title: etag
          type: string
        user_id:
          description: The unique identifier for a User added as a notification event
            subscriber to the NotificationEventSubscriber
          format: int64
          title: user_id
          type: integer
        name:
          description: The User name added as a notification event subscriber to the
            NotificationEventSubscriber
          title: name
          type: string
        created_at:
          description: The time the *NotificationEventSubscriber* was created (as
            a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *NotificationEventSubscriber* was last updated
            (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: NotificationEventSubscriber_base
      type: object
    NotificationMethod_base:
      properties:
        id:
          description: Unique identifier for the *NotificationMethod*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *NotificationMethod*
          title: etag
          type: string
        type:
          description: Human readable description of the type of notification
          enum:
          - Email
          - Popup
          - SMS
          title: type
          type: string
        email_address:
          description: Email address to send the notification to (only for email type)
          title: email_address
          type: string
        is_default_email_address:
          description: A boolean that is returned only on notification method objects
            that are relevant e.g. Email notification or Alternative Email
          title: is_default_email_address
          type: boolean
        created_at:
          description: The time the *NotificationMethod* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *NotificationMethod* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: NotificationMethod_base
      type: object
    Participant_base:
      properties:
        id:
          description: Unique identifier for the *Participant*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *Participant*
          title: etag
          type: string
        created_at:
          description: The time the *Participant* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Participant* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        type:
          description: The type of the Participant. Person and Company are subtypes
            of Contact
          enum:
          - Person
          - Company
          - User
          title: type
          type: string
        identifier:
          description: A string to identify the *Participant*
          title: identifier
          type: string
        secondary_identifier:
          description: A secondary string to identify the *Participant*
          title: secondary_identifier
          type: string
        enabled:
          description: The enabled state of the *Participant* record. Always 'null'
            if *Participant* type is Contact
          title: enabled
          type: boolean
        name:
          description: The name of the *Participant* record
          title: name
          type: string
        initials:
          description: A  string with the participant initials
          title: initials
          type: string
        job_title_name:
          description: the job title name of the participant if they are a firm user
            and have one
          title: job_title_name
          type: string
      title: Participant_base
      type: object
    PaymentProfile_base:
      properties:
        id:
          description: Unique identifier for the *PaymentProfile*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *PaymentProfile*
          title: etag
          type: string
        created_at:
          description: The time the *PaymentProfile* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *PaymentProfile* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
        billing_setting_id:
          description: The unique identifier for the *PaymentProfile
          format: int64
          title: billing_setting_id
          type: integer
        name:
          description: The name of the *PaymentProfile
          title: name
          type: string
        terms:
          description: The total grace period for the *PaymentProfile
          format: int32
          title: terms
          type: integer
        discount_rate:
          description: The early payment discount rate for the *PaymentProfile
          format: float
          title: discount_rate
          type: number
        discount_period:
          description: The early payment discount period for the *PaymentProfile
          format: int32
          title: discount_period
          type: integer
        interest_rate:
          description: The interest rate for the *PaymentProfile
          format: float
          title: interest_rate
          type: number
        interest_period:
          description: The interest period interval for the *PaymentProfile
          format: int32
          title: interest_period
          type: integer
        interest_type:
          description: The type of interest to be calculated for the *PaymentProfile
            (Simple or Compound)
          enum:
          - simple
          - compound
          title: interest_type
          type: string
      title: PaymentProfile_base
      type: object
    Lien_base:
      properties:
        id:
          description: Unique identifier for the *Lien*
          format: int64
          title: id
          type: integer
        amount:
          description: The amount for Lien
          format: double
          title: amount
          type: number
        description:
          description: Lien description
          title: description
          type: string
        etag:
          description: ETag for the *Lien*
          title: etag
          type: string
        lien_type:
          description: Lien type
          enum:
          - general
          - medical_payer
          - medical_provider
          title: lien_type
          type: string
        mark_as_lien:
          description: Mark item as Lien
          title: mark_as_lien
          type: boolean
        created_at:
          description: The time the *Lien* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *Lien* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: Lien_base
      type: object
    PolymorphicObject_base:
      example:
        identifier: identifier
        secondary_identifier: secondary_identifier
        tertiary_identifier: tertiary_identifier
        id: 7
        type: Task
      properties:
        id:
          description: Unique identifier for the *PolymorphicObject*
          format: int64
          title: id
          type: integer
        type:
          description: The type of the *PolymorphicObject*
          enum:
          - Task
          - CalendarEntry
          - MatterNote
          - ContactNote
          - Matter
          - Contact
          - User
          - CreditMemo
          - Payment
          title: type
          type: string
        identifier:
          description: A string to identify the *PolymorphicObject*
          title: identifier
          type: string
        secondary_identifier:
          description: A secondary string to identify the *PolymorphicObject*
          title: secondary_identifier
          type: string
        tertiary_identifier:
          description: A tertiary string to identify the *PolymorphicObject*
          title: tertiary_identifier
          type: string
      title: PolymorphicObject_base
      type: object
    ReminderTemplate_base:
      properties:
        id:
          description: Unique identifier for the *ReminderTemplate*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *ReminderTemplate*
          title: etag
          type: string
        duration:
          description: The time in minutes to remind user before the subject.
          format: int32
          title: duration
          type: integer
        notification_type:
          description: The type of method to be notified by
          enum:
          - Email
          - Popup
          title: notification_type
          type: string
        created_at:
          description: The time the *ReminderTemplate* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *ReminderTemplate* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: ReminderTemplate_base
      type: object
    SplitInvoicePayer_base:
      properties:
        id:
          description: Unique identifier for the *SplitInvoicePayer*
          format: int64
          title: id
          type: integer
        contact_id:
          description: The ID of the payer for the split invoice.
          format: int64
          title: contact_id
          type: integer
        matter_id:
          description: The ID of the Matter that has split invoicing enabled.
          format: int64
          title: matter_id
          type: integer
        send_to_bill_recipients:
          description: Boolean to indicate if the sent bills should include bill recipients
            by default.
          title: send_to_bill_recipients
          type: boolean
        split_portion:
          description: The percentage of the bill that the payer is responsible for.
          format: double
          title: split_portion
          type: number
        etag:
          description: ETag for the *SplitInvoicePayer*
          title: etag
          type: string
        created_at:
          description: The time the *SplitInvoicePayer* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *SplitInvoicePayer* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: SplitInvoicePayer_base
      type: object
    SplitInvoice_base:
      properties:
        id:
          description: Unique identifier for the *SplitInvoice*
          format: int64
          title: id
          type: integer
        bill_id:
          description: The ID of the bill that was split.
          format: int64
          title: bill_id
          type: integer
        linked_invoices_display_numbers:
          description: Display numbers of all invoices split with this one.
          items:
            type: string
          title: linked_invoices_display_numbers
          type: array
        linked_invoices_ids:
          description: IDs of all invoices split with this one.
          items:
            format: int32
            type: integer
          title: linked_invoices_ids
          type: array
        split_connection_id:
          description: UUID to determine which invoices are split together.
          title: split_connection_id
          type: string
        split_portion:
          description: The percentage of the bill that the payer is responsible for.
          format: double
          title: split_portion
          type: number
        etag:
          description: ETag for the *SplitInvoice*
          title: etag
          type: string
        created_at:
          description: The time the *SplitInvoice* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *SplitInvoice* was last updated (as a ISO-8601
            timestamp)
          format: date-time
          title: updated_at
          type: string
      title: SplitInvoice_base
      type: object
    TaskTemplateListInstace_base:
      properties:
        id:
          description: Unique identifier for the *TaskTemplateListInstace*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *TaskTemplateListInstace*
          title: etag
          type: string
        created_at:
          description: The time the *TaskTemplateListInstace* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *TaskTemplateListInstace* was last updated (as
            a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: TaskTemplateListInstace_base
      type: object
    UnredactedParticipant_base:
      properties: {}
      title: UnredactedParticipant_base
      type: object
    WebSite_base:
      properties:
        id:
          description: Unique identifier for the *WebSite*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *WebSite*
          title: etag
          type: string
        address:
          description: The address of the *WebSite*
          title: address
          type: string
        name:
          description: The type of *WebSite* it is
          enum:
          - Work
          - Personal
          - Twitter
          - Facebook
          - LinkedIn
          - Instant Messenger
          - Other
          title: name
          type: string
        default_web_site:
          description: Whether it is the default for this contact
          title: default_web_site
          type: boolean
        created_at:
          description: The time the *WebSite* was created (as a ISO-8601 timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *WebSite* was last updated (as a ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
      title: WebSite_base
      type: object
    Multipart:
      allOf:
      - $ref: '#/components/schemas/Multipart_base'
      - properties:
          put_headers:
            description: MultipartHeader
            items:
              $ref: '#/components/schemas/MultipartHeader_base'
            type: array
        type: object
      title: Multipart
      type: object
    BillRecipient:
      allOf:
      - $ref: '#/components/schemas/BillRecipient_base'
      - properties:
          recipient:
            $ref: '#/components/schemas/BillRecipient_Contact_base'
        type: object
      type: object
    BillRecipient_Contact_base:
      properties:
        id:
          description: Unique identifier for the *Contact*
          format: int64
          title: id
          type: integer
        name:
          description: The full name of the *Contact*
          title: name
          type: string
        first_name:
          description: First name of the Person
          title: first_name
          type: string
        middle_name:
          description: Middle name of the Person
          title: middle_name
          type: string
        last_name:
          description: Last name of the Person
          title: last_name
          type: string
        type:
          description: The type of the *Contact*
          enum:
          - Company
          - Person
          title: type
          type: string
        primary_email_address:
          description: The primary email address associated with this *Contact*.
          title: primary_email_address
          type: string
      title: BillRecipient_Contact_base
      type: object
    ConversationMembership:
      allOf:
      - $ref: '#/components/schemas/ConversationMembership_base'
      - properties:
          member:
            $ref: '#/components/schemas/UnredactedParticipant_base'
        type: object
      title: ConversationMembership
      type: object
    CustomFieldValue:
      allOf:
      - $ref: '#/components/schemas/CustomFieldValue_base'
      - properties:
          custom_field:
            $ref: '#/components/schemas/CustomField'
          picklist_option:
            $ref: '#/components/schemas/PicklistOption'
          matter:
            $ref: '#/components/schemas/CustomFieldMatterSelection_base'
          contact:
            $ref: '#/components/schemas/Contact_base'
        type: object
      title: CustomFieldValue
      type: object
    MatterBillRecipient:
      allOf:
      - $ref: '#/components/schemas/MatterBillRecipient_base'
      - properties:
          recipient:
            $ref: '#/components/schemas/Contact_base'
        type: object
      title: MatterBillRecipient
      type: object
    MatterCustomRate:
      allOf:
      - $ref: '#/components/schemas/MatterCustomRate_base'
      - properties:
          rates:
            description: PolymorphicCustomRate
            items:
              $ref: '#/components/schemas/PolymorphicCustomRate'
            type: array
        type: object
      title: MatterCustomRate
      type: object
    Participant:
      allOf:
      - $ref: '#/components/schemas/Participant_base'
      - properties:
          avatar:
            $ref: '#/components/schemas/Avatar_base'
        type: object
      title: Participant
      type: object
    CustomFieldMatterSelection_base:
      properties:
        id:
          description: Unique identifier for the *CustomFieldMatterSelection*
          format: int64
          title: id
          type: integer
        display_number:
          description: "The reference and label of the *CustomFieldMatterSelection*.\
            \ Depending on the account's manual_matter_numbering setting, this is\
            \ either read only (generated) or customizable."
          title: display_number
          type: string
      title: CustomFieldMatterSelection_base
      type: object
    CustomFieldMatterSelection:
      allOf:
      - $ref: '#/components/schemas/CustomFieldMatterSelection_base'
      - properties: {}
        type: object
      type: object
    PicklistOption:
      allOf:
      - $ref: '#/components/schemas/PicklistOption_base'
      - properties: {}
        type: object
      title: PicklistOption
      type: object
    PolymorphicCustomRate_base:
      properties:
        id:
          description: The unique identifier for the custom rate
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *PolymorphicCustomRate*
          title: etag
          type: string
        created_at:
          description: The time the *PolymorphicCustomRate* was created (as a ISO-8601
            timestamp)
          format: date-time
          title: created_at
          type: string
        updated_at:
          description: The time the *PolymorphicCustomRate* was last updated (as a
            ISO-8601 timestamp)
          format: date-time
          title: updated_at
          type: string
        rate:
          description: |
            If `custom_rate.type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.

            If `custom_rate.type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.

            If `custom_rate.type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter. The value may also be expressed as string that represents a rational number such as `1/3`.

            If the user does not have sufficient rate visibility, the rates are hidden.
          format: double
          title: rate
          type: number
        award:
          description: The value of the ContingencyFee award.
          format: double
          title: award
          type: number
        note:
          description: Details about the ContingencyFee award.
          title: note
          type: string
        date:
          description: The date of the ContingencyFee award.
          format: date
          title: date
          type: string
      title: PolymorphicCustomRate_base
      type: object
    PolymorphicCustomRate:
      allOf:
      - $ref: '#/components/schemas/PolymorphicCustomRate_base'
      - properties:
          user:
            $ref: '#/components/schemas/PolymorphicCustomRate_User_base'
          group:
            $ref: '#/components/schemas/PolymorphicCustomRate_Group_base'
          activity_description:
            $ref: '#/components/schemas/PolymorphicCustomRate_ActivityDescription_base'
        type: object
      title: PolymorphicCustomRate
      type: object
    PolymorphicCustomRate_User_base:
      properties:
        enabled:
          description: Whether the *User* is allowed to log in
          title: enabled
          type: boolean
        etag:
          description: ETag for the *User*
          title: etag
          type: string
        id:
          description: Unique identifier for the *User*
          format: int64
          title: id
          type: integer
        name:
          description: The full name of the *User*
          title: name
          type: string
      title: PolymorphicCustomRate_User_base
      type: object
    PolymorphicCustomRate_Group_base:
      properties:
        etag:
          description: ETag for the *Group*
          title: etag
          type: string
        id:
          description: Unique identifier for the *Group*
          format: int64
          title: id
          type: integer
        name:
          description: The name of the *Group*
          title: name
          type: string
      title: PolymorphicCustomRate_Group_base
      type: object
    PolymorphicCustomRate_ActivityDescription_base:
      properties:
        id:
          description: Unique identifier for the *ActivityDescription*
          format: int64
          title: id
          type: integer
        etag:
          description: ETag for the *ActivityDescription*
          title: etag
          type: string
        name:
          description: The name of the *ActivityDescription*
          title: name
          type: string
      title: PolymorphicCustomRate_ActivityDescription_base
      type: object
    Activity_create_request_data_activity_description:
      properties:
        id:
          description: The unique identifier for a single ActivityDescription associated
            with the Activity. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        utbms_task_id:
          description: The unique identifier for a single UtbmsTask associated with
            the Activity. The keyword `null` is not valid for this field.
          format: int64
          title: utbms_task_id
          type: integer
        utbms_activity_id:
          description: The unique identifier for a single UtbmsActivity associated
            with the Activity. The keyword `null` is not valid for this field.
          format: int64
          title: utbms_activity_id
          type: integer
      title: Activity_create_request_data_activity_description
      type: object
    Activity_create_request_data_calendar_entry:
      properties:
        id:
          description: The unique identifier for a single CalendarEntry associated
            with the Activity. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Activity_create_request_data_calendar_entry
      type: object
    Activity_create_request_data_client_portal:
      properties:
        id:
          description: The unique identifier for a single ClientPortal associated
            with the Activity. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Activity_create_request_data_client_portal
      type: object
    Activity_create_request_data_communication:
      properties:
        id:
          description: The unique identifier for a single Communication associated
            with the Activity. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Activity_create_request_data_communication
      type: object
    Activity_create_request_data_contact_note:
      properties:
        id:
          description: The unique identifier for a single Note associated with the
            Activity. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Activity_create_request_data_contact_note
      type: object
    Activity_create_request_data_expense_category:
      properties:
        id:
          description: |
            The unique identifier for a single ExpenseCategory associated with an Activity.
            Use the keyword `null` to specify no association.
          format: int64
          title: id
          type: integer
      title: Activity_create_request_data_expense_category
      type: object
    Activity_create_request_data_matter:
      properties:
        id:
          description: The unique identifier for a single Matter associated with the
            Activity. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Activity_create_request_data_matter
      type: object
    Activity_create_request_data_task:
      properties:
        id:
          description: The unique identifier for a single Task associated with the
            Activity. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Activity_create_request_data_task
      type: object
    Activity_create_request_data_text_message_conversation:
      properties:
        id:
          description: The unique identifier for a single TextMessageConversation
            associated with the Activity. The keyword `null` is not valid for this
            field.
          format: int64
          title: id
          type: integer
      title: Activity_create_request_data_text_message_conversation
      type: object
    Activity_create_request_data_user:
      properties:
        id:
          description: |
            The unique identifier for a single User associated with the Activity.
            Use the keyword `null` to specify no association.
            On creation, if no user is specified, it will default to the current user.

            If a TimeEntry is created by a Clio Connect user, the field is not editable.
          format: int64
          title: id
          type: integer
      title: Activity_create_request_data_user
      type: object
    Activity_create_request_data_utbms_expense:
      properties:
        id:
          description: The unique identifier for a single UtbmsExpense associated
            with the Activity. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Activity_create_request_data_utbms_expense
      type: object
    Activity_create_request_data_vendor:
      properties:
        id:
          description: |
            The unique identifier for a single Contact associated with a HardCostEntry.
            Use the keyword `null` to specify no association.
          format: int64
          title: id
          type: integer
      title: Activity_create_request_data_vendor
      type: object
    Activity_create_request_data:
      properties:
        activity_description:
          $ref: '#/components/schemas/Activity_create_request_data_activity_description'
        calendar_entry:
          $ref: '#/components/schemas/Activity_create_request_data_calendar_entry'
        client_portal:
          $ref: '#/components/schemas/Activity_create_request_data_client_portal'
        communication:
          $ref: '#/components/schemas/Activity_create_request_data_communication'
        contact_note:
          $ref: '#/components/schemas/Activity_create_request_data_contact_note'
        date:
          description: The date the Activity was performed. (Expects an ISO-8601 date).
          format: date
          title: date
          type: string
        expense_category:
          $ref: '#/components/schemas/Activity_create_request_data_expense_category'
        matter:
          $ref: '#/components/schemas/Activity_create_request_data_matter'
        matter_note:
          $ref: '#/components/schemas/Activity_create_request_data_contact_note'
        no_charge:
          description: Whether the non-billable *Activity* will be shown on the bill.
          title: no_charge
          type: boolean
        non_billable:
          description: |
            Whether or not this Activity is prevented from appearing as a line item in a bill.
            Only valid for non-billed TimeEntries, and with the exception of the Activity having no_charge set to true.
          title: non_billable
          type: boolean
        note:
          description: A custom note to describe what the Activity is for.
          title: note
          type: string
        price:
          description: |
            For an ExpenseEntry, HardCostEntry, and SoftCostEntry, it is the expense amount.

            [Support Link for ExpenseEntry](https://help.clio.com/hc/en-us/articles/9289745356571-Expenses)

            [Support Link for HardCostEntry and SoftCostEntry](https://help.clio.com/hc/en-us/articles/9289745356571-Expenses#enable-hard-and-soft-cost-expenses-0-0)

            For a TimeEntry, it is the hourly or flat amount. When updating a TimeEntry,
            if the price is not given or the user does not have the permission to view the rate,
            and its activity description, matter and/or user is changed,
            the price is reset according to the rate defined for the activity description, matter, client or user.

            [Support Link for Rates Hierarchy](https://help.clio.com/hc/en-us/articles/9289801180187-Rates-and-Rate-Hierarchies-)

            [Support Link for Billing Rate Visibility](https://help.clio.com/hc/en-us/articles/9285360193819-Permissions-and-Billing-Rates#billing-rate-visibility-0-3)
          format: double
          title: price
          type: number
        quantity:
          description: |
            The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.

            **Version <= 4.0.3:**
            The number of hours the TimeEntry took.

            **Latest version:**
            The number of seconds the TimeEntry took.
          format: double
          title: quantity
          type: number
        reference:
          description: A check reference for a HardCostEntry.
          title: reference
          type: string
        start_timer:
          description: "Whether or not a timer should be started for this Activity.\
            \ Only valid for non-FlatRate, non-billed TimeEntries."
          title: start_timer
          type: boolean
        task:
          $ref: '#/components/schemas/Activity_create_request_data_task'
        tax_setting:
          description: "The option denoting whether primary tax, secondary tax, or\
            \ both is applied to an expense entry."
          enum:
          - no_tax
          - tax_1_only
          - tax_2_only
          - tax_1_and_tax_2
          title: tax_setting
          type: string
        text_message_conversation:
          $ref: '#/components/schemas/Activity_create_request_data_text_message_conversation'
        type:
          description: The type of the Activity.
          enum:
          - TimeEntry
          - ExpenseEntry
          - HardCostEntry
          - SoftCostEntry
          title: type
          type: string
        user:
          $ref: '#/components/schemas/Activity_create_request_data_user'
        utbms_expense:
          $ref: '#/components/schemas/Activity_create_request_data_utbms_expense'
        vendor:
          $ref: '#/components/schemas/Activity_create_request_data_vendor'
      required:
      - date
      - type
      title: Activity_create_request_data
      type: object
    Activity_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Activity_create_request_data'
      required:
      - data
      title: Activity_create_request
      type: object
    Activity_update_request_data:
      properties:
        activity_description:
          $ref: '#/components/schemas/Activity_create_request_data_activity_description'
        calendar_entry:
          $ref: '#/components/schemas/Activity_create_request_data_calendar_entry'
        client_portal:
          $ref: '#/components/schemas/Activity_create_request_data_client_portal'
        communication:
          $ref: '#/components/schemas/Activity_create_request_data_communication'
        contact_note:
          $ref: '#/components/schemas/Activity_create_request_data_contact_note'
        date:
          description: The date the Activity was performed. (Expects an ISO-8601 date).
          format: date
          title: date
          type: string
        expense_category:
          $ref: '#/components/schemas/Activity_create_request_data_expense_category'
        matter:
          $ref: '#/components/schemas/Activity_create_request_data_matter'
        matter_note:
          $ref: '#/components/schemas/Activity_create_request_data_contact_note'
        no_charge:
          description: Whether the non-billable *Activity* will be shown on the bill.
          title: no_charge
          type: boolean
        non_billable:
          description: |
            Whether or not this Activity is prevented from appearing as a line item in a bill.
            Only valid for non-billed TimeEntries, and with the exception of the Activity having no_charge set to true.
          title: non_billable
          type: boolean
        note:
          description: A custom note to describe what the Activity is for.
          title: note
          type: string
        price:
          description: |
            For an ExpenseEntry, HardCostEntry, and SoftCostEntry, it is the expense amount.

            [Support Link for ExpenseEntry](https://help.clio.com/hc/en-us/articles/9289745356571-Expenses)

            [Support Link for HardCostEntry and SoftCostEntry](https://help.clio.com/hc/en-us/articles/9289745356571-Expenses#enable-hard-and-soft-cost-expenses-0-0)

            For a TimeEntry, it is the hourly or flat amount. When updating a TimeEntry,
            if the price is not given or the user does not have the permission to view the rate,
            and its activity description, matter and/or user is changed,
            the price is reset according to the rate defined for the activity description, matter, client or user.

            [Support Link for Rates Hierarchy](https://help.clio.com/hc/en-us/articles/9289801180187-Rates-and-Rate-Hierarchies-)

            [Support Link for Billing Rate Visibility](https://help.clio.com/hc/en-us/articles/9285360193819-Permissions-and-Billing-Rates#billing-rate-visibility-0-3)
          format: double
          title: price
          type: number
        quantity:
          description: |
            The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.

            **Version <= 4.0.3:**
            The number of hours the TimeEntry took.

            **Latest version:**
            The number of seconds the TimeEntry took.
          format: double
          title: quantity
          type: number
        reference:
          description: A check reference for a HardCostEntry.
          title: reference
          type: string
        start_timer:
          description: "Whether or not a timer should be started for this Activity.\
            \ Only valid for non-FlatRate, non-billed TimeEntries."
          title: start_timer
          type: boolean
        task:
          $ref: '#/components/schemas/Activity_create_request_data_task'
        tax_setting:
          description: "The option denoting whether primary tax, secondary tax, or\
            \ both is applied to an expense entry."
          enum:
          - no_tax
          - tax_1_only
          - tax_2_only
          - tax_1_and_tax_2
          title: tax_setting
          type: string
        text_message_conversation:
          $ref: '#/components/schemas/Activity_create_request_data_text_message_conversation'
        type:
          description: The type of the Activity.
          enum:
          - TimeEntry
          - ExpenseEntry
          - HardCostEntry
          - SoftCostEntry
          title: type
          type: string
        user:
          $ref: '#/components/schemas/Activity_create_request_data_user'
        utbms_expense:
          $ref: '#/components/schemas/Activity_create_request_data_utbms_expense'
        vendor:
          $ref: '#/components/schemas/Activity_create_request_data_vendor'
      title: Activity_update_request_data
      type: object
    Activity_update_request:
      properties:
        data:
          $ref: '#/components/schemas/Activity_update_request_data'
      required:
      - data
      title: Activity_update_request
      type: object
    ActivityRate_create_request_data:
      properties:
        co_counsel_contact_id:
          description: The unique identifier for a single Contact associated with
            the ActivityRate. The keyword `null` is not valid for this field.
          format: int64
          title: co_counsel_contact_id
          type: integer
        contact_id:
          description: The unique identifier for a single Contact associated with
            the ActivityRate. The keyword `null` is not valid for this field.
          format: int64
          title: contact_id
          type: integer
        flat_rate:
          description: Whether this is a flat rate
          title: flat_rate
          type: boolean
        rate:
          description: Monetary value of this rate. Either hourly value or flat rate
            value
          format: double
          title: rate
          type: number
      title: ActivityRate_create_request_data
      type: object
    ActivityRate_create_request:
      properties:
        data:
          $ref: '#/components/schemas/ActivityRate_create_request_data'
      required:
      - data
      title: ActivityRate_create_request
      type: object
    ActivityDescription_create_request_data_groups_inner:
      properties:
        id:
          description: The unique identifier for a single Group associated with the
            ActivityDescription. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: ActivityDescription_create_request_data_groups_inner
      type: object
    ActivityDescription_create_request_data_rate:
      properties:
        amount:
          default: 0
          description: The rate of the ActivityDescription. This is ignored for 'User'
            rates.
          format: double
          title: amount
          type: number
        non_billable_amount:
          default: 0
          description: The non billable rate of the ActivityDescription. This is ignored
            for 'User' rates.
          format: double
          title: non_billable_amount
          type: number
        type:
          description: What kind of rate it will be.
          enum:
          - User
          - FlatRate
          - Custom
          title: type
          type: string
      title: ActivityDescription_create_request_data_rate
      type: object
    ActivityDescription_create_request_data:
      properties:
        currency:
          description: Currency of the ActivityDescription.
          title: currency
          type: object
        default:
          description: Whether or not this should be the API User's default ActivityDescription.
          title: default
          type: boolean
        groups:
          items:
            $ref: '#/components/schemas/ActivityDescription_create_request_data_groups_inner'
          title: groups
          type: array
        name:
          description: A detailed description of the ActivityDescription.
          title: name
          type: string
        rate:
          $ref: '#/components/schemas/ActivityDescription_create_request_data_rate'
        visible_to_co_counsel:
          description: Whether or not co counsels on the account can see this ActivityDescription.
          title: visible_to_co_counsel
          type: boolean
      required:
      - name
      title: ActivityDescription_create_request_data
      type: object
    ActivityDescription_create_request:
      properties:
        data:
          $ref: '#/components/schemas/ActivityDescription_create_request_data'
      required:
      - data
      title: ActivityDescription_create_request
      type: object
    ActivityDescription_update_request_data_groups_inner:
      properties:
        id:
          description: The unique identifier for a single Group associated with the
            ActivityDescription. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        _deleted:
          description: A flag to determine if this Group should lose access to this
            ActivityDescription.
          title: _deleted
          type: boolean
      title: ActivityDescription_update_request_data_groups_inner
      type: object
    ActivityDescription_update_request_data:
      properties:
        currency:
          description: Currency of the ActivityDescription.
          title: currency
          type: object
        default:
          description: Whether or not this should be the API User's default ActivityDescription.
          title: default
          type: boolean
        groups:
          items:
            $ref: '#/components/schemas/ActivityDescription_update_request_data_groups_inner'
          title: groups
          type: array
        name:
          description: A detailed description of the ActivityDescription.
          title: name
          type: string
        rate:
          $ref: '#/components/schemas/ActivityDescription_create_request_data_rate'
        visible_to_co_counsel:
          description: Whether or not co counsels on the account can see this ActivityDescription.
          title: visible_to_co_counsel
          type: boolean
      title: ActivityDescription_update_request_data
      type: object
    ActivityDescription_update_request:
      properties:
        data:
          $ref: '#/components/schemas/ActivityDescription_update_request_data'
      required:
      - data
      title: ActivityDescription_update_request
      type: object
    BankAccount_create_request_data:
      properties:
        account_number:
          description: Account number for the BankAccount.
          title: account_number
          type: string
        balance:
          description: BankAccount balance.
          format: double
          title: balance
          type: number
        controlled_account:
          description: Whether is a controlled account.
          title: controlled_account
          type: boolean
        currency:
          description: Currency the BankAccount is in.
          title: currency
          type: string
        default_account:
          description: Whether or not the BankAccount should be the default account.
          title: default_account
          type: boolean
        domicile_branch:
          description: Branch where the BankAccount was opened.
          title: domicile_branch
          type: string
        general_ledger_number:
          description: General ledger number used for the Law Society of Alberta.
          title: general_ledger_number
          type: string
        holder:
          description: BankAccount holder.
          title: holder
          type: string
        institution:
          description: Financial institution.
          title: institution
          type: string
        name:
          description: BankAccount name.
          title: name
          type: string
        swift:
          description: Identification code for the financial institution.
          title: swift
          type: string
        transit_number:
          description: Transit number for the BankAccount branch.
          title: transit_number
          type: string
        type:
          description: Type of BankAccount.
          enum:
          - Operating
          - Trust
          title: type
          type: string
      required:
      - currency
      - type
      title: BankAccount_create_request_data
      type: object
    BankAccount_create_request:
      properties:
        data:
          $ref: '#/components/schemas/BankAccount_create_request_data'
      required:
      - data
      title: BankAccount_create_request
      type: object
    BankAccount_update_request_data:
      properties:
        account_number:
          description: Account number for the BankAccount.
          title: account_number
          type: string
        controlled_account:
          description: Whether is a controlled account.
          title: controlled_account
          type: boolean
        currency:
          description: Currency the BankAccount is in.
          title: currency
          type: string
        default_account:
          description: Whether or not the BankAccount should be the default account.
          title: default_account
          type: boolean
        domicile_branch:
          description: Branch where the BankAccount was opened.
          title: domicile_branch
          type: string
        general_ledger_number:
          description: General ledger number used for the Law Society of Alberta.
          title: general_ledger_number
          type: string
        holder:
          description: BankAccount holder.
          title: holder
          type: string
        institution:
          description: Financial institution.
          title: institution
          type: string
        name:
          description: BankAccount name.
          title: name
          type: string
        swift:
          description: Identification code for the financial institution.
          title: swift
          type: string
        transit_number:
          description: Transit number for the BankAccount branch.
          title: transit_number
          type: string
      title: BankAccount_update_request_data
      type: object
    BankAccount_update_request:
      properties:
        data:
          $ref: '#/components/schemas/BankAccount_update_request_data'
      required:
      - data
      title: BankAccount_update_request
      type: object
    BillTheme_update_request_data:
      properties:
        config:
          description: |
            A string containing settings for the BillTheme.
            Values set in this string will apply to any bill using this BillTheme, unless overridden by the bill.

            Available settings within this string:
            - "show": Values set under this key determine how/if sections will appear on a bill.
            - "text": Values set under this key determine what will display if the section is shown.
            - "css": Values set under this key determine CSS rules for sections on a bill.

            Available settings under "show":
            - "client_account": Can be set to "hidden", "details", or "summary" to control the display and content of this section.
            - "client_account_details_balance_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "client_account_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "client_account_include_matter_transfers": Can be set to true/false to toggle displaying this section.
            - "client_account_matter_date_text_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "client_account_matter_details_description_text_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "client_account_matter_title_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "client_account_matter_type_text_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "client_account_only_bill_matters": Can be set to true/false to toggle displaying this section.
            - "client_account_other_matters": Can be set to true/false to toggle displaying this section.
            - "client_account_payments_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "client_account_receipts_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "client_account_summary_balance_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "client_justification": Can be set to "center", "left", or "right" to control the justification of this section.
            - "client_operating_account_omit_balance": Can be set to true/false to toggle displaying this section.
            - "clio_payments_amount_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "clio_payments_amount_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "clio_payments_date_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "clio_payments_date_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "clio_payments_note_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "clio_payments_note_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "clio_payments_reference_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "clio_payments_reference_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "clio_payments_status_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "clio_payments_status_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "draft_watermark": Can be set to true/false to toggle displaying a draft watermark. Will only affect bills in draft.
            - "envelope_friendly": Can be set to true/false to toggle size styling for the bill.
            - "firm_address": Can be set to true/false to toggle displaying this section.
            - "firm_justification": Can be set to "center", "left", or "right" to control the justification of this section.
            - "firm_title": Can be set to true/false to toggle displaying this section.
            - "footer_invoice_memo": Can be set to true/false to toggle displaying this section.
            - "footer_invoice_payable": Can be set to true/false to toggle displaying this section.
            - "footer_justification": Can be set to "center", "left", or "right" to control the justification of this section.
            - "footer_page_numbers": Can be set to true/false to toggle displaying this section.
            - "header_invoice_issued_date": Can be set to true/false to toggle displaying this section.
            - "header_invoice_number": Can be set to true/false to toggle displaying this section.
            - "header_on_first_page": Can be set to true/false to toggle displaying this section.
            - "interest_date": Can be set to true/false to toggle displaying this section.
            - "interest_date_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "interest_date_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "interest_description": Can be set to true/false to toggle displaying this section.
            - "interest_details_description": Can be set to true/false to toggle displaying this section.
            - "interest_details_description_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "interest_details_description_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "interest_details_description_new_line": Can be set to true/false to toggle displaying a interest descriptions on a new line.
            - "interest_headings_order": Should be set to an array that contains the values: ["interest_type"," interest_date", "interest_details_description", "interest_total"] in the order you would like the sections to display on your bills.
            - "interest_total": Can be set to true/false to toggle displaying this section.
            - "interest_total_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "interest_total_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "interest_totals_subtotal": Can be set to true/false to toggle displaying this section.
            - "interest_type": Can be set to true/false to toggle displaying this section.
            - "interest_type_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "interest_type_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "invoice_information_due_date": Can be set to true/false to toggle displaying this section.
            - "invoice_information_invoice_number": Can be set to true/false to toggle displaying this section.
            - "invoice_information_issue_date": Can be set to true/false to toggle displaying this section.
            - "invoice_title": Can be set to true/false to toggle displaying this section.
            - "logo": Can be set to true/false to toggle displaying this section.
            - "logo_justification": Can be set to "center", "left", or "right" to control the justification of this section.
            - "matter_attorney_display": Can be set to "name" or "initials" to control the content shown in this section.
            - "matter_attorney_initials": Can be set to true/false to toggle displaying this section.
            - "matter_attorney_initials_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_attorney_initials_expenses": Can be set to true/false to toggle displaying this section.
            - "matter_attorney_initials_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_attorney_initials_products": Can be set to true/false to toggle displaying this section.
            - "matter_attorney_summary_position_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_attorney_summary_time_keeper_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_client_ref": Can be set to true/false to toggle displaying this section.
            - "matter_date": Can be set to true/false to toggle displaying this section.
            - "matter_date_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_date_expenses": Can be set to true/false to toggle displaying this section.
            - "matter_date_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_date_products": Can be set to true/false to toggle displaying this section.
            - "matter_date_trust": Can be set to true/false to toggle displaying this section.
            - "matter_description": Can be set to true/false to toggle displaying this section.
            - "matter_details_description": Can be set to true/false to toggle displaying this section.
            - "matter_details_description_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_details_description_expenses": Can be set to true/false to toggle displaying this section.
            - "matter_details_description_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_details_description_new_line": Can be set to true/false to toggle displaying a matter descriptions on a new line.
            - "matter_details_description_products": Can be set to true/false to toggle displaying this section.
            - "matter_details_description_trust": Can be set to true/false to toggle displaying this section.
            - "matter_heading_justification": Can be set to "center", "left", or "right" to control the justification of this section.
            - "matter_headings_order": Should be set to an array that contains the values: ["matter_type", "matter_attorney_initials", "matter_date", "matter_details_description", "matter_quantity", "matter_rate", "matter_line_item_discount", "matter_total", "matter_total_with_tax", "matter_tax"]
            in the order you would like the sections to display on your bills.
            - "matter_headings_order_expenses": Should be set to an array that contains the values: ["matter_type", "matter_attorney_initials", "matter_date", "matter_details_description", "matter_quantity", "matter_rate", "matter_line_item_discount", "matter_total", "matter_total_with_tax", "matter_tax"]
            in the order you would like the sections to display on your bills.
            - "matter_headings_order_products": Should be set to an array that contains the values: ["matter_type", "matter_attorney_initials", "matter_date", "matter_details_description", "matter_quantity", "matter_rate", "matter_line_item_discount", "matter_total", "matter_total_with_tax", "matter_tax"]
            in the order you would like the sections to display on your bills.
            - "matter_headings_order_trust": Should be set to an array that contains the values: ["matter_date", "matter_details_description", "matter_total"] in the order you would like the sections to display on your bills.
            - "matter_individual_payments": Can be set to true/false to toggle displaying this section.
            - "matter_line_item_discount": Can be set to true/false to toggle displaying this section.
            - "matter_line_item_discount_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_line_item_discount_expenses": Can be set to true/false to toggle displaying this section.
            - "matter_line_item_discount_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_line_item_discount_products": Can be set to true/false to toggle displaying this section.
            - "matter_line_item_discount_text_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_line_items_activity_descriptions": Can be set to true/false to toggle displaying this section.
            - "matter_number": Can be set to true/false to toggle displaying this section.
            - "matter_quantity": Can be set to true/false to toggle displaying this section.
            - "matter_quantity_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_quantity_expenses": Can be set to true/false to toggle displaying this section.
            - "matter_quantity_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_quantity_products": Can be set to true/false to toggle displaying this section.
            - "matter_quantity_text_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_rate": Can be set to true/false to toggle displaying this section.
            - "matter_rate_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_rate_expenses": Can be set to true/false to toggle displaying this section.
            - "matter_rate_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_rate_products": Can be set to true/false to toggle displaying this section.
            - "matter_rate_text_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_separate_line_items": Can be set to true/false to toggle displaying this section.
            - "matter_show_amount_with_percentage": Can be set to true/false to toggle displaying this section.
            - "matter_tax_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_tax_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_total": Can be set to true/false to toggle displaying this section.
            - "matter_total_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_total_expenses": Can be set to true/false to toggle displaying this section.
            - "matter_total_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_total_products": Can be set to true/false to toggle displaying this section.
            - "matter_total_text_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_total_trust": Can be set to true/false to toggle displaying this section.
            - "matter_total_with_tax_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_total_with_tax_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_totals_subtotal": Can be set to true/false to toggle displaying this section.
            - "matter_totals_subtotal_line_item_discount": Can be set to true/false to toggle displaying this section.
            - "matter_type": Can be set to true/false to toggle displaying this section.
            - "matter_type_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_type_expenses": Can be set to true/false to toggle displaying this section.
            - "matter_type_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "matter_type_products": Can be set to true/false to toggle displaying this section.
            - "payment_profile_discount": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have an early payment discount.
            - "payment_profile_grace_period": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have a grace period.
            - "payment_profile_interest": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have a recurring interest charge.
            - "payment_profile_no_grace_period": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill has a grace period.
            - "show_clio_payments": Can be set to true/false to toggle displaying this section.
            - "soa_title": Can be set to true/false to toggle displaying this section.
            - "statement_of_accounts": Can be set to true/false to toggle displaying this section.
            - "statement_of_accounts_amount_due_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "statement_of_accounts_amount_due_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "statement_of_accounts_balance_due_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "statement_of_accounts_balance_due_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "statement_of_accounts_details": Can be set to true/false to toggle displaying this section.
            - "statement_of_accounts_due_on_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "statement_of_accounts_due_on_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "statement_of_accounts_include_trust": Can be set to true/false to toggle displaying this section.
            - "statement_of_accounts_invoice_number_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "statement_of_accounts_invoice_number_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "statement_of_accounts_note": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if "statement_of_accounts_summary" is "hidden".
            - "statement_of_accounts_payments_received_body_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "statement_of_accounts_payments_received_header_alignment": Can be set to "center", "left", or "right" to control the alignment of this section.
            - "statement_of_accounts_summary": Can be set to "hidden", "above", or "below" to control the location of this section. This will determine if the statements of account section on the bill is displayed, and if it displays above or below the line items.
            - "statement_of_accounts_summary_detail": Can be set to "simple", "with_payment", or "with_account_balance" to control the values shown in this section.
            - "statement_of_accounts_summary_only_bill_matters": Can be set to true/false to control the values shown in this section.
            - "void_watermark": Can be set to true/false to toggle displaying a void watermark. Will only affect bills that have been void.


            Available settings under "text", each of these can be set to the text you would like to display when they are shown, some of these fields allow substituting values with codes wrapped in curly braces:
            - "address_email"
            - "address_fax"
            - "address_phone"
            - "vat_number_au"
            - "vat_number_eu"
            - "attorney_summary_position"
            - "attorney_summary_time_keeper"
            - "client_account_account"
            - "client_account_balance"
            - "client_account_payments"
            - "client_account_receipts"
            - "client_account_total_balance"
            - "clio_payments_amount"
            - "clio_payments_date"
            - "clio_payments_note"
            - "clio_payments_reference"
            - "clio_payments_status"
            - "clio_payments_title"
            - "clio_payments_total"
            - "discount_early_payment_balance_owing_text"
            - "discount_early_payment_end_date_text"
            - "discount_early_payment_text"
            - "discount_early_payment_total_text"
            - "footer_invoice_memo"
              - {{billing_setting_memo}}" can be used to reference your billing settings memo.
              - {{bill_memo}} can be used to reference your bills memo.
            - "footer_invoice_payable"
              - {{firm_name}} can be used to reference your firms name.
            - "footer_page"
            - "footer_page_of"
            - "grand_total_text"
              - {{same_as_total_heading}} can be used to reference the value in "text" => "matter_total_text"
            - "interest_date_text"
            - "interest_details_description_text"
            - "interest_subtotal_text"
            - "interest_text"
            - "interest_title_text"
            - "interest_total_text"
            - "interest_type_text"
            - "invoice_client_sales_tax_text"
            - "invoice_due_date_text"
            - "invoice_information_due_date_receipt_text"
            - "invoice_issued_date_text"
            - "invoice_lc"
            - "invoice_number_text"
            - "invoice_purchase_order_text"
            - "invoice_title"
            - "matter_attorney_initials_text"
            - "matter_balance_owing_text"
            - "matter_client_ref"
              - {{client_ref_num}}" can be used to reference the matters client reference.
            - "matter_credit_note_text"
            - "matter_date_text"
            - "matter_details_description_text"
            - "matter_discount_text"
            - "matter_expense_subtotal_text"
            - "matter_expense_text"
            - "matter_expense_title_text"
            - "matter_grand_total_text"
              - {{same_as_total_heading}} can be used to reference the value in "text" => "matter_total_text"
            - "matter_line_item_discount_expenses_text"
            - "matter_line_item_discount_products_text"client_address_custom"
            - "matter_line_item_discount_subtotal_text"
            - "matter_line_item_discount_text"
            - "matter_non_billable_expenses_title_text"
            - "matter_non_billable_grouped_title_text"
            - "matter_non_billable_products_title_text"
            - "matter_non_billable_services_title_text"
            - "matter_payment_text"
            - "matter_product_subtotal_text"
            - "matter_product_text"
            - "matter_product_title_text"
            - "matter_quantity_expenses_text"
            - "matter_quantity_products_text"
            - "matter_quantity_subtotal_text"
            - "matter_quantity_text"
            - "matter_quantity_total_text"
            - "matter_rate_expenses_text"
            - "matter_rate_products_text"
            - "matter_rate_text"
            - "matter_refund_text"
            - "matter_service_subtotal_text"
            - "matter_service_text"
            - "matter_service_title_text"
            - "matter_subtotal_text"
            - "matter_tax_text"
            - "matter_title"
            - "matter_total_text"
            - "matter_total_with_tax_text"
            - "matter_trust_line_items_title_text"
            - "matter_trust_text"
            - "matter_type_text"
            - "payment_profile"
            - "payment_profile_discount"
              - {{discount_rate}} can be used to reference the bills discount rate.
              - {{interest_rate}} can be used to reference the bills interest rate.
              - {{interest_type}} can be used to reference the bills interest type.
              - {{grace_period}} can be used to reference the grace period for the bill.
              - {{discount_period}} can be used to reference the discount period for the bill.
              - {{interest_period}} can be used to reference the interest period for the bill.
            - "payment_profile_grace_period"
              - {{discount_rate}} can be used to reference the bills discount rate.
              - {{interest_rate}} can be used to reference the bills interest rate.
              - {{interest_type}} can be used to reference the bills interest type.
              - {{grace_period}} can be used to reference the grace period for the bill.
              - {{discount_period}} can be used to reference the discount period for the bill.
              - {{interest_period}} can be used to reference the interest period for the bill.
            - "payment_profile_interest"
              - {{discount_rate}} can be used to reference the bills discount rate.
              - {{interest_rate}} can be used to reference the bills interest rate.
              - {{interest_type}} can be used to reference the bills interest type.
              - {{grace_period}} can be used to reference the grace period for the bill.
              - {{discount_period}} can be used to reference the discount period for the bill.
              - {{interest_period}} can be used to reference the interest period for the bill.
            - "payment_profile_no_grace_period"
              - {{discount_rate}} can be used to reference the bills discount rate.
              - {{interest_rate}} can be used to reference the bills interest rate.
              - {{interest_type}} can be used to reference the bills interest type.
              - {{grace_period}} can be used to reference the grace period for the bill.
              - {{discount_period}} can be used to reference the discount period for the bill.
              - {{interest_period}} can be used to reference the interest period for the bill.
            - "remittance_checks"
            - "remittance_checks_label"
            - "remittance_checks_title"
            - "remittance_note"
              - {{bill_number}} can be used to reference the bills number.
            - "remittance_note_soa"
            - "remittance_title"
            - "remittance_wire_bank_account"
            - "remittance_wire_bank_account_label"
            - "remittance_wire_bank_name"
            - "remittance_wire_bank_name_label"
            - "remittance_wire_bank_routing"
            - "remittance_wire_bank_routing_label"
            - "remittance_wire_bank_swift"
            - "remittance_wire_bank_swift_label"
            - "remittance_wire_title"
            - "soa_title"
            - "statement_of_accounts_amount"
            - "statement_of_accounts_amount_in_trust"
            - "statement_of_accounts_amount_on_account"
            - "statement_of_accounts_balance"
            - "statement_of_accounts_current_invoice"
            - "statement_of_accounts_details_title"
            - "statement_of_accounts_due_on"
            - "statement_of_accounts_invoice_number"
            - "statement_of_accounts_new_charges"
            - "statement_of_accounts_note"
              - {{firm_name}} can be used to reference your firms name.
            - "statement_of_accounts_original_invoice_number"
            - "statement_of_accounts_other_interest_invoices"
            - "statement_of_accounts_other_invoices"
            - "statement_of_accounts_outstanding_balance"
            - "statement_of_accounts_detailed_outstanding_balance"
            - "statement_of_accounts_payments"
            - "statement_of_accounts_summary_title"
            - "statement_of_accounts_total_balance"
            - "statement_of_accounts_total_credit"
            - "statement_of_accounts_total_outstanding_balance"
            - "statement_of_accounts_detailed_total_outstanding_balance"
            - "trust_request_adjustments_title_text"
            - "trust_request_lc"
            - "trust_request_number_text"
            - "trust_request_title"
            - "trust_request_total_text"


            Available settings under "css", each of these has nested values that can be set to apply CSS rules to bills:
            - "client"
              - "color": Color used in the client section. Value is in 'Hex'.
              - "font-family": Font used in client section.
              - "font-size": Font size in client section. Value is in 'em'.
            - "client_address"
              - "margin-bottom": Bottom margin size for the client address. Value is in 'em'.
            - "firm_title"
              - "margin-bottom": Bottom margin height for the bills firm title. Value is in 'em'.
              - "color": Color for the bills firm title section. Value is in 'Hex'.
              - "font-family": Font used for text in the firm title.
              - "font-size": Font size for the bills firm title. Value is in 'em'.
              - "border-color": Border color property for the firm title on a bill. Value is in 'Hex'.
              - "border-style": Border style property for the firm title on a bill. Accepts standard CSS options for 'border-style' property.
              - "border-width": Border width property for table rows on a bill. Accepts standard CSS options for 'border-width' property.
              - "background-color": Background color for the firm title on a bill. Value is in 'Hex'.
            - "header"
              - "margin-bottom": Bottom margin size for the bill header. Value is in 'em'.
            - "inside_margins"
              - "font-family": Primary font used on the bill.
              - "font-size": Primary font size used for bill.
              - "color": Primary font used on the bill, default is "Arial".
            - "invoice_title"
              - "color": Color used in the invoice title section. Value is in 'Hex'.
              - "font-family": Font used in invoice title section.
              - "font-size": Font size in invoice title section. Value is in 'em'.
            - "logo_img"
              - "height": Height for the bills logo image. Value is in 'em'.
              - "margin-top": Top margin height for the bills logo image. Value is in 'em'.
              - "margin-bottom": Bottom margin height for the bills logo image. Value is in 'em'.
            - "matter_description"
              - "margin-top": Top margin size for matter description section. Value is in 'em'.
              - "color": Color used in the matter description section. Value is in 'Hex'.
              - "font-family": Font used in matter description section.
              - "font-size": Font size in matter description section. Value is in 'em'.
            - "matter_number"
              - "color": Color used in the matter number section. Value is in 'Hex'.
              - "font-family": Font used in matter number section.
              - "font-size": Font size in matter number section. Value is in 'em'.
            - "page_margins"
              - "margin-left": Left margin size for the bill. Value is in 'em'.
              - "margin-right": Right margin size for the bill. Value is in 'em'.
              - "margin-top": Top margin size for the bill. Value is in 'em'.
              - "margin-bottom": Bottom margin size for the bill. Value is in 'em'.
              - "size": Size property for the bill, default is "US-Letter".
            - "remittance_title"
              - "color": Color used in the remittance title section. Value is in 'Hex'.
              - "font-family": Font used in remittance title section.
              - "font-size": Font size in remittance title section. Value is in 'em'.
              - "background-color": Background color for the remittance title section on a bill. Value is in 'Hex'.
              - "border-color": Border color property for the remittance title section on a bill. Value is in 'Hex'.
              - "border-style": Border style property for the remittance title section on a bill. Accepts standard CSS options for 'border-style' property.
              - "border-width": Border width property for the remittance title section on a bill. Accepts standard CSS options for 'border-width' property.
            - "statement_of_accounts_title"
              - "color": Color used in the statement of accounts section. Value is in 'Hex'.
              - "font-family": Font used in statement of accounts section.
              - "font-size": Font size in statement of accounts section. Value is in 'em'.
              - "background-color": Background color for the statement of accounts section on a bill. Value is in 'Hex'.
              - "border-color": Border color property for the statement of accounts section on a bill. Value is in 'Hex'.
              - "border-style": Border style property for the statement of accounts section on a bill. Accepts standard CSS options for 'border-style' property.
              - "border-width": Border width property for the statement of accounts section on a bill. Accepts standard CSS options for 'border-width' property.
            - "table_even_line"
              - "background-color": Background color for even table rows. Value is in 'Hex'.
            - "table_h4"
              - "background-color": Background color for table headers. Value is in 'Hex'.
            - "table_line"
              - "border-bottom-width": Bottom border width for table rows. Value is in 'px'.
              - "border-bottom-style": Bottom border style property for table rows on a bill. Accepts standard CSS options for 'border-style' property.
              - "border-bottom-color": Bottom border color property for table rows on a bill. Value is in 'Hex'.
            - "table_odd_line"
              - "background-color": Background color for odd table rows. Value is in 'Hex'.


            A config with samples of each type of option is shown below:
            ```
              config = {
                "show": {
                    "statement_of_accounts_summary": "left"
                    "statement_of_accounts_note": true,
                    "footer_invoice_payable": true,
                    "footer_invoice_memo": true,
                    "payment_profile_no_grace_period": true,
                    "payment_profile_grace_period": true,
                    "payment_profile_discount": true,
                    "payment_profile_interest": true,
                    "interest_headings_order": ["interest_type"," interest_date", "interest_details_description", "interest_total"]
                  },
                "text": {
                    "statement_of_accounts_note": "Please make all amounts payable to: {{firm_name}}",
                    "footer_invoice_payable": "Please make all amounts payable to: {{firm_name}}",
                    "footer_invoice_memo": "{{bill_memo}}",
                    "payment_profile_no_grace_period": "Payment is due upon receipt.",
                    "payment_profile_grace_period": "Please pay within {{grace_period}}.",
                    "payment_profile_discount": "{{discount_rate}}% discount will be applied if payment is received within {{discount_period}}.",
                    "payment_profile_interest": "{{interest_rate}}% {{interest_type}} annual interest will be charged every {{interest_period}}.",
                  },
                "css": {
                  "statement_of_accounts_title": {
                    "color": "#00cc00",
                    "font-family": "Times New Roman",
                    "font-size": "0.875em",
                    "background-color": "#ccff99",
                    "border-color": "#0033ff",
                    "border-style": "dotted",
                    "border-width": "thick"
                  },
                  "remittance_title": {
                    "color": "#00ff00",
                    "background-color": "None",
                    "border-color": "#0033cc",
                    "border-width": "medium",
                    "border-style": "dotted",
                    "font-family": "Arial",
                    "font-size": "1.5em"
                  }
                }
              }
            ```
          title: config
          type: string
        name:
          description: Name of the BillTheme.
          title: name
          type: string
      title: BillTheme_update_request_data
      type: object
    BillTheme_update_request:
      properties:
        data:
          $ref: '#/components/schemas/BillTheme_update_request_data'
      required:
      - data
      title: BillTheme_update_request
      type: object
    Bill_update_request_data_bill_theme:
      properties:
        id:
          description: The unique identifier of the bill theme applied to the Bill.
          format: int64
          title: id
          type: integer
      title: Bill_update_request_data_bill_theme
      type: object
    Bill_update_request_data_discount:
      properties:
        rate:
          description: "Discount amount for the Bill. This can either be a percentage\
            \ or monetary value, this is determined by the `discount[type]`."
          format: double
          title: rate
          type: number
        type:
          description: "The type of discount you are applying to your Bill with the\
            \ `discount[rate]`."
          enum:
          - percentage
          - money
          title: type
          type: string
        note:
          description: A note for your Bill's discount.
          title: note
          type: string
      title: Bill_update_request_data_discount
      type: object
    Bill_update_request_data_interest:
      properties:
        rate:
          description: Interest amount for the Bill as percentage.
          format: double
          title: rate
          type: number
        type:
          description: "The type of interest you are applying to your Bill with the\
            \ `interest[rate]`."
          enum:
          - simple
          - compound
          title: type
          type: string
        period:
          description: The interest period for how frequently your Bill will charge
            interest.
          format: int32
          title: period
          type: integer
      title: Bill_update_request_data_interest
      type: object
    Bill_update_request_data:
      properties:
        bill_theme:
          $ref: '#/components/schemas/Bill_update_request_data_bill_theme'
        currency_id:
          description: ID of the currency applied to the Bill.
          format: int64
          title: currency_id
          type: integer
        discount:
          $ref: '#/components/schemas/Bill_update_request_data_discount'
        due_at:
          description: "Date the Bill is due. If `use_grace_period` is true, this\
            \ field is ignored."
          format: date
          title: due_at
          type: string
        interest:
          $ref: '#/components/schemas/Bill_update_request_data_interest'
        issued_at:
          description: Date the Bill was issued.
          format: date
          title: issued_at
          type: string
        memo:
          description: Memo for the Bill.
          title: memo
          type: string
        number:
          description: Bill's number.
          title: number
          type: string
        purchase_order:
          description: Purchase order information for the Bill.
          title: purchase_order
          type: string
        secondary_tax_rate:
          description: Secondary tax rate as percentage for the Bill.
          format: double
          title: secondary_tax_rate
          type: number
        state:
          description: Bill's state.
          enum:
          - draft
          - awaiting_approval
          - awaiting_payment
          - paid
          - void
          - deleted
          title: state
          type: string
        subject:
          description: Subject details for the Bill.
          title: subject
          type: string
        tax_rate:
          description: Tax rate as percentage for the Bill
          format: double
          title: tax_rate
          type: number
        use_grace_period:
          description: "When true, sets the bill's due date based on the client's\
            \ grace period. This setting overrides the `due_at` parameter."
          title: use_grace_period
          type: boolean
      title: Bill_update_request_data
      type: object
    Bill_update_request:
      properties:
        data:
          $ref: '#/components/schemas/Bill_update_request_data'
      required:
      - data
      title: Bill_update_request
      type: object
    CalendarEntry_create_request_data_attendees_inner:
      properties:
        id:
          description: "The unique identifier for a single Attendee associated with\
            \ the CalendarEntry. The keyword `null` is not valid for this field. Not\
            \ required for creating new Attendee, but required for updating or deleting\
            \ existing ones."
          format: int64
          title: id
          type: integer
        type:
          description: "The type of attendee (Calendar, Contact)"
          title: type
          type: string
        _destroy:
          description: Flag to delete a specific attendee.
          title: _destroy
          type: boolean
      title: CalendarEntry_create_request_data_attendees_inner
      type: object
    CalendarEntry_create_request_data_calendar_entry_event_type:
      properties:
        id:
          description: The unique identifier for a single CalendarEntryEventType associated
            with the CalendarEntry. Use the keyword `null` to specify no association.
          format: int64
          title: id
          type: integer
      title: CalendarEntry_create_request_data_calendar_entry_event_type
      type: object
    CalendarEntry_create_request_data_calendar_owner:
      properties:
        id:
          description: The unique identifier for a single Calendar associated with
            the CalendarEntry. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: CalendarEntry_create_request_data_calendar_owner
      type: object
    CalendarEntry_create_request_data_conference_meeting:
      properties:
        type:
          description: "The type of conference meeting. If no conference meeting is\
            \ present or the user is in an ineligible pricing tier for this feature,\
            \ it will be null."
          enum:
          - zoom
          title: type
          type: string
      title: CalendarEntry_create_request_data_conference_meeting
      type: object
    CalendarEntry_create_request_data_external_properties_inner:
      properties:
        name:
          description: "The ExternalProperty name. Note: **there is a limit of 5 external_properties\
            \ per CalendarEntry**"
          title: name
          type: string
        value:
          description: The ExternalProperty value.
          title: value
          type: string
      title: CalendarEntry_create_request_data_external_properties_inner
      type: object
    CalendarEntry_create_request_data_matter:
      properties:
        id:
          description: The unique identifier for a single Matter associated with the
            CalendarEntry. Use the keyword `null` to specify no association.
          format: int64
          title: id
          type: integer
      title: CalendarEntry_create_request_data_matter
      type: object
    CalendarEntry_create_request_data:
      properties:
        _deleted:
          description: Flag to delete a specific instance of a recurring event.
          enum:
          - single
          - future
          title: _deleted
          type: string
        all_day:
          description: Whether or not the CalendarEntry is for all day.
          title: all_day
          type: boolean
        attendees:
          items:
            $ref: '#/components/schemas/CalendarEntry_create_request_data_attendees_inner'
          title: attendees
          type: array
        calendar_entry_event_type:
          $ref: '#/components/schemas/CalendarEntry_create_request_data_calendar_entry_event_type'
        calendar_owner:
          $ref: '#/components/schemas/CalendarEntry_create_request_data_calendar_owner'
        conference_meeting:
          $ref: '#/components/schemas/CalendarEntry_create_request_data_conference_meeting'
        description:
          description: A detailed description of the CalendarEntry.
          title: description
          type: string
        end_at:
          description: The time the CalendarEntry ends (Expects an ISO-8601 timestamp).
          format: date-time
          title: end_at
          type: string
        external_properties:
          items:
            $ref: '#/components/schemas/CalendarEntry_create_request_data_external_properties_inner'
          title: external_properties
          type: array
        location:
          description: The geographic location of the CalendarEntry.
          title: location
          type: string
        matter:
          $ref: '#/components/schemas/CalendarEntry_create_request_data_matter'
        recurrence_rule:
          description: "Recurrence rule for expanding recurring CalendarEntry. To\
            \ convert an existing recurring event to a non-recurring event, `''` or\
            \ `null` are valid values."
          title: recurrence_rule
          type: string
        send_email_notification:
          description: Whether the calendar Entry should send email notifications
            to attendees
          title: send_email_notification
          type: boolean
        start_at:
          description: The time the CalendarEntry starts (Expects an ISO-8601 timestamp).
          format: date-time
          title: start_at
          type: string
        summary:
          description: A short summary of the CalendarEntry.
          title: summary
          type: string
      required:
      - calendar_owner
      - end_at
      - start_at
      - summary
      title: CalendarEntry_create_request_data
      type: object
    CalendarEntry_create_request:
      properties:
        data:
          $ref: '#/components/schemas/CalendarEntry_create_request_data'
      required:
      - data
      title: CalendarEntry_create_request
      type: object
    CalendarEntry_update_request_data_calendar_owner:
      properties:
        id:
          description: The unique identifier for a single Calendar associated with
            the CalendarEntry. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: CalendarEntry_update_request_data_calendar_owner
      type: object
    CalendarEntry_update_request_data_external_properties_inner:
      properties:
        id:
          description: The unique identifier for a single ExternalProperty associated
            with the CalendarEntry. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        name:
          description: "The ExternalProperty name. Note: **there is a limit of 5 external_properties\
            \ per CalendarEntry**"
          title: name
          type: string
        value:
          description: The ExternalProperty value.
          title: value
          type: string
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated ExternalProperty is present, the ExternalProperty\
            \ is deleted from the CalendarEntry."
          title: _destroy
          type: boolean
      title: CalendarEntry_update_request_data_external_properties_inner
      type: object
    CalendarEntry_update_request_data:
      properties:
        _deleted:
          description: Flag to delete a specific instance of a recurring event.
          enum:
          - single
          - future
          title: _deleted
          type: string
        all_day:
          description: Whether or not the CalendarEntry is for all day.
          title: all_day
          type: boolean
        attendees:
          items:
            $ref: '#/components/schemas/CalendarEntry_create_request_data_attendees_inner'
          title: attendees
          type: array
        calendar_entry_event_type:
          $ref: '#/components/schemas/CalendarEntry_create_request_data_calendar_entry_event_type'
        calendar_owner:
          $ref: '#/components/schemas/CalendarEntry_update_request_data_calendar_owner'
        conference_meeting:
          $ref: '#/components/schemas/CalendarEntry_create_request_data_conference_meeting'
        description:
          description: A detailed description of the CalendarEntry.
          title: description
          type: string
        end_at:
          description: The time the CalendarEntry ends (Expects an ISO-8601 timestamp).
          format: date-time
          title: end_at
          type: string
        external_properties:
          items:
            $ref: '#/components/schemas/CalendarEntry_update_request_data_external_properties_inner'
          title: external_properties
          type: array
        location:
          description: The geographic location of the CalendarEntry.
          title: location
          type: string
        matter:
          $ref: '#/components/schemas/CalendarEntry_create_request_data_matter'
        recurrence_rule:
          description: "Recurrence rule for expanding recurring CalendarEntry. To\
            \ convert an existing recurring event to a non-recurring event, `''` or\
            \ `null` are valid values."
          title: recurrence_rule
          type: string
        send_email_notification:
          description: Whether the calendar Entry should send email notifications
            to attendees
          title: send_email_notification
          type: boolean
        start_at:
          description: The time the CalendarEntry starts (Expects an ISO-8601 timestamp).
          format: date-time
          title: start_at
          type: string
        summary:
          description: A short summary of the CalendarEntry.
          title: summary
          type: string
      title: CalendarEntry_update_request_data
      type: object
    CalendarEntry_update_request:
      properties:
        data:
          $ref: '#/components/schemas/CalendarEntry_update_request_data'
      required:
      - data
      title: CalendarEntry_update_request
      type: object
    CalendarEntryEventType_create_request_data:
      properties:
        color:
          description: The color assigned to the CalendarEntryEventType
          enum:
          - '#367B9C'
          - '#FFA5A4'
          - '#83D17F'
          - '#FFAC7B'
          - '#8E3F64'
          - '#C75300'
          - '#009CEC'
          - '#62D6B1'
          - '#9EEDCB'
          - '#F9A2C4'
          - '#616161'
          - '#BBDA81'
          - '#DFD3F8'
          - '#D6C4A5'
          - '#FFD478'
          - '#6AC9DE'
          - '#EABBB0'
          - '#BFC2E1'
          - '#DADADA'
          - '#CDE2F5'
          title: color
          type: string
        name:
          description: The name of the CalendarEntryEventType
          title: name
          type: string
      required:
      - color
      - name
      title: CalendarEntryEventType_create_request_data
      type: object
    CalendarEntryEventType_create_request:
      properties:
        data:
          $ref: '#/components/schemas/CalendarEntryEventType_create_request_data'
      required:
      - data
      title: CalendarEntryEventType_create_request
      type: object
    CalendarEntryEventType_update_request_data:
      properties:
        color:
          description: The color assigned to the CalendarEntryEventType
          enum:
          - '#367B9C'
          - '#FFA5A4'
          - '#83D17F'
          - '#FFAC7B'
          - '#8E3F64'
          - '#C75300'
          - '#009CEC'
          - '#62D6B1'
          - '#9EEDCB'
          - '#F9A2C4'
          - '#616161'
          - '#BBDA81'
          - '#DFD3F8'
          - '#D6C4A5'
          - '#FFD478'
          - '#6AC9DE'
          - '#EABBB0'
          - '#BFC2E1'
          - '#DADADA'
          - '#CDE2F5'
          title: color
          type: string
        name:
          description: The name of the CalendarEntryEventType
          title: name
          type: string
      title: CalendarEntryEventType_update_request_data
      type: object
    CalendarEntryEventType_update_request:
      properties:
        data:
          $ref: '#/components/schemas/CalendarEntryEventType_update_request_data'
      required:
      - data
      title: CalendarEntryEventType_update_request
      type: object
    Calendar_create_request_data:
      properties:
        color:
          description: Calendar color as seen in the Clio Web UI.
          enum:
          - '#367B9C'
          - '#FFA5A4'
          - '#83D17F'
          - '#FFAC7B'
          - '#8E3F64'
          - '#C75300'
          - '#009CEC'
          - '#62D6B1'
          - '#9EEDCB'
          - '#F9A2C4'
          - '#616161'
          - '#BBDA81'
          - '#DFD3F8'
          - '#D6C4A5'
          - '#FFD478'
          - '#6AC9DE'
          - '#EABBB0'
          - '#BFC2E1'
          - '#DADADA'
          - '#CDE2F5'
          title: color
          type: string
        name:
          description: Calendar name.
          title: name
          type: string
        source:
          description: "The source that visible applies to, by default the Clio Web\
            \ UI (Expects 'mobile' or 'web')."
          enum:
          - web
          - mobile
          title: source
          type: string
        visible:
          description: Whether or not the Calendar should be visible by default in
            the Clio Web UI (assuming no source is provided).
          title: visible
          type: boolean
      required:
      - name
      title: Calendar_create_request_data
      type: object
    Calendar_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Calendar_create_request_data'
      required:
      - data
      title: Calendar_create_request
      type: object
    Calendar_update_request_data:
      properties:
        color:
          description: Calendar color as seen in the Clio Web UI.
          enum:
          - '#367B9C'
          - '#FFA5A4'
          - '#83D17F'
          - '#FFAC7B'
          - '#8E3F64'
          - '#C75300'
          - '#009CEC'
          - '#62D6B1'
          - '#9EEDCB'
          - '#F9A2C4'
          - '#616161'
          - '#BBDA81'
          - '#DFD3F8'
          - '#D6C4A5'
          - '#FFD478'
          - '#6AC9DE'
          - '#EABBB0'
          - '#BFC2E1'
          - '#DADADA'
          - '#CDE2F5'
          title: color
          type: string
        name:
          description: Calendar name.
          title: name
          type: string
        source:
          description: "The source that visible applies to, by default the Clio Web\
            \ UI (Expects 'mobile' or 'web')."
          enum:
          - web
          - mobile
          title: source
          type: string
        visible:
          description: Whether or not the Calendar should be visible by default in
            the Clio Web UI (assuming no source is provided).
          title: visible
          type: boolean
      title: Calendar_update_request_data
      type: object
    Calendar_update_request:
      properties:
        data:
          $ref: '#/components/schemas/Calendar_update_request_data'
      required:
      - data
      title: Calendar_update_request
      type: object
    ClioPaymentsLink_create_request_data_destination_account:
      properties:
        id:
          description: The ID of the bank account that the payment will be deposited
            into.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: ClioPaymentsLink_create_request_data_destination_account
      type: object
    ClioPaymentsLink_create_request_data_destination_contact:
      properties:
        id:
          description: "Only applicable for a direct payment. The contact that the\
            \ payment will be associated with. If not defined, and the payment is\
            \ collecting an unallocated balance, then the payment can be associated\
            \ with a contact manually within Manage after it has been made."
          format: int64
          title: id
          type: integer
      title: ClioPaymentsLink_create_request_data_destination_contact
      type: object
    ClioPaymentsLink_create_request_data_subject:
      properties:
        id:
          description: The ID of the record associated with the payment link.
          format: int64
          title: id
          type: integer
        type:
          description: |
            The type of the record associated with the payment link. The type of record determines the behavior of the payment link.

            Type of subject object:
            * 'BankAccount' results in a payment link for a direct payment.
            * 'Bill' results in a payment link for paying an existing invoice or trust request.
            * 'Contact' results in a payment link for paying the outstanding invoices of a contact.
          enum:
          - BankAccount
          - Bill
          - Contact
          title: type
          type: string
      required:
      - id
      - type
      title: ClioPaymentsLink_create_request_data_subject
      type: object
    ClioPaymentsLink_create_request_data:
      properties:
        amount:
          description: "The amount to be paid. If not provided, the client will be\
            \ able to specify an amount."
          format: double
          title: amount
          type: number
        currency:
          description: The currency the payment will be processed in. The supported
            currency depends on the account's location ('USD' for a US account). The
            currency must be a valid ISO 4217 currency code.
          title: currency
          type: string
        description:
          description: Only applicable for a direct payment. A short description of
            the purpose of the payment. Max 255 characters.
          title: description
          type: string
        destination_account:
          $ref: '#/components/schemas/ClioPaymentsLink_create_request_data_destination_account'
        destination_contact:
          $ref: '#/components/schemas/ClioPaymentsLink_create_request_data_destination_contact'
        duration:
          description: "The amount of time, in seconds, that the payment link will\
            \ be active for. The maximum allowed value is '7776000' (90 days in seconds)."
          format: int64
          title: duration
          type: integer
        email_address:
          description: Pre-fills the relevant field for the client when filling out
            their details in the payment link.
          title: email_address
          type: string
        is_allocated_as_revenue:
          description: "Only applicable for a direct payment. If true, the payment\
            \ will be allocated as revenue. If false, the payment will be collected\
            \ as an unallocated balance. Payments into trust can not be allocated\
            \ as revenue. Defaults to false."
          title: is_allocated_as_revenue
          type: boolean
        subject:
          $ref: '#/components/schemas/ClioPaymentsLink_create_request_data_subject'
      required:
      - currency
      - description
      - destination_account
      - duration
      - subject
      title: ClioPaymentsLink_create_request_data
      type: object
    ClioPaymentsLink_create_request:
      properties:
        data:
          $ref: '#/components/schemas/ClioPaymentsLink_create_request_data'
      required:
      - data
      title: ClioPaymentsLink_create_request
      type: object
    ClioPaymentsLink_update_request_data:
      properties:
        expired:
          description: Setting this will update the payment link to be immediately
            expired.
          title: expired
          type: boolean
      title: ClioPaymentsLink_update_request_data
      type: object
    ClioPaymentsLink_update_request:
      properties:
        data:
          $ref: '#/components/schemas/ClioPaymentsLink_update_request_data'
      required:
      - data
      title: ClioPaymentsLink_update_request
      type: object
    Communication_create_request_data_external_properties_inner:
      properties:
        name:
          description: "The ExternalProperty name. Note: **there is a limit of 5 external_properties\
            \ per Communication**"
          title: name
          type: string
        value:
          description: The ExternalProperty value.
          title: value
          type: string
      title: Communication_create_request_data_external_properties_inner
      type: object
    Communication_create_request_data_matter:
      properties:
        id:
          description: The unique identifier for a single Matter associated with the
            Communication. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Communication_create_request_data_matter
      type: object
    Communication_create_request_data_notification_event_subscribers_inner:
      properties:
        user_id:
          description: "The unique identifier for a User to be added as a notification\
            \ event subscriber to the Phone Log Communication. Note: Only applicable\
            \ to Phone Log Communications, invalid for other communication types."
          title: user_id
          type: string
      required:
      - user_id
      title: Communication_create_request_data_notification_event_subscribers_inner
      type: object
    Communication_create_request_data_receivers_inner:
      properties:
        _deleted:
          description: Whether or not the receivers should be deleted.
          title: _deleted
          type: boolean
        id:
          description: Unique ids for the receivers of this Communication.
          format: int64
          title: id
          type: integer
        type:
          description: Types of the receivers of this Communication.
          enum:
          - User
          - Contact
          title: type
          type: string
      title: Communication_create_request_data_receivers_inner
      type: object
    Communication_create_request_data_senders_inner:
      properties:
        _deleted:
          description: Whether or not the senders should be deleted.
          title: _deleted
          type: boolean
        id:
          description: Unique ids for the senders of this Communication.
          format: int64
          title: id
          type: integer
        type:
          description: Types of the senders of this Communication.
          enum:
          - User
          - Contact
          title: type
          type: string
      title: Communication_create_request_data_senders_inner
      type: object
    Communication_create_request_data:
      properties:
        body:
          description: The body value.
          title: body
          type: string
        date:
          description: The date for the Communication. (Expects an ISO-8601 date.)
          title: date
          type: string
        external_properties:
          items:
            $ref: '#/components/schemas/Communication_create_request_data_external_properties_inner'
          title: external_properties
          type: array
        matter:
          $ref: '#/components/schemas/Communication_create_request_data_matter'
        notification_event_subscribers:
          items:
            $ref: '#/components/schemas/Communication_create_request_data_notification_event_subscribers_inner'
          title: notification_event_subscribers
          type: array
        received_at:
          description: The date-time for the Communication. (Expects an ISO-8601 date-time.)
          title: received_at
          type: string
        receivers:
          items:
            $ref: '#/components/schemas/Communication_create_request_data_receivers_inner'
          title: receivers
          type: array
        senders:
          items:
            $ref: '#/components/schemas/Communication_create_request_data_senders_inner'
          title: senders
          type: array
        subject:
          description: The subject value.
          title: subject
          type: string
        type:
          description: Type of the Communication.
          enum:
          - PhoneCommunication
          - EmailCommunication
          title: type
          type: string
      required:
      - body
      - subject
      - type
      title: Communication_create_request_data
      type: object
    Communication_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Communication_create_request_data'
      required:
      - data
      title: Communication_create_request
      type: object
    Communication_update_request_data_external_properties_inner:
      properties:
        id:
          description: The unique identifier for a single ExternalProperty associated
            with the Communication. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        name:
          description: "The ExternalProperty name. Note: **there is a limit of 5 external_properties\
            \ per Communication**"
          title: name
          type: string
        value:
          description: The ExternalProperty value.
          title: value
          type: string
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated ExternalProperty is present, the ExternalProperty\
            \ is deleted from the Communication."
          title: _destroy
          type: boolean
      title: Communication_update_request_data_external_properties_inner
      type: object
    Communication_update_request_data_notification_event_subscribers_inner:
      properties:
        user_id:
          description: "The unique identifier for a User to be added as a notification\
            \ event subscriber to the Phone Log Communication. Note: Only applicable\
            \ to Phone Log Communications, invalid for other communication types."
          title: user_id
          type: string
        id:
          description: "Unique id of this Communication. Note: Only applicable to\
            \ Phone Log Communications, invalid for other communication types."
          format: int64
          title: id
          type: integer
        _destroy:
          description: "Whether or not the notification event subscriber should be\
            \ deleted. Note: Only applicable to Phone Log Communications, invalid\
            \ for other communication types."
          title: _destroy
          type: boolean
      title: Communication_update_request_data_notification_event_subscribers_inner
      type: object
    Communication_update_request_data:
      properties:
        body:
          description: The body value.
          title: body
          type: string
        date:
          description: The date for the Communication. (Expects an ISO-8601 date.)
          title: date
          type: string
        external_properties:
          items:
            $ref: '#/components/schemas/Communication_update_request_data_external_properties_inner'
          title: external_properties
          type: array
        matter:
          $ref: '#/components/schemas/Communication_create_request_data_matter'
        notification_event_subscribers:
          items:
            $ref: '#/components/schemas/Communication_update_request_data_notification_event_subscribers_inner'
          title: notification_event_subscribers
          type: array
        received_at:
          description: The date-time for the Communication. (Expects an ISO-8601 date-time.)
          title: received_at
          type: string
        receivers:
          items:
            $ref: '#/components/schemas/Communication_create_request_data_receivers_inner'
          title: receivers
          type: array
        senders:
          items:
            $ref: '#/components/schemas/Communication_create_request_data_senders_inner'
          title: senders
          type: array
        subject:
          description: The subject value.
          title: subject
          type: string
        type:
          description: Type of the Communication.
          enum:
          - PhoneCommunication
          - EmailCommunication
          title: type
          type: string
      title: Communication_update_request_data
      type: object
    Communication_update_request:
      properties:
        data:
          $ref: '#/components/schemas/Communication_update_request_data'
      required:
      - data
      title: Communication_update_request
      type: object
    Contact_create_request_data_addresses_inner:
      properties:
        name:
          default: Other
          description: Name of the Address.
          enum:
          - Work
          - Home
          - Billing
          - Other
          title: name
          type: string
        street:
          description: Street.
          title: street
          type: string
        city:
          description: City.
          title: city
          type: string
        province:
          description: Province or state.
          title: province
          type: string
        postal_code:
          description: Postal code or zip code.
          title: postal_code
          type: string
        country:
          description: Country
          title: country
          type: string
      title: Contact_create_request_data_addresses_inner
      type: object
    Contact_create_request_data_avatar:
      properties:
        image:
          description: "The avatar image for the *Contact*, base64-encoded. Must be\
            \ a valid GIF, JPG, or PNG image of less than 2 megabytes in size."
          title: image
          type: string
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated Avatar is present, the Avatar is deleted\
            \ from the Contact."
          title: _destroy
          type: boolean
      title: Contact_create_request_data_avatar
      type: object
    Contact_create_request_data_co_counsel_rate:
      properties:
        rate:
          description: |
            Billing rate if the Contact is a co-counsel.

            Note: this value can only be provided during PATCH requests. It cannot be provided at the time a Contact is created (i.e. POST requests).
          format: double
          title: rate
          type: number
      title: Contact_create_request_data_co_counsel_rate
      type: object
    Contact_create_request_data_company:
      properties:
        id:
          description: The unique identifier for a single Company associated with
            the Contact. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Contact_create_request_data_company
      type: object
    Contact_create_request_data_custom_field_set_associations_inner_custom_field_set:
      properties:
        id:
          description: The unique identifier for a single CustomFieldSet associated
            with the CustomFieldSetAssociation. The keyword `null` is not valid for
            this field.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: Contact_create_request_data_custom_field_set_associations_inner_custom_field_set
      type: object
    Contact_create_request_data_custom_field_set_associations_inner:
      properties:
        display_order:
          description: "The order to display the CustomFieldSet in a Contact. If not\
            \ specified, it is added as the last CustomFieldSet of the Contact."
          format: int32
          title: display_order
          type: integer
        custom_field_set:
          $ref: '#/components/schemas/Contact_create_request_data_custom_field_set_associations_inner_custom_field_set'
      required:
      - custom_field_set
      title: Contact_create_request_data_custom_field_set_associations_inner
      type: object
    Contact_create_request_data_custom_field_values_inner_custom_field:
      properties:
        id:
          description: The unique identifier for a single CustomField associated with
            the CustomFieldValue. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: Contact_create_request_data_custom_field_values_inner_custom_field
      type: object
    Contact_create_request_data_custom_field_values_inner:
      properties:
        value:
          description: The value of the CustomFieldValue.
          title: value
          type: string
        custom_field:
          $ref: '#/components/schemas/Contact_create_request_data_custom_field_values_inner_custom_field'
      required:
      - custom_field
      - value
      title: Contact_create_request_data_custom_field_values_inner
      type: object
    Contact_create_request_data_email_addresses_inner:
      properties:
        name:
          default: Other
          description: Name of the EmailAddress.
          enum:
          - Work
          - Home
          - Other
          title: name
          type: string
        address:
          description: Email address.
          title: address
          type: string
        default_email:
          description: Whether or not the Contact should be the default email for
            the Contact.
          title: default_email
          type: boolean
      title: Contact_create_request_data_email_addresses_inner
      type: object
    Contact_create_request_data_instant_messengers_inner:
      properties:
        name:
          default: Other
          description: Name of the InstantMessenger.
          enum:
          - Work
          - Personal
          - Other
          title: name
          type: string
        address:
          description: Address of the InstantMessenger.
          title: address
          type: string
      title: Contact_create_request_data_instant_messengers_inner
      type: object
    Contact_create_request_data_phone_numbers_inner:
      properties:
        name:
          default: Other
          description: Name of the PhoneNumber.
          enum:
          - Work
          - Home
          - Mobile
          - Fax
          - Pager
          - Skype
          - Other
          title: name
          type: string
        number:
          description: Phone number.
          title: number
          type: string
        default_number:
          description: Whether or not the PhoneNumber should be the default number
            for the Contact.
          title: default_number
          type: boolean
      title: Contact_create_request_data_phone_numbers_inner
      type: object
    Contact_create_request_data_web_sites_inner:
      properties:
        name:
          default: Other
          description: Name of the WebSite.
          enum:
          - Work
          - Personal
          - Twitter
          - Facebook
          - LinkedIn
          - Instant Messenger
          - Other
          title: name
          type: string
        address:
          description: URL of the WebSite.
          title: address
          type: string
        default_web_site:
          description: Whether or not the Contact should be the default website for
            the Contact.
          title: default_web_site
          type: boolean
      title: Contact_create_request_data_web_sites_inner
      type: object
    Contact_create_request_data:
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/Contact_create_request_data_addresses_inner'
          title: addresses
          type: array
        avatar:
          $ref: '#/components/schemas/Contact_create_request_data_avatar'
        clio_connect_email:
          description: Notifications will be sent to this email when a resource is
            shared.
          title: clio_connect_email
          type: string
        co_counsel_rate:
          $ref: '#/components/schemas/Contact_create_request_data_co_counsel_rate'
        company:
          $ref: '#/components/schemas/Contact_create_request_data_company'
        currency:
          description: The Currency the contact is associated with.
          title: currency
          type: object
        custom_field_set_associations:
          items:
            $ref: '#/components/schemas/Contact_create_request_data_custom_field_set_associations_inner'
          title: custom_field_set_associations
          type: array
        custom_field_values:
          items:
            $ref: '#/components/schemas/Contact_create_request_data_custom_field_values_inner'
          title: custom_field_values
          type: array
        date_of_birth:
          description: Date of birth of the Contact.
          format: date
          title: date_of_birth
          type: string
        email_addresses:
          items:
            $ref: '#/components/schemas/Contact_create_request_data_email_addresses_inner'
          title: email_addresses
          type: array
        first_name:
          description: First name of the Contact.
          title: first_name
          type: string
        instant_messengers:
          items:
            $ref: '#/components/schemas/Contact_create_request_data_instant_messengers_inner'
          title: instant_messengers
          type: array
        last_name:
          description: Last name of the Contact.
          title: last_name
          type: string
        ledes_client_id:
          description: LEDES client id of the Contact.
          title: ledes_client_id
          type: string
        middle_name:
          description: Middle name of the Contact.
          title: middle_name
          type: string
        name:
          description: "Full name of the Contact. For requirements, see [Contact Name](https://docs.developers.clio.com/api-reference/#section/Contact-Name)."
          title: name
          type: string
        phone_numbers:
          items:
            $ref: '#/components/schemas/Contact_create_request_data_phone_numbers_inner'
          title: phone_numbers
          type: array
        prefix:
          description: Personal title of the Contact.
          title: prefix
          type: string
        sales_tax_number:
          description: A contact's sales tax number will appear on invoices generated
            for the Contact.
          title: sales_tax_number
          type: string
        title:
          description: Professional title of the Contact.
          title: title
          type: string
        type:
          description: Type of the Contact.
          enum:
          - Person
          - Company
          title: type
          type: string
        web_sites:
          items:
            $ref: '#/components/schemas/Contact_create_request_data_web_sites_inner'
          title: web_sites
          type: array
      required:
      - name
      - type
      title: Contact_create_request_data
      type: object
    Contact_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Contact_create_request_data'
      required:
      - data
      title: Contact_create_request
      type: object
    Contact_update_request_data_addresses_inner:
      properties:
        name:
          default: Other
          description: Name of the Address.
          enum:
          - Work
          - Home
          - Billing
          - Other
          title: name
          type: string
        street:
          description: Street.
          title: street
          type: string
        city:
          description: City.
          title: city
          type: string
        province:
          description: Province or state.
          title: province
          type: string
        postal_code:
          description: Postal code or zip code.
          title: postal_code
          type: string
        country:
          description: Country
          title: country
          type: string
        id:
          description: The unique identifier for a single Address associated with
            the Contact. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated Address is present, the Address is deleted\
            \ from the Contact."
          title: _destroy
          type: boolean
      title: Contact_update_request_data_addresses_inner
      type: object
    Contact_update_request_data_custom_field_set_associations_inner_custom_field_set:
      properties:
        id:
          description: The unique identifier for a single CustomFieldSet associated
            with the CustomFieldSetAssociation. The keyword `null` is not valid for
            this field.
          format: int64
          title: id
          type: integer
      title: Contact_update_request_data_custom_field_set_associations_inner_custom_field_set
      type: object
    Contact_update_request_data_custom_field_set_associations_inner:
      properties:
        id:
          description: The unique identifier for a single CustomFieldSetAssociation
            associated with the Contact. The keyword `null` is not valid for this
            field.
          format: int64
          title: id
          type: integer
        display_order:
          description: "The order to display the CustomFieldSet in a Contact. If not\
            \ specified, it is added as the last CustomFieldSet of the Contact."
          format: int32
          title: display_order
          type: integer
        custom_field_set:
          $ref: '#/components/schemas/Contact_update_request_data_custom_field_set_associations_inner_custom_field_set'
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated CustomFieldSetAssociation is present, the\
            \ CustomFieldSetAssociation is deleted from the Contact."
          title: _destroy
          type: boolean
      title: Contact_update_request_data_custom_field_set_associations_inner
      type: object
    Contact_update_request_data_custom_field_values_inner_custom_field:
      properties:
        id:
          description: The unique identifier for a single CustomField associated with
            the CustomFieldValue. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Contact_update_request_data_custom_field_values_inner_custom_field
      type: object
    Contact_update_request_data_custom_field_values_inner:
      properties:
        value:
          description: The value of the CustomFieldValue.
          title: value
          type: string
        custom_field:
          $ref: '#/components/schemas/Contact_update_request_data_custom_field_values_inner_custom_field'
        id:
          description: The unique identifier for a single CustomFieldValue associated
            with the Contact. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated CustomFieldValue is present, the CustomFieldValue\
            \ is deleted from the Contact."
          title: _destroy
          type: boolean
      title: Contact_update_request_data_custom_field_values_inner
      type: object
    Contact_update_request_data_email_addresses_inner:
      properties:
        id:
          description: The unique identifier for a single EmailAddress associated
            with the Contact. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        name:
          default: Other
          description: Name of the EmailAddress.
          enum:
          - Work
          - Home
          - Other
          title: name
          type: string
        address:
          description: Email address.
          title: address
          type: string
        default_email:
          description: Whether or not the Contact should be the default email for
            the Contact.
          title: default_email
          type: boolean
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated EmailAddress is present, the EmailAddress\
            \ is deleted from the Contact."
          title: _destroy
          type: boolean
      title: Contact_update_request_data_email_addresses_inner
      type: object
    Contact_update_request_data_instant_messengers_inner:
      properties:
        name:
          default: Other
          description: Name of the InstantMessenger.
          enum:
          - Work
          - Personal
          - Other
          title: name
          type: string
        address:
          description: Address of the InstantMessenger.
          title: address
          type: string
        id:
          description: The unique identifier for a single InstantMessenger associated
            with the Contact. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated InstantMessenger is present, the InstantMessenger\
            \ is deleted from the Contact."
          title: _destroy
          type: boolean
      title: Contact_update_request_data_instant_messengers_inner
      type: object
    Contact_update_request_data_phone_numbers_inner:
      properties:
        name:
          default: Other
          description: Name of the PhoneNumber.
          enum:
          - Work
          - Home
          - Mobile
          - Fax
          - Pager
          - Skype
          - Other
          title: name
          type: string
        number:
          description: Phone number.
          title: number
          type: string
        default_number:
          description: Whether or not the PhoneNumber should be the default number
            for the Contact.
          title: default_number
          type: boolean
        id:
          description: The unique identifier for a single PhoneNumber associated with
            the Contact. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated PhoneNumber is present, the PhoneNumber\
            \ is deleted from the Contact."
          title: _destroy
          type: boolean
      title: Contact_update_request_data_phone_numbers_inner
      type: object
    Contact_update_request_data_web_sites_inner:
      properties:
        name:
          default: Other
          description: Name of the WebSite.
          enum:
          - Work
          - Personal
          - Twitter
          - Facebook
          - LinkedIn
          - Instant Messenger
          - Other
          title: name
          type: string
        address:
          description: URL of the WebSite.
          title: address
          type: string
        id:
          description: The unique identifier for a single WebSite associated with
            the Contact. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        default_web_site:
          description: Whether or not the Contact should be the default website for
            the Contact.
          title: default_web_site
          type: boolean
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated WebSite is present, the WebSite is deleted\
            \ from the Contact."
          title: _destroy
          type: boolean
      title: Contact_update_request_data_web_sites_inner
      type: object
    Contact_update_request_data:
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/Contact_update_request_data_addresses_inner'
          title: addresses
          type: array
        avatar:
          $ref: '#/components/schemas/Contact_create_request_data_avatar'
        clio_connect_email:
          description: Notifications will be sent to this email when a resource is
            shared.
          title: clio_connect_email
          type: string
        co_counsel_rate:
          $ref: '#/components/schemas/Contact_create_request_data_co_counsel_rate'
        company:
          $ref: '#/components/schemas/Contact_create_request_data_company'
        currency:
          description: The Currency the contact is associated with.
          title: currency
          type: object
        custom_field_set_associations:
          items:
            $ref: '#/components/schemas/Contact_update_request_data_custom_field_set_associations_inner'
          title: custom_field_set_associations
          type: array
        custom_field_values:
          items:
            $ref: '#/components/schemas/Contact_update_request_data_custom_field_values_inner'
          title: custom_field_values
          type: array
        date_of_birth:
          description: Date of birth of the Contact.
          format: date
          title: date_of_birth
          type: string
        email_addresses:
          items:
            $ref: '#/components/schemas/Contact_update_request_data_email_addresses_inner'
          title: email_addresses
          type: array
        first_name:
          description: First name of the Contact.
          title: first_name
          type: string
        instant_messengers:
          items:
            $ref: '#/components/schemas/Contact_update_request_data_instant_messengers_inner'
          title: instant_messengers
          type: array
        last_name:
          description: Last name of the Contact.
          title: last_name
          type: string
        ledes_client_id:
          description: LEDES client id of the Contact.
          title: ledes_client_id
          type: string
        middle_name:
          description: Middle name of the Contact.
          title: middle_name
          type: string
        name:
          description: "Full name of the Contact. For requirements, see [Contact Name](https://docs.developers.clio.com/api-reference/#section/Contact-Name)."
          title: name
          type: string
        phone_numbers:
          items:
            $ref: '#/components/schemas/Contact_update_request_data_phone_numbers_inner'
          title: phone_numbers
          type: array
        prefix:
          description: Personal title of the Contact.
          title: prefix
          type: string
        sales_tax_number:
          description: A contact's sales tax number will appear on invoices generated
            for the Contact.
          title: sales_tax_number
          type: string
        title:
          description: Professional title of the Contact.
          title: title
          type: string
        type:
          description: Type of the Contact.
          enum:
          - Person
          - Company
          title: type
          type: string
        web_sites:
          items:
            $ref: '#/components/schemas/Contact_update_request_data_web_sites_inner'
          title: web_sites
          type: array
      title: Contact_update_request_data
      type: object
    Contact_update_request:
      properties:
        data:
          $ref: '#/components/schemas/Contact_update_request_data'
      required:
      - data
      title: Contact_update_request
      type: object
    ConversationMessage_create_request_data_attachment:
      properties:
        document_id:
          description: The document id of the attached document.
          format: int64
          title: document_id
          type: integer
        document_version_id:
          description: The document version id of the attached document.
          format: int64
          title: document_version_id
          type: integer
      title: ConversationMessage_create_request_data_attachment
      type: object
    ConversationMessage_create_request_data_conversation:
      properties:
        id:
          description: The unique identifier for a single Conversation associated
            with this ConversationMessage.
          format: int64
          title: id
          type: integer
      title: ConversationMessage_create_request_data_conversation
      type: object
    ConversationMessage_create_request_data_matter:
      properties:
        id:
          description: The unique identifier for a single Matter associated with the
            ConversationMessage. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: ConversationMessage_create_request_data_matter
      type: object
    ConversationMessage_create_request_data_receivers_inner:
      properties:
        id:
          description: The unique identifier for a single receiver for this ConversationMessage.
          format: int64
          title: id
          type: integer
        type:
          description: "The type for a single receiver for this ConversationMessage,\
            \ could be `Contact` or `User`."
          enum:
          - Contact
          - User
          title: type
          type: string
      required:
      - id
      - type
      title: ConversationMessage_create_request_data_receivers_inner
      type: object
    ConversationMessage_create_request_data:
      properties:
        attachment:
          $ref: '#/components/schemas/ConversationMessage_create_request_data_attachment'
        body:
          description: The body value.
          title: body
          type: string
        conversation:
          $ref: '#/components/schemas/ConversationMessage_create_request_data_conversation'
        matter:
          $ref: '#/components/schemas/ConversationMessage_create_request_data_matter'
        receivers:
          items:
            $ref: '#/components/schemas/ConversationMessage_create_request_data_receivers_inner'
          title: receivers
          type: array
        subject:
          description: The subject value.
          title: subject
          type: string
      required:
      - body
      - receivers
      - subject
      title: ConversationMessage_create_request_data
      type: object
    ConversationMessage_create_request:
      properties:
        data:
          $ref: '#/components/schemas/ConversationMessage_create_request_data'
      required:
      - data
      title: ConversationMessage_create_request
      type: object
    Conversation_update_request_data_matter:
      properties:
        id:
          description: The unique identifier for a single Matter associated with the
            Conversation. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Conversation_update_request_data_matter
      type: object
    Conversation_update_request_data:
      properties:
        archived:
          description: Whether or not the Conversation has been archived.
          title: archived
          type: boolean
        matter:
          $ref: '#/components/schemas/Conversation_update_request_data_matter'
        read:
          description: Whether or not the Conversation has been read.
          title: read
          type: boolean
      title: Conversation_update_request_data
      type: object
    Conversation_update_request:
      properties:
        data:
          $ref: '#/components/schemas/Conversation_update_request_data'
      required:
      - data
      title: Conversation_update_request
      type: object
    MatterDocket_create_request_data_jurisdiction:
      properties:
        id:
          description: The unique identifier for a single Jurisdiction associated
            with the MatterDocket. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: MatterDocket_create_request_data_jurisdiction
      type: object
    MatterDocket_create_request_data_trigger:
      properties:
        id:
          description: The unique identifier for a single Trigger associated with
            the MatterDocket. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: MatterDocket_create_request_data_trigger
      type: object
    MatterDocket_create_request_data:
      properties:
        jurisdiction:
          $ref: '#/components/schemas/MatterDocket_create_request_data_jurisdiction'
        name:
          description: Name of the MatterDocket.
          title: name
          type: string
        start_date:
          description: Start date of the MatterDocket. (Expects an ISO-8601 date).
          format: date
          title: start_date
          type: string
        start_time:
          description: Start time of the MatterDocket. Required for some triggers.  (Expects
            an ISO-8601 timestamp).
          format: date-time
          title: start_time
          type: string
        trigger:
          $ref: '#/components/schemas/MatterDocket_create_request_data_trigger'
      required:
      - jurisdiction
      - name
      - start_date
      - trigger
      title: MatterDocket_create_request_data
      type: object
    MatterDocket_create_request:
      properties:
        data:
          $ref: '#/components/schemas/MatterDocket_create_request_data'
      required:
      - data
      title: MatterDocket_create_request
      type: object
    CustomField_create_request_data_picklist_options_inner:
      properties:
        id:
          description: "The unique identifier for a single PicklistOption associated\
            \ with the CustomField. The keyword `null` is not valid for this field.\
            \ Not required for creating new PicklistOptions, but required for updating\
            \ or deleting existing ones."
          format: int64
          title: id
          type: integer
        option:
          description: The option value.
          title: option
          type: string
        _deleted:
          description: Whether or not the PicklistOption should be deleted.
          title: _deleted
          type: boolean
      title: CustomField_create_request_data_picklist_options_inner
      type: object
    CustomField_create_request_data:
      properties:
        display_order:
          description: The display position of the CustomField.
          format: int32
          title: display_order
          type: integer
        displayed:
          default: true
          description: Whether or not the CustomField should be displayed by default.
          title: displayed
          type: boolean
        field_type:
          description: Field type of the CustomField.
          enum:
          - checkbox
          - contact
          - currency
          - date
          - time
          - email
          - matter
          - numeric
          - picklist
          - text_area
          - text_line
          - url
          title: field_type
          type: string
        name:
          description: CustomField name.
          title: name
          type: string
        parent_type:
          description: Type of object the CustomField is for.
          enum:
          - Contact
          - Matter
          title: parent_type
          type: string
        picklist_options:
          items:
            $ref: '#/components/schemas/CustomField_create_request_data_picklist_options_inner'
          title: picklist_options
          type: array
        required:
          default: false
          description: Whether or not the CustomField should require a value.
          title: required
          type: boolean
      required:
      - field_type
      - name
      - parent_type
      title: CustomField_create_request_data
      type: object
    CustomField_create_request:
      properties:
        data:
          $ref: '#/components/schemas/CustomField_create_request_data'
      required:
      - data
      title: CustomField_create_request
      type: object
    CustomField_update_request_data:
      properties:
        display_order:
          description: The display position of the CustomField.
          format: int32
          title: display_order
          type: integer
        displayed:
          default: true
          description: Whether or not the CustomField should be displayed by default.
          title: displayed
          type: boolean
        name:
          description: CustomField name.
          title: name
          type: string
        picklist_options:
          items:
            $ref: '#/components/schemas/CustomField_create_request_data_picklist_options_inner'
          title: picklist_options
          type: array
        required:
          default: false
          description: Whether or not the CustomField should require a value.
          title: required
          type: boolean
      title: CustomField_update_request_data
      type: object
    CustomField_update_request:
      properties:
        data:
          $ref: '#/components/schemas/CustomField_update_request_data'
      required:
      - data
      title: CustomField_update_request
      type: object
    CustomFieldSet_create_request_data:
      properties:
        displayed:
          description: Whether or not the CustomFieldSet should be displayed by default.
          title: displayed
          type: boolean
        name:
          description: CustomFieldSet name.
          title: name
          type: string
        parent_type:
          description: Type of object the CustomFieldSet is for.
          enum:
          - Contact
          - Matter
          title: parent_type
          type: string
      required:
      - name
      title: CustomFieldSet_create_request_data
      type: object
    CustomFieldSet_create_request:
      properties:
        data:
          $ref: '#/components/schemas/CustomFieldSet_create_request_data'
      required:
      - data
      title: CustomFieldSet_create_request
      type: object
    CustomFieldSet_update_request_data:
      properties:
        displayed:
          description: Whether or not the CustomFieldSet should be displayed by default.
          title: displayed
          type: boolean
        name:
          description: CustomFieldSet name.
          title: name
          type: string
        parent_type:
          description: Type of object the CustomFieldSet is for.
          enum:
          - Contact
          - Matter
          title: parent_type
          type: string
      title: CustomFieldSet_update_request_data
      type: object
    CustomFieldSet_update_request:
      properties:
        data:
          $ref: '#/components/schemas/CustomFieldSet_update_request_data'
      required:
      - data
      title: CustomFieldSet_update_request
      type: object
    CustomAction_create_request_data:
      properties:
        label:
          description: Text label to be displayed on the custom link.
          title: label
          type: string
        target_url:
          description: Target URL which will be opened in a new tab when the user
            clicks the custom link.
          title: target_url
          type: string
        ui_reference:
          description: UI reference location within Clio where the link will be displayed.
          enum:
          - activities/show
          - documents/show
          - contacts/show
          - matters/show
          - folders/show
          title: ui_reference
          type: string
      required:
      - label
      - target_url
      - ui_reference
      title: CustomAction_create_request_data
      type: object
    CustomAction_create_request:
      properties:
        data:
          $ref: '#/components/schemas/CustomAction_create_request_data'
      required:
      - data
      title: CustomAction_create_request
      type: object
    CustomAction_update_request_data:
      properties:
        label:
          description: Text label to be displayed on the custom link.
          title: label
          type: string
        target_url:
          description: Target URL which will be opened in a new tab when the user
            clicks the custom link.
          title: target_url
          type: string
        ui_reference:
          description: UI reference location within Clio where the link will be displayed.
          enum:
          - activities/show
          - documents/show
          - contacts/show
          - matters/show
          - folders/show
          title: ui_reference
          type: string
      title: CustomAction_update_request_data
      type: object
    CustomAction_update_request:
      properties:
        data:
          $ref: '#/components/schemas/CustomAction_update_request_data'
      required:
      - data
      title: CustomAction_update_request
      type: object
    Damage_create_request_data:
      properties:
        amount:
          description: Amount
          format: double
          title: amount
          type: number
        damage_type:
          description: Damage type
          enum:
          - special
          - general
          - other
          title: damage_type
          type: string
        description:
          description: Description
          title: description
          type: string
        matter_id:
          description: The unique identifier of the Matter to which the Damage is
            associated.
          format: int64
          title: matter_id
          type: integer
      required:
      - amount
      - damage_type
      - description
      - matter_id
      title: Damage_create_request_data
      type: object
    Damage_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Damage_create_request_data'
      required:
      - data
      title: Damage_create_request
      type: object
    Damage_update_request_data:
      properties:
        amount:
          description: Amount
          format: double
          title: amount
          type: number
        damage_type:
          description: Damage type
          enum:
          - special
          - general
          - other
          title: damage_type
          type: string
        description:
          description: Description
          title: description
          type: string
      title: Damage_update_request_data
      type: object
    Damage_update_request:
      properties:
        data:
          $ref: '#/components/schemas/Damage_update_request_data'
      required:
      - data
      title: Damage_update_request
      type: object
    ExpenseCategory_create_request_data_groups_inner:
      properties:
        id:
          description: The unique identifier for a single Group associated with the
            ExpenseCategory. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        _deleted:
          description: A flag to determine if this Group should lose access to this
            ExpenseCategory.
          title: _deleted
          type: boolean
      title: ExpenseCategory_create_request_data_groups_inner
      type: object
    ExpenseCategory_create_request_data_utbms_code:
      properties:
        id:
          description: The unique identifier for a single UtbmsCode associated with
            the ExpenseCategory. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: ExpenseCategory_create_request_data_utbms_code
      type: object
    ExpenseCategory_create_request_data:
      properties:
        currency:
          description: Currency of the Expense Category.
          title: currency
          type: object
        entry_type:
          description: Defaults to unassociated.
          enum:
          - hard_cost
          - soft_cost
          - unassociated
          title: entry_type
          type: string
        groups:
          items:
            $ref: '#/components/schemas/ExpenseCategory_create_request_data_groups_inner'
          title: groups
          type: array
        name:
          description: Name of the Expense Category.
          title: name
          type: string
        rate:
          description: "Rate of the Expense Category, default is null."
          format: double
          title: rate
          type: number
        utbms_code:
          $ref: '#/components/schemas/ExpenseCategory_create_request_data_utbms_code'
      required:
      - name
      title: ExpenseCategory_create_request_data
      type: object
    ExpenseCategory_create_request:
      properties:
        data:
          $ref: '#/components/schemas/ExpenseCategory_create_request_data'
      required:
      - data
      title: ExpenseCategory_create_request
      type: object
    ExpenseCategory_update_request_data:
      properties:
        currency:
          description: Currency of the Expense Category.
          title: currency
          type: object
        entry_type:
          description: Defaults to unassociated.
          enum:
          - hard_cost
          - soft_cost
          - unassociated
          title: entry_type
          type: string
        groups:
          items:
            $ref: '#/components/schemas/ExpenseCategory_create_request_data_groups_inner'
          title: groups
          type: array
        name:
          description: Name of the Expense Category.
          title: name
          type: string
        rate:
          description: "Rate of the Expense Category, default is null."
          format: double
          title: rate
          type: number
        utbms_code:
          $ref: '#/components/schemas/ExpenseCategory_create_request_data_utbms_code'
      title: ExpenseCategory_update_request_data
      type: object
    ExpenseCategory_update_request:
      properties:
        data:
          $ref: '#/components/schemas/ExpenseCategory_update_request_data'
      required:
      - data
      title: ExpenseCategory_update_request
      type: object
    Grant_create_request_data:
      properties:
        name:
          description: Name of the Grant.
          title: name
          type: string
      title: Grant_create_request_data
      type: object
    Grant_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Grant_create_request_data'
      required:
      - data
      title: Grant_create_request
      type: object
    GrantFundingSource_create_request_data:
      properties:
        name:
          description: Name of the GrantFundingSource.
          title: name
          type: string
      title: GrantFundingSource_create_request_data
      type: object
    GrantFundingSource_create_request:
      properties:
        data:
          $ref: '#/components/schemas/GrantFundingSource_create_request_data'
      required:
      - data
      title: GrantFundingSource_create_request
      type: object
    Group_create_request_data:
      properties:
        name:
          description: Name of the Group.
          title: name
          type: string
      title: Group_create_request_data
      type: object
    Group_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Group_create_request_data'
      required:
      - data
      title: Group_create_request
      type: object
    MyEvent_update_request_data:
      properties:
        marked_as_read:
          description: Indicates whether the event notification should be marked as
            read by the current user. If `false` the event status is reset to unread.
          title: marked_as_read
          type: boolean
      title: MyEvent_update_request_data
      type: object
    MyEvent_update_request:
      properties:
        data:
          $ref: '#/components/schemas/MyEvent_update_request_data'
      required:
      - data
      title: MyEvent_update_request
      type: object
    LineItem_update_request_data_activity:
      properties:
        id:
          description: The unique identifier for a single Activity associated with
            the LineItem. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: LineItem_update_request_data_activity
      type: object
    LineItem_update_request_data_bill:
      properties:
        id:
          description: The unique identifier for a single Bill associated with the
            LineItem. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: LineItem_update_request_data_bill
      type: object
    LineItem_update_request_data_discount:
      properties:
        rate:
          description: Discount rate for the LineItem.
          format: double
          title: rate
          type: number
        type:
          description: "Discount type. This should be set to one of: 'percentage'\
            \ or 'money'."
          title: type
          type: boolean
      title: LineItem_update_request_data_discount
      type: object
    LineItem_update_request_data_matter:
      properties:
        id:
          description: The unique identifier for a single Matter associated with the
            LineItem. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: LineItem_update_request_data_matter
      type: object
    LineItem_update_request_data:
      properties:
        activity:
          $ref: '#/components/schemas/LineItem_update_request_data_activity'
        bill:
          $ref: '#/components/schemas/LineItem_update_request_data_bill'
        date:
          description: The LineItem date.
          format: date
          title: date
          type: string
        description:
          description: Description of the LineItem.
          title: description
          type: string
        discount:
          $ref: '#/components/schemas/LineItem_update_request_data_discount'
        group_ordering:
          description: The LineItem group ordering.
          format: int32
          title: group_ordering
          type: integer
        kind:
          description: The specific type of activity which is associated with the
            LineItem.
          enum:
          - Expense
          - Service
          - Product
          title: kind
          type: string
        matter:
          $ref: '#/components/schemas/LineItem_update_request_data_matter'
        note:
          description: The note attached to the LineItem.
          title: note
          type: string
        price:
          description: The price of the LineItem.
          format: double
          title: price
          type: number
        quantity:
          description: Quantity of the LineItem.
          format: double
          title: quantity
          type: number
        secondary_taxable:
          description: Whether the LineItem is secondary taxable.
          title: secondary_taxable
          type: boolean
        taxable:
          description: Whether the LineItem taxable.
          title: taxable
          type: boolean
        update_original_record:
          description: Whether the associated activity will be updated.
          title: update_original_record
          type: boolean
      title: LineItem_update_request_data
      type: object
    LineItem_update_request:
      properties:
        data:
          $ref: '#/components/schemas/LineItem_update_request_data'
      required:
      - data
      title: LineItem_update_request
      type: object
    Matter_create_request_data_client:
      properties:
        id:
          description: The unique identifier for a single Contact associated with
            the Matter. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: Matter_create_request_data_client
      type: object
    Matter_create_request_data_custom_field_set_associations_inner:
      properties:
        display_order:
          description: "The order to display the CustomFieldSet in a Matter. If not\
            \ specified, it is added as the last CustomFieldSet of the Matter."
          format: int32
          title: display_order
          type: integer
        custom_field_set:
          $ref: '#/components/schemas/Contact_create_request_data_custom_field_set_associations_inner_custom_field_set'
      required:
      - custom_field_set
      title: Matter_create_request_data_custom_field_set_associations_inner
      type: object
    Matter_create_request_data_custom_rate_rates_inner_user:
      properties:
        id:
          description: The unique identifier for a single User associated with the
            Rate. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: Matter_create_request_data_custom_rate_rates_inner_user
      type: object
    Matter_create_request_data_custom_rate_rates_inner_activity_description:
      properties:
        id:
          description: The unique identifier for a single ActivityDescription associated
            with the Rate. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Matter_create_request_data_custom_rate_rates_inner_activity_description
      type: object
    Matter_create_request_data_custom_rate_rates_inner_group:
      properties:
        id:
          description: The unique identifier for a single Group associated with the
            Rate. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Matter_create_request_data_custom_rate_rates_inner_group
      type: object
    Matter_create_request_data_custom_rate_rates_inner:
      properties:
        user:
          $ref: '#/components/schemas/Matter_create_request_data_custom_rate_rates_inner_user'
        award:
          description: "The full amount of the award given. Only valid for ContingencyFee.\
            \ If given as an empty string, it will reset the ContingencyFee into the\
            \ unawarded state."
          format: double
          title: award
          type: number
        note:
          description: Detailed description of the rate. Only valid for ContingencyFee.
          title: note
          type: string
        date:
          description: The date the rate is for. Only valid for ContingencyFee. (Expects
            an ISO-8601 date).
          format: date
          title: date
          type: string
        rate:
          description: |
            If `type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.

            If `type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.

            If `type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter.
          format: double
          title: rate
          type: number
        activity_description:
          $ref: '#/components/schemas/Matter_create_request_data_custom_rate_rates_inner_activity_description'
        group:
          $ref: '#/components/schemas/Matter_create_request_data_custom_rate_rates_inner_group'
      required:
      - rate
      - user
      title: Matter_create_request_data_custom_rate_rates_inner
      type: object
    Matter_create_request_data_custom_rate:
      properties:
        type:
          description: The type of custom rate for the Matter.
          enum:
          - FlatRate
          - HourlyRate
          - ContingencyFee
          title: type
          type: string
        rates:
          items:
            $ref: '#/components/schemas/Matter_create_request_data_custom_rate_rates_inner'
          title: rates
          type: array
      required:
      - type
      title: Matter_create_request_data_custom_rate
      type: object
    Matter_create_request_data_evergreen_retainer_recipients_inner:
      properties:
        id:
          description: the `id` of a User who will receive the trust balance notification.
          format: int64
          title: id
          type: integer
        _destroy:
          description: Used to remove an existing User as a recipient of the trust
            balance notification.
          title: _destroy
          type: boolean
      title: Matter_create_request_data_evergreen_retainer_recipients_inner
      type: object
    Matter_create_request_data_evergreen_retainer:
      properties:
        minimum_threshold:
          description: "The trust balance threshold for the Matter. When the balance\
            \ falls below the threshold, the retainer's associated recipients (firm\
            \ users) will receive a notification."
          format: double
          title: minimum_threshold
          type: number
        recipients:
          items:
            $ref: '#/components/schemas/Matter_create_request_data_evergreen_retainer_recipients_inner'
          title: recipients
          type: array
      title: Matter_create_request_data_evergreen_retainer
      type: object
    Matter_create_request_data_group:
      properties:
        id:
          description: The unique identifier for a single Group associated with the
            Matter. Use the keyword `null` to specify no association.
          format: int64
          title: id
          type: integer
      title: Matter_create_request_data_group
      type: object
    Matter_create_request_data_matter_budget:
      properties:
        _destroy:
          description: Determines whether the matter budget associated with the matter
            should be destroyed. Only users with matter budget destroy capabilities
            can destroy matter budgets.
          title: _destroy
          type: boolean
        budget:
          description: The amount allocated for the matter.
          format: double
          title: budget
          type: number
        include_expenses:
          description: Determines whether the budget includes expenses in the calculation.
          title: include_expenses
          type: boolean
        notification_threshold:
          description: Percentage of the budget when it starts notifying users.
          format: int32
          title: notification_threshold
          type: integer
        notify_users:
          default: false
          description: Determine whether to notify users when the matter reaches the
            notification threshold.
          title: notify_users
          type: boolean
      title: Matter_create_request_data_matter_budget
      type: object
    Matter_create_request_data_matter_stage:
      properties:
        id:
          description: The unique identifier for a single MatterStage associated with
            the Matter. Use the keyword `null` to specify no association.
          format: int64
          title: id
          type: integer
      title: Matter_create_request_data_matter_stage
      type: object
    Matter_create_request_data_originating_attorney:
      properties:
        id:
          description: The unique identifier for a single User associated with the
            Matter. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Matter_create_request_data_originating_attorney
      type: object
    Matter_create_request_data_practice_area:
      properties:
        id:
          description: The unique identifier for a single PracticeArea associated
            with the Matter. Use the keyword `null` to specify no association.
          format: int64
          title: id
          type: integer
      title: Matter_create_request_data_practice_area
      type: object
    Matter_create_request_data_relationships_inner_contact:
      properties:
        id:
          description: The unique identifier for a single Contact associated with
            the Relationship. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: Matter_create_request_data_relationships_inner_contact
      type: object
    Matter_create_request_data_relationships_inner:
      properties:
        description:
          description: Describe the relationship between a Contact and a Matter.
          title: description
          type: string
        contact:
          $ref: '#/components/schemas/Matter_create_request_data_relationships_inner_contact'
      required:
      - contact
      - description
      title: Matter_create_request_data_relationships_inner
      type: object
    Matter_create_request_data_split_invoice_payers_inner:
      properties:
        contact_id:
          description: Contact id for the matter payer.
          format: int64
          title: contact_id
          type: integer
        send_to_bill_recipients:
          description: Boolean indication to send a split invoice to all bill recipients.
          title: send_to_bill_recipients
          type: boolean
        split_portion:
          description: The split portion for the payer.
          format: double
          title: split_portion
          type: number
      required:
      - contact_id
      - split_portion
      title: Matter_create_request_data_split_invoice_payers_inner
      type: object
    Matter_create_request_data_statute_of_limitations_reminders_inner_notification_method:
      properties:
        id:
          description: The unique identifier for a single NotificationMethod associated
            with the Reminder. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: Matter_create_request_data_statute_of_limitations_reminders_inner_notification_method
      type: object
    Matter_create_request_data_statute_of_limitations_reminders_inner:
      properties:
        duration_value:
          description: Time measured in `duration_unit` to remind user before the
            subject.
          format: int32
          title: duration_value
          type: integer
        duration_unit:
          description: Unit to measure the duration value in.
          title: duration_unit
          type: string
        notification_method:
          $ref: '#/components/schemas/Matter_create_request_data_statute_of_limitations_reminders_inner_notification_method'
      required:
      - duration_unit
      - duration_value
      - notification_method
      title: Matter_create_request_data_statute_of_limitations_reminders_inner
      type: object
    Matter_create_request_data_statute_of_limitations:
      properties:
        status:
          description: The task status of Statue of Limitations. Users without advanced
            tasks are allowed to select `Complete' or `Pending` only.
          enum:
          - pending
          - in_progress
          - in_review
          - complete
          title: status
          type: string
        due_at:
          description: The due date of Statute of Limitations. (Expects an ISO-8601
            date).
          format: date
          title: due_at
          type: string
        reminders:
          items:
            $ref: '#/components/schemas/Matter_create_request_data_statute_of_limitations_reminders_inner'
          title: reminders
          type: array
      title: Matter_create_request_data_statute_of_limitations
      type: object
    Matter_create_request_data_task_template_list_instances_inner_task_template_list:
      properties:
        id:
          description: The unique identifier for a single TaskTemplateList associated
            with the TaskTemplateListInstance. The keyword `null` is not valid for
            this field.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: Matter_create_request_data_task_template_list_instances_inner_task_template_list
      type: object
    Matter_create_request_data_task_template_list_instances_inner:
      properties:
        task_template_list:
          $ref: '#/components/schemas/Matter_create_request_data_task_template_list_instances_inner_task_template_list'
        assignee_id:
          description: The id of the user to assign the task template list to.
          format: int64
          title: assignee_id
          type: integer
        notify_assignees:
          description: Whether or not task list assignees should be notified when
            the task list is assigned to a matter.
          title: notify_assignees
          type: boolean
        due_at:
          description: Due date of the tasks. (Expects an ISO-8601 date).
          format: date
          title: due_at
          type: string
      required:
      - task_template_list
      title: Matter_create_request_data_task_template_list_instances_inner
      type: object
    Matter_create_request_data:
      properties:
        billable:
          default: true
          description: Whether or not the matter is billable.
          title: billable
          type: boolean
        client:
          $ref: '#/components/schemas/Matter_create_request_data_client'
        client_reference:
          description: Client Reference string for external uses.
          title: client_reference
          type: string
        close_date:
          description: Date the Matter was set to closed. (Expects an ISO-8601 date).
          format: date
          title: close_date
          type: string
        currency:
          description: Currency of the matter
          title: currency
          type: object
        custom_field_set_associations:
          items:
            $ref: '#/components/schemas/Matter_create_request_data_custom_field_set_associations_inner'
          title: custom_field_set_associations
          type: array
        custom_field_values:
          items:
            $ref: '#/components/schemas/Contact_create_request_data_custom_field_values_inner'
          title: custom_field_values
          type: array
        custom_rate:
          $ref: '#/components/schemas/Matter_create_request_data_custom_rate'
        description:
          description: Detailed description of the Matter.
          title: description
          type: string
        display_number:
          description: "Matter reference and label. Depending on the account's manual_matter_numbering\
            \ setting, this is either read only (generated), or customizable."
          title: display_number
          type: string
        evergreen_retainer:
          $ref: '#/components/schemas/Matter_create_request_data_evergreen_retainer'
        group:
          $ref: '#/components/schemas/Matter_create_request_data_group'
        location:
          description: Location of the Matter.
          title: location
          type: string
        matter_budget:
          $ref: '#/components/schemas/Matter_create_request_data_matter_budget'
        matter_stage:
          $ref: '#/components/schemas/Matter_create_request_data_matter_stage'
        open_date:
          description: Date the Matter was set to open. (Expects an ISO-8601 date).
          format: date
          title: open_date
          type: string
        originating_attorney:
          $ref: '#/components/schemas/Matter_create_request_data_originating_attorney'
        pending_date:
          description: Date the Matter was set to pending. (Expects an ISO-8601 date).
          format: date
          title: pending_date
          type: string
        practice_area:
          $ref: '#/components/schemas/Matter_create_request_data_practice_area'
        relationships:
          items:
            $ref: '#/components/schemas/Matter_create_request_data_relationships_inner'
          title: relationships
          type: array
        reset_matter_number:
          default: false
          description: Defaults to false. Resets the matter's number based on the
            account's matter numbering scheme.
          title: reset_matter_number
          type: boolean
        responsible_attorney:
          $ref: '#/components/schemas/Matter_create_request_data_originating_attorney'
        responsible_staff:
          $ref: '#/components/schemas/Matter_create_request_data_originating_attorney'
        split_invoice_payers:
          items:
            $ref: '#/components/schemas/Matter_create_request_data_split_invoice_payers_inner'
          title: split_invoice_payers
          type: array
        status:
          description: Matter status.
          enum:
          - open
          - closed
          - pending
          title: status
          type: string
        statute_of_limitations:
          $ref: '#/components/schemas/Matter_create_request_data_statute_of_limitations'
        task_template_list_instances:
          items:
            $ref: '#/components/schemas/Matter_create_request_data_task_template_list_instances_inner'
          title: task_template_list_instances
          type: array
      required:
      - client
      - description
      title: Matter_create_request_data
      type: object
    Matter_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Matter_create_request_data'
      required:
      - data
      title: Matter_create_request
      type: object
    Matter_update_request_data_client:
      properties:
        id:
          description: The unique identifier for a single Contact associated with
            the Matter. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Matter_update_request_data_client
      type: object
    Matter_update_request_data_custom_field_set_associations_inner:
      properties:
        id:
          description: The unique identifier for a single CustomFieldSetAssociation
            associated with the Matter. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        display_order:
          description: "The order to display the CustomFieldSet in a Matter. If not\
            \ specified, it is added as the last CustomFieldSet of the Matter."
          format: int32
          title: display_order
          type: integer
        custom_field_set:
          $ref: '#/components/schemas/Contact_update_request_data_custom_field_set_associations_inner_custom_field_set'
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated CustomFieldSetAssociation is present, the\
            \ CustomFieldSetAssociation is deleted from the Matter."
          title: _destroy
          type: boolean
      title: Matter_update_request_data_custom_field_set_associations_inner
      type: object
    Matter_update_request_data_custom_field_values_inner:
      properties:
        value:
          description: The value of the CustomFieldValue.
          title: value
          type: string
        custom_field:
          $ref: '#/components/schemas/Contact_update_request_data_custom_field_values_inner_custom_field'
        id:
          description: The unique identifier for a single CustomFieldValue associated
            with the Matter. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated CustomFieldValue is present, the CustomFieldValue\
            \ is deleted from the Matter."
          title: _destroy
          type: boolean
      title: Matter_update_request_data_custom_field_values_inner
      type: object
    Matter_update_request_data_custom_rate_rates_inner_user:
      properties:
        id:
          description: The unique identifier for a single User associated with the
            Rate. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Matter_update_request_data_custom_rate_rates_inner_user
      type: object
    Matter_update_request_data_custom_rate_rates_inner:
      properties:
        user:
          $ref: '#/components/schemas/Matter_update_request_data_custom_rate_rates_inner_user'
        award:
          description: "The full amount of the award given. Only valid for ContingencyFee.\
            \ If given as an empty string, it will reset the ContingencyFee into the\
            \ unawarded state."
          format: double
          title: award
          type: number
        note:
          description: Detailed description of the rate. Only valid for ContingencyFee.
          title: note
          type: string
        date:
          description: The date the rate is for. Only valid for ContingencyFee. (Expects
            an ISO-8601 date).
          format: date
          title: date
          type: string
        rate:
          description: |
            If `type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.

            If `type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.

            If `type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter.
          format: double
          title: rate
          type: number
        id:
          description: The unique identifier for a single Rate associated with the
            Matter. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated Rate is present, the Rate is deleted from\
            \ the Matter."
          title: _destroy
          type: boolean
        activity_description:
          $ref: '#/components/schemas/Matter_create_request_data_custom_rate_rates_inner_activity_description'
        group:
          $ref: '#/components/schemas/Matter_create_request_data_custom_rate_rates_inner_group'
      title: Matter_update_request_data_custom_rate_rates_inner
      type: object
    Matter_update_request_data_custom_rate:
      properties:
        type:
          description: The type of custom rate for the Matter.
          enum:
          - FlatRate
          - HourlyRate
          - ContingencyFee
          title: type
          type: string
        rates:
          items:
            $ref: '#/components/schemas/Matter_update_request_data_custom_rate_rates_inner'
          title: rates
          type: array
      title: Matter_update_request_data_custom_rate
      type: object
    Matter_update_request_data_evergreen_retainer:
      properties:
        minimum_threshold:
          description: "The trust balance threshold for the Matter. When the balance\
            \ falls below the threshold, the retainer's associated recipients (firm\
            \ users) will receive a notification."
          format: double
          title: minimum_threshold
          type: number
        _destroy:
          description: "If this flag is set to `true`, the trust balance notification\
            \ will be deleted from the Matter."
          title: _destroy
          type: boolean
        recipients:
          items:
            $ref: '#/components/schemas/Matter_create_request_data_evergreen_retainer_recipients_inner'
          title: recipients
          type: array
      title: Matter_update_request_data_evergreen_retainer
      type: object
    Matter_update_request_data_relationships_inner_contact:
      properties:
        id:
          description: The unique identifier for a single Contact associated with
            the Relationship. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Matter_update_request_data_relationships_inner_contact
      type: object
    Matter_update_request_data_relationships_inner:
      properties:
        description:
          description: Describe the relationship between a Contact and a Matter.
          title: description
          type: string
        contact:
          $ref: '#/components/schemas/Matter_update_request_data_relationships_inner_contact'
        id:
          description: The unique identifier for a single Relationship associated
            with the Matter. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated Relationship is present, the Relationship\
            \ is deleted from the Matter."
          title: _destroy
          type: boolean
      title: Matter_update_request_data_relationships_inner
      type: object
    Matter_update_request_data_split_invoice_payers_inner:
      properties:
        contact_id:
          description: Contact id for the matter payer.
          format: int64
          title: contact_id
          type: integer
        id:
          description: The id for the payer.
          format: int64
          title: id
          type: integer
        send_to_bill_recipients:
          description: Boolean indication to send a split invoice to all bill recipients.
          title: send_to_bill_recipients
          type: boolean
        split_portion:
          description: The split portion for the payer.
          format: double
          title: split_portion
          type: number
        _destroy:
          description: "If this flag is set to `true`, the split invoice payer will\
            \ be deleted from the Matter."
          title: _destroy
          type: boolean
      title: Matter_update_request_data_split_invoice_payers_inner
      type: object
    Matter_update_request_data_statute_of_limitations_reminders_inner_notification_method:
      properties:
        id:
          description: The unique identifier for a single NotificationMethod associated
            with the Reminder. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Matter_update_request_data_statute_of_limitations_reminders_inner_notification_method
      type: object
    Matter_update_request_data_statute_of_limitations_reminders_inner:
      properties:
        duration_value:
          description: Time measured in `duration_unit` to remind user before the
            subject.
          format: int32
          title: duration_value
          type: integer
        duration_unit:
          description: Unit to measure the duration value in.
          title: duration_unit
          type: string
        notification_method:
          $ref: '#/components/schemas/Matter_update_request_data_statute_of_limitations_reminders_inner_notification_method'
        id:
          description: The unique identifier for a single Reminder associated with
            the Matter. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated Reminder is present, the Reminder is deleted\
            \ from the Matter."
          title: _destroy
          type: boolean
      title: Matter_update_request_data_statute_of_limitations_reminders_inner
      type: object
    Matter_update_request_data_statute_of_limitations:
      properties:
        status:
          description: The task status of Statue of Limitations. Users without advanced
            tasks are allowed to select `Complete' or `Pending` only.
          enum:
          - pending
          - in_progress
          - in_review
          - complete
          title: status
          type: string
        due_at:
          description: The due date of Statute of Limitations. (Expects an ISO-8601
            date).
          format: date
          title: due_at
          type: string
        reminders:
          items:
            $ref: '#/components/schemas/Matter_update_request_data_statute_of_limitations_reminders_inner'
          title: reminders
          type: array
      title: Matter_update_request_data_statute_of_limitations
      type: object
    Matter_update_request_data_task_template_list_instances_inner_task_template_list:
      properties:
        id:
          description: The unique identifier for a single TaskTemplateList associated
            with the TaskTemplateListInstance. The keyword `null` is not valid for
            this field.
          format: int64
          title: id
          type: integer
      title: Matter_update_request_data_task_template_list_instances_inner_task_template_list
      type: object
    Matter_update_request_data_task_template_list_instances_inner:
      properties:
        task_template_list:
          $ref: '#/components/schemas/Matter_update_request_data_task_template_list_instances_inner_task_template_list'
        assignee_id:
          description: The id of the user to assign the task template list to.
          format: int64
          title: assignee_id
          type: integer
        notify_assignees:
          description: Whether or not task list assignees should be notified when
            the task list is assigned to a matter.
          title: notify_assignees
          type: boolean
        due_at:
          description: Due date of the tasks. (Expects an ISO-8601 date).
          format: date
          title: due_at
          type: string
      title: Matter_update_request_data_task_template_list_instances_inner
      type: object
    Matter_update_request_data:
      properties:
        billable:
          default: true
          description: Whether or not the matter is billable.
          title: billable
          type: boolean
        client:
          $ref: '#/components/schemas/Matter_update_request_data_client'
        client_reference:
          description: Client Reference string for external uses.
          title: client_reference
          type: string
        close_date:
          description: Date the Matter was set to closed. (Expects an ISO-8601 date).
          format: date
          title: close_date
          type: string
        currency:
          description: Currency of the matter
          title: currency
          type: object
        custom_field_set_associations:
          items:
            $ref: '#/components/schemas/Matter_update_request_data_custom_field_set_associations_inner'
          title: custom_field_set_associations
          type: array
        custom_field_values:
          items:
            $ref: '#/components/schemas/Matter_update_request_data_custom_field_values_inner'
          title: custom_field_values
          type: array
        custom_rate:
          $ref: '#/components/schemas/Matter_update_request_data_custom_rate'
        description:
          description: Detailed description of the Matter.
          title: description
          type: string
        display_number:
          description: "Matter reference and label. Depending on the account's manual_matter_numbering\
            \ setting, this is either read only (generated), or customizable."
          title: display_number
          type: string
        evergreen_retainer:
          $ref: '#/components/schemas/Matter_update_request_data_evergreen_retainer'
        group:
          $ref: '#/components/schemas/Matter_create_request_data_group'
        location:
          description: Location of the Matter.
          title: location
          type: string
        matter_budget:
          $ref: '#/components/schemas/Matter_create_request_data_matter_budget'
        matter_stage:
          $ref: '#/components/schemas/Matter_create_request_data_matter_stage'
        open_date:
          description: Date the Matter was set to open. (Expects an ISO-8601 date).
          format: date
          title: open_date
          type: string
        originating_attorney:
          $ref: '#/components/schemas/Matter_create_request_data_originating_attorney'
        pending_date:
          description: Date the Matter was set to pending. (Expects an ISO-8601 date).
          format: date
          title: pending_date
          type: string
        practice_area:
          $ref: '#/components/schemas/Matter_create_request_data_practice_area'
        relationships:
          items:
            $ref: '#/components/schemas/Matter_update_request_data_relationships_inner'
          title: relationships
          type: array
        reset_matter_number:
          default: false
          description: Defaults to false. Resets the matter's number based on the
            account's matter numbering scheme.
          title: reset_matter_number
          type: boolean
        responsible_attorney:
          $ref: '#/components/schemas/Matter_create_request_data_originating_attorney'
        responsible_staff:
          $ref: '#/components/schemas/Matter_create_request_data_originating_attorney'
        split_invoice_payers:
          items:
            $ref: '#/components/schemas/Matter_update_request_data_split_invoice_payers_inner'
          title: split_invoice_payers
          type: array
        status:
          description: Matter status.
          enum:
          - open
          - closed
          - pending
          title: status
          type: string
        statute_of_limitations:
          $ref: '#/components/schemas/Matter_update_request_data_statute_of_limitations'
        task_template_list_instances:
          items:
            $ref: '#/components/schemas/Matter_update_request_data_task_template_list_instances_inner'
          title: task_template_list_instances
          type: array
      title: Matter_update_request_data
      type: object
    Matter_update_request:
      properties:
        data:
          $ref: '#/components/schemas/Matter_update_request_data'
      required:
      - data
      title: Matter_update_request
      type: object
    MedicalRecord_update_request_data:
      properties:
        end_date:
          description: End date for Medical Record.
          format: date-time
          title: end_date
          type: string
        start_date:
          description: Start date for Medical Record.
          format: date-time
          title: start_date
          type: string
      title: MedicalRecord_update_request_data
      type: object
    MedicalRecord_update_request:
      properties:
        data:
          $ref: '#/components/schemas/MedicalRecord_update_request_data'
      required:
      - data
      title: MedicalRecord_update_request
      type: object
    MedicalRecordsRequest_create_request_data_medical_bills_inner_payers_inner:
      properties:
        amount:
          description: Lien amount.
          format: double
          title: amount
          type: number
        holder_id:
          description: The unique identifier for a single Damage associated with the
            MedicalRecordsRequest. The keyword `null` is not valid for this field.
          format: int64
          title: holder_id
          type: integer
        mark_as_lien:
          description: Mark record as Lien.
          title: mark_as_lien
          type: boolean
      required:
      - amount
      - holder_id
      - mark_as_lien
      title: MedicalRecordsRequest_create_request_data_medical_bills_inner_payers_inner
      type: object
    MedicalRecordsRequest_create_request_data_medical_bills_inner:
      properties:
        adjustment:
          description: Adjustment for Medical Bill.
          format: double
          title: adjustment
          type: number
        amount:
          description: Amount for Medical Bill.
          format: double
          title: amount
          type: number
        balance:
          description: Balance for Medical Bill.
          format: double
          title: balance
          type: number
        bill_date:
          description: Bill date for Medical Bill. (Expects an ISO-8601 date).
          format: date
          title: bill_date
          type: string
        bill_received_date:
          description: Bill received date for Medical Bill. (Expects an ISO-8601 date).
          format: date
          title: bill_received_date
          type: string
        document_id:
          description: The unique identifier for a single Damage associated with the
            MedicalRecordsRequest. The keyword `null` is not valid for this field.
          format: int64
          title: document_id
          type: integer
        name:
          description: Name for Medical Bill.
          title: name
          type: string
        mark_balance_as_lien:
          description: Setting the balance of the Medical Bill as a lien.
          title: mark_balance_as_lien
          type: boolean
        payers:
          items:
            $ref: '#/components/schemas/MedicalRecordsRequest_create_request_data_medical_bills_inner_payers_inner'
          title: payers
          type: array
      required:
      - adjustment
      - amount
      - balance
      - mark_balance_as_lien
      - name
      title: MedicalRecordsRequest_create_request_data_medical_bills_inner
      type: object
    MedicalRecordsRequest_create_request_data_medical_records_inner:
      properties:
        document_id:
          description: The unique identifier for a single MedicalRecord associated
            with the MedicalRecordsRequest. The keyword `null` is not valid for this
            field.
          format: int64
          title: document_id
          type: integer
        end_date:
          description: End date for Medical Record.
          format: date-time
          title: end_date
          type: string
        start_date:
          description: Start date for Medical Record.
          format: date-time
          title: start_date
          type: string
      required:
      - document_id
      title: MedicalRecordsRequest_create_request_data_medical_records_inner
      type: object
    MedicalRecordsRequest_create_request_data:
      properties:
        bills_follow_up_date:
          description: Follow up date for Medical Bills. (Expects an ISO-8601 date).
          format: date-time
          title: bills_follow_up_date
          type: string
        bills_request_date:
          description: Requested date for Medical Bills. (Expects an ISO-8601 date).
          format: date-time
          title: bills_request_date
          type: string
        bills_status:
          description: Current status for the Medical Bills.
          enum:
          - not_yet_requested
          - requested
          - received
          - incomplete
          - certified
          title: bills_status
          type: string
        description:
          description: Detailed description of the Medical Records Detail.
          title: description
          type: string
        in_treatment:
          description: True or false value to record if the treatment has been completed.
          title: in_treatment
          type: boolean
        matter_id:
          description: The ID of the matter that the Medical Records Detail belongs
            to.
          format: int64
          title: matter_id
          type: integer
        medical_bills:
          items:
            $ref: '#/components/schemas/MedicalRecordsRequest_create_request_data_medical_bills_inner'
          title: medical_bills
          type: array
        medical_provider_id:
          description: The unique identifier for a single Medical Provider associated
            with this Medical Records Detail.
          format: int64
          title: medical_provider_id
          type: integer
        medical_records:
          items:
            $ref: '#/components/schemas/MedicalRecordsRequest_create_request_data_medical_records_inner'
          title: medical_records
          type: array
        records_follow_up_date:
          description: Follow up date for Medical Records. (Expects an ISO-8601 date).
          format: date-time
          title: records_follow_up_date
          type: string
        records_request_date:
          description: Requested date for Medical Records. (Expects an ISO-8601 date).
          format: date-time
          title: records_request_date
          type: string
        records_status:
          description: Current status for the Medical Records.
          enum:
          - not_yet_requested
          - requested
          - received
          - incomplete
          - certified
          title: records_status
          type: string
        treatment_end_date:
          description: End date for the treatment. (Expects an ISO-8601 date).
          format: date-time
          title: treatment_end_date
          type: string
        treatment_start_date:
          description: Start date for the treatment. (Expects an ISO-8601 date).
          format: date-time
          title: treatment_start_date
          type: string
      required:
      - bills_status
      - in_treatment
      - matter_id
      - medical_provider_id
      - records_status
      title: MedicalRecordsRequest_create_request_data
      type: object
    MedicalRecordsRequest_create_request:
      properties:
        data:
          $ref: '#/components/schemas/MedicalRecordsRequest_create_request_data'
      required:
      - data
      title: MedicalRecordsRequest_create_request
      type: object
    MedicalRecordsRequest_update_request_data_medical_bills_inner_payers_inner:
      properties:
        amount:
          description: Lien amount.
          format: double
          title: amount
          type: number
        holder_id:
          description: The unique identifier for a single Damage associated with the
            MedicalRecordsRequest. The keyword `null` is not valid for this field.
          format: int64
          title: holder_id
          type: integer
        mark_as_lien:
          description: Mark record as Lien.
          title: mark_as_lien
          type: boolean
      title: MedicalRecordsRequest_update_request_data_medical_bills_inner_payers_inner
      type: object
    MedicalRecordsRequest_update_request_data_medical_bills_inner:
      properties:
        adjustment:
          description: Adjustment for Medical Bill.
          format: double
          title: adjustment
          type: number
        amount:
          description: Amount for Medical Bill.
          format: double
          title: amount
          type: number
        balance:
          description: Balance for Medical Bill.
          format: double
          title: balance
          type: number
        bill_date:
          description: Bill date for Medical Bill. (Expects an ISO-8601 date).
          format: date
          title: bill_date
          type: string
        bill_received_date:
          description: Bill received date for Medical Bill. (Expects an ISO-8601 date).
          format: date
          title: bill_received_date
          type: string
        document_id:
          description: The unique identifier for a single Damage associated with the
            MedicalRecordsRequest. The keyword `null` is not valid for this field.
          format: int64
          title: document_id
          type: integer
        name:
          description: Name for Medical Bill.
          title: name
          type: string
        mark_balance_as_lien:
          description: Setting the balance of the Medical Bill as a lien.
          title: mark_balance_as_lien
          type: boolean
        payers:
          items:
            $ref: '#/components/schemas/MedicalRecordsRequest_update_request_data_medical_bills_inner_payers_inner'
          title: payers
          type: array
      title: MedicalRecordsRequest_update_request_data_medical_bills_inner
      type: object
    MedicalRecordsRequest_update_request_data_medical_records_inner:
      properties:
        document_id:
          description: The unique identifier for a single MedicalRecord associated
            with the MedicalRecordsRequest. The keyword `null` is not valid for this
            field.
          format: int64
          title: document_id
          type: integer
        end_date:
          description: End date for Medical Record.
          format: date-time
          title: end_date
          type: string
        start_date:
          description: Start date for Medical Record.
          format: date-time
          title: start_date
          type: string
      title: MedicalRecordsRequest_update_request_data_medical_records_inner
      type: object
    MedicalRecordsRequest_update_request_data:
      properties:
        bills_follow_up_date:
          description: Follow up date for Medical Bills. (Expects an ISO-8601 date).
          format: date-time
          title: bills_follow_up_date
          type: string
        bills_request_date:
          description: Requested date for Medical Bills. (Expects an ISO-8601 date).
          format: date-time
          title: bills_request_date
          type: string
        bills_status:
          description: Current status for the Medical Bills.
          enum:
          - not_yet_requested
          - requested
          - received
          - incomplete
          - certified
          title: bills_status
          type: string
        description:
          description: Detailed description of the Medical Records Detail.
          title: description
          type: string
        in_treatment:
          description: True or false value to record if the treatment has been completed.
          title: in_treatment
          type: boolean
        medical_bills:
          items:
            $ref: '#/components/schemas/MedicalRecordsRequest_update_request_data_medical_bills_inner'
          title: medical_bills
          type: array
        medical_provider_id:
          description: The unique identifier for a single Medical Provider associated
            with this Medical Records Detail.
          format: int64
          title: medical_provider_id
          type: integer
        medical_records:
          items:
            $ref: '#/components/schemas/MedicalRecordsRequest_update_request_data_medical_records_inner'
          title: medical_records
          type: array
        records_follow_up_date:
          description: Follow up date for Medical Records. (Expects an ISO-8601 date).
          format: date-time
          title: records_follow_up_date
          type: string
        records_request_date:
          description: Requested date for Medical Records. (Expects an ISO-8601 date).
          format: date-time
          title: records_request_date
          type: string
        records_status:
          description: Current status for the Medical Records.
          enum:
          - not_yet_requested
          - requested
          - received
          - incomplete
          - certified
          title: records_status
          type: string
        treatment_end_date:
          description: End date for the treatment. (Expects an ISO-8601 date).
          format: date-time
          title: treatment_end_date
          type: string
        treatment_start_date:
          description: Start date for the treatment. (Expects an ISO-8601 date).
          format: date-time
          title: treatment_start_date
          type: string
      title: MedicalRecordsRequest_update_request_data
      type: object
    MedicalRecordsRequest_update_request:
      properties:
        data:
          $ref: '#/components/schemas/MedicalRecordsRequest_update_request_data'
      required:
      - data
      title: MedicalRecordsRequest_update_request
      type: object
    MedicalBill_update_request_data_payers_inner:
      properties:
        amount:
          description: Lien amount.
          format: double
          title: amount
          type: number
        holder_id:
          description: Lien holder ID
          format: int64
          title: holder_id
          type: integer
        mark_as_lien:
          description: Mark record as Lien.
          title: mark_as_lien
          type: boolean
      title: MedicalBill_update_request_data_payers_inner
      type: object
    MedicalBill_update_request_data:
      properties:
        adjustment:
          description: Adjustment
          format: double
          title: adjustment
          type: number
        amount:
          description: Amount
          format: double
          title: amount
          type: number
        balance:
          description: Balance
          format: double
          title: balance
          type: number
        bill_date:
          description: Bill Date (Expects an ISO-8601 date).
          format: date
          title: bill_date
          type: string
        bill_received_date:
          description: Bill Received Date (Expects an ISO-8601 date).
          format: date
          title: bill_received_date
          type: string
        mark_balance_as_lien:
          description: Mark balance as lien
          title: mark_balance_as_lien
          type: boolean
        name:
          description: Name
          title: name
          type: string
        payers:
          items:
            $ref: '#/components/schemas/MedicalBill_update_request_data_payers_inner'
          title: payers
          type: array
      title: MedicalBill_update_request_data
      type: object
    MedicalBill_update_request:
      properties:
        data:
          $ref: '#/components/schemas/MedicalBill_update_request_data'
      required:
      - data
      title: MedicalBill_update_request
      type: object
    Note_create_request_data_contact:
      properties:
        id:
          description: The unique identifier for a single Contact associated with
            the Note. The keyword null is not valid for this field. Required only
            if the Note type is `"Contact"`.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: Note_create_request_data_contact
      type: object
    Note_create_request_data_matter:
      properties:
        id:
          description: The unique identifier for a single Matter associated with the
            Note. The keyword null is not valid for this field. Required only if the
            Note type is `"Matter"`.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: Note_create_request_data_matter
      type: object
    Note_create_request_data_notification_event_subscribers_inner:
      properties:
        user_id:
          description: The unique identifier for a User to be added as a notification
            event subscriber to the Note.
          title: user_id
          type: string
      required:
      - user_id
      title: Note_create_request_data_notification_event_subscribers_inner
      type: object
    Note_create_request_data:
      properties:
        contact:
          $ref: '#/components/schemas/Note_create_request_data_contact'
        date:
          description: Date for the Note. (Expects an ISO-8601 date).
          format: date
          title: date
          type: string
        detail:
          description: "Note body in text. This Note supports rich text when setting\
            \ the `detail_text_type` field to `rich_text`. With supported tags such\
            \ as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`,\
            \ `<s>`, `<strong>`, `<u>` and `<ul>`. This Note also supports attributes\
            \ such as `href`, `rel`, `type`, and `target`."
          title: detail
          type: string
        detail_text_type:
          default: plain_text
          description: The type of text in the detail field.
          title: detail_text_type
          type: string
        matter:
          $ref: '#/components/schemas/Note_create_request_data_matter'
        notification_event_subscribers:
          items:
            $ref: '#/components/schemas/Note_create_request_data_notification_event_subscribers_inner'
          title: notification_event_subscribers
          type: array
        subject:
          description: Note subject.
          title: subject
          type: string
        type:
          description: Note type.
          enum:
          - Matter
          - Contact
          title: type
          type: string
      required:
      - contact
      - matter
      - type
      title: Note_create_request_data
      type: object
    Note_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Note_create_request_data'
      required:
      - data
      title: Note_create_request
      type: object
    Note_update_request_data_notification_event_subscribers_inner:
      properties:
        user_id:
          description: The unique identifier for a User to be added as a notification
            event subscriber to the Note.
          title: user_id
          type: string
        id:
          description: Unique id of this Note.
          format: int64
          title: id
          type: integer
        _destroy:
          description: Whether or not the notification event subscriber should be
            deleted.
          title: _destroy
          type: boolean
      title: Note_update_request_data_notification_event_subscribers_inner
      type: object
    Note_update_request_data:
      properties:
        date:
          description: Date for the Note. (Expects an ISO-8601 date).
          format: date
          title: date
          type: string
        detail:
          description: "Note body in text. This Note supports rich text when setting\
            \ the `detail_text_type` field to `rich_text`. With supported tags such\
            \ as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`,\
            \ `<s>`, `<strong>`, `<u>` and `<ul>`. This Note also supports attributes\
            \ such as `href`, `rel`, `type`, and `target`."
          title: detail
          type: string
        detail_text_type:
          default: plain_text
          description: The type of text in the detail field.
          title: detail_text_type
          type: string
        notification_event_subscribers:
          items:
            $ref: '#/components/schemas/Note_update_request_data_notification_event_subscribers_inner'
          title: notification_event_subscribers
          type: array
        subject:
          description: Note subject.
          title: subject
          type: string
      title: Note_update_request_data
      type: object
    Note_update_request:
      properties:
        data:
          $ref: '#/components/schemas/Note_update_request_data'
      required:
      - data
      title: Note_update_request
      type: object
    PracticeArea_create_request_data:
      properties:
        category:
          description: |
            The practice area category associated with the *PracticeArea*. The friendly display values corresponding to the enum strings:
            * Administrative
            * Admiralty / Maritime
            * Anti-Trust / Competition
            * Appellate
            * Banking / Finance
            * Bankruptcy
            * Business Formation / Compliance
            * Civil Litigation
            * Civil Rights / Constitutional
            * Collections & Debt
            * Commercial / Sale of Goods
            * Commercial Litigation
            * Construction
            * Consumer Protection
            * Contracts
            * Corporate Litigation
            * Criminal
            * Disability / Social Security
            * Education
            * Elder
            * Employment / Labor
            * Energy / Environmental
            * Ethics
            * Family
            * Food / Drug
            * General Practice
            * Government
            * Healthcare
            * Immigration
            * In-House Counsel
            * Insurance
            * Intellectual Property
            * International
            * Juvenile
            * Legal Aid
            * Mediation / Arbitration
            * Medical Malpractice
            * Military
            * Multi-Practice
            * Non-Profit / Pro Bono
            * Other
            * Personal Injury
            * Privacy / Information Security
            * Private Client
            * Product Liability
            * Real Estate
            * Science / Technology
            * Securities / Mergers & Acquisitions
            * Small Claims
            * Sports / Entertainment / Gaming
            * Tax
            * Telecommunications
            * Traffic Offenses
            * Transportation
            * Tribal
            * Trusts
            * Wills & Estates
            * Worker's Compensation
          enum:
          - administrative
          - admiralty_and_maritime
          - anti_trust_and_competition
          - appellate
          - banking_and_finance
          - bankruptcy
          - business_formation_and_compliance
          - civil_litigation
          - civil_rights_and_constitutional
          - collections_and_debt
          - commercial_and_sale_of_goods
          - commercial_litigation
          - construction
          - consumer_protection
          - contracts
          - corporate_litigation
          - criminal
          - disability_and_social_security
          - education
          - elder
          - employment_and_labor
          - energy_and_environmental
          - ethics
          - family
          - food_and_drug
          - general_practice
          - government
          - healthcare
          - immigration
          - in_house_counsel
          - insurance
          - intellectual_property
          - international
          - juvenile
          - legal_aid
          - mediation_and_arbitration
          - medical_malpractice
          - military
          - multi_practice
          - non_profit_and_pro_bono
          - other
          - personal_injury
          - privacy_and_information_security
          - private_client
          - product_liability
          - real_estate
          - science_and_technology
          - securities_and_mergers_and_acquisitions
          - small_claims
          - sports_and_entertainment_and_gaming
          - tax
          - telecommunications
          - traffic_offenses
          - transportation
          - tribal
          - trusts
          - wills_and_estates
          - workers_compensation
          title: category
          type: string
        code:
          description: The code attached to the PracticeArea.
          title: code
          type: string
        name:
          description: Name of the PracticeArea.
          title: name
          type: string
      required:
      - name
      title: PracticeArea_create_request_data
      type: object
    PracticeArea_create_request:
      properties:
        data:
          $ref: '#/components/schemas/PracticeArea_create_request_data'
      required:
      - data
      title: PracticeArea_create_request
      type: object
    PracticeArea_update_request_data:
      properties:
        category:
          description: |
            The practice area category associated with the *PracticeArea*. The friendly display values corresponding to the enum strings:
            * Administrative
            * Admiralty / Maritime
            * Anti-Trust / Competition
            * Appellate
            * Banking / Finance
            * Bankruptcy
            * Business Formation / Compliance
            * Civil Litigation
            * Civil Rights / Constitutional
            * Collections & Debt
            * Commercial / Sale of Goods
            * Commercial Litigation
            * Construction
            * Consumer Protection
            * Contracts
            * Corporate Litigation
            * Criminal
            * Disability / Social Security
            * Education
            * Elder
            * Employment / Labor
            * Energy / Environmental
            * Ethics
            * Family
            * Food / Drug
            * General Practice
            * Government
            * Healthcare
            * Immigration
            * In-House Counsel
            * Insurance
            * Intellectual Property
            * International
            * Juvenile
            * Legal Aid
            * Mediation / Arbitration
            * Medical Malpractice
            * Military
            * Multi-Practice
            * Non-Profit / Pro Bono
            * Other
            * Personal Injury
            * Privacy / Information Security
            * Private Client
            * Product Liability
            * Real Estate
            * Science / Technology
            * Securities / Mergers & Acquisitions
            * Small Claims
            * Sports / Entertainment / Gaming
            * Tax
            * Telecommunications
            * Traffic Offenses
            * Transportation
            * Tribal
            * Trusts
            * Wills & Estates
            * Worker's Compensation
          enum:
          - administrative
          - admiralty_and_maritime
          - anti_trust_and_competition
          - appellate
          - banking_and_finance
          - bankruptcy
          - business_formation_and_compliance
          - civil_litigation
          - civil_rights_and_constitutional
          - collections_and_debt
          - commercial_and_sale_of_goods
          - commercial_litigation
          - construction
          - consumer_protection
          - contracts
          - corporate_litigation
          - criminal
          - disability_and_social_security
          - education
          - elder
          - employment_and_labor
          - energy_and_environmental
          - ethics
          - family
          - food_and_drug
          - general_practice
          - government
          - healthcare
          - immigration
          - in_house_counsel
          - insurance
          - intellectual_property
          - international
          - juvenile
          - legal_aid
          - mediation_and_arbitration
          - medical_malpractice
          - military
          - multi_practice
          - non_profit_and_pro_bono
          - other
          - personal_injury
          - privacy_and_information_security
          - private_client
          - product_liability
          - real_estate
          - science_and_technology
          - securities_and_mergers_and_acquisitions
          - small_claims
          - sports_and_entertainment_and_gaming
          - tax
          - telecommunications
          - traffic_offenses
          - transportation
          - tribal
          - trusts
          - wills_and_estates
          - workers_compensation
          title: category
          type: string
        code:
          description: The code attached to the PracticeArea.
          title: code
          type: string
        name:
          description: Name of the PracticeArea.
          title: name
          type: string
      title: PracticeArea_update_request_data
      type: object
    PracticeArea_update_request:
      properties:
        data:
          $ref: '#/components/schemas/PracticeArea_update_request_data'
      required:
      - data
      title: PracticeArea_update_request
      type: object
    Relationship_create_request_data_matter:
      properties:
        id:
          description: The unique identifier for a single Matter associated with the
            Relationship. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Relationship_create_request_data_matter
      type: object
    Relationship_create_request_data:
      properties:
        contact:
          $ref: '#/components/schemas/Matter_update_request_data_relationships_inner_contact'
        description:
          description: Describe the relationship between a Contact and a Matter.
          title: description
          type: string
        matter:
          $ref: '#/components/schemas/Relationship_create_request_data_matter'
      title: Relationship_create_request_data
      type: object
    Relationship_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Relationship_create_request_data'
      required:
      - data
      title: Relationship_create_request
      type: object
    Reminder_create_request_data_subject:
      properties:
        id:
          description: The unique identifier for a single CalendarEntry and Task associated
            with the Reminder. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        type:
          description: Model type of the Subject.
          enum:
          - CalendarEntry
          - Task
          title: type
          type: string
      required:
      - id
      - type
      title: Reminder_create_request_data_subject
      type: object
    Reminder_create_request_data:
      properties:
        duration_unit:
          description: Unit to measure the duration value in.
          enum:
          - weeks
          - days
          - hours
          - minutes
          title: duration_unit
          type: string
        duration_value:
          description: Time measured in `duration_unit` to remind user before the
            subject.
          format: int32
          title: duration_value
          type: integer
        notification_method:
          $ref: '#/components/schemas/Matter_create_request_data_statute_of_limitations_reminders_inner_notification_method'
        subject:
          $ref: '#/components/schemas/Reminder_create_request_data_subject'
      required:
      - notification_method
      - subject
      title: Reminder_create_request_data
      type: object
    Reminder_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Reminder_create_request_data'
      required:
      - data
      title: Reminder_create_request
      type: object
    Reminder_update_request_data:
      properties:
        duration_unit:
          description: Unit to measure the duration value in.
          enum:
          - weeks
          - days
          - hours
          - minutes
          title: duration_unit
          type: string
        duration_value:
          description: Time measured in `duration_unit` to remind user before the
            subject.
          format: int32
          title: duration_value
          type: integer
        notification_method:
          $ref: '#/components/schemas/Matter_update_request_data_statute_of_limitations_reminders_inner_notification_method'
      title: Reminder_update_request_data
      type: object
    Reminder_update_request:
      properties:
        data:
          $ref: '#/components/schemas/Reminder_update_request_data'
      required:
      - data
      title: Reminder_update_request
      type: object
    Report_create_request_data_client:
      properties:
        id:
          description: The unique identifier for a single Contact associated with
            the Report. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Report_create_request_data_client
      type: object
    Report_create_request_data_matter:
      properties:
        id:
          description: The unique identifier for a single Matter associated with the
            Report. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Report_create_request_data_matter
      type: object
    Report_create_request_data_originating_attorney:
      properties:
        id:
          description: The unique identifier for a single User associated with the
            Report. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Report_create_request_data_originating_attorney
      type: object
    Report_create_request_data_practice_area:
      properties:
        id:
          description: The unique identifier for a single PracticeArea associated
            with the Report. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Report_create_request_data_practice_area
      type: object
    Report_create_request_data:
      properties:
        client:
          $ref: '#/components/schemas/Report_create_request_data_client'
        end_date:
          description: Filters Report data by date. (Expects an ISO-8601 date).
          format: date
          title: end_date
          type: string
        format:
          description: What format the Report will be generated in.
          enum:
          - csv
          - html
          - json
          - pdf
          - xlsx
          - zip
          title: format
          type: string
        kind:
          description: What kind of Report will be generated.
          enum:
          - accounts_receivable
          - accounts_receivable_aging
          - bank_account_activity
          - billing_history
          - billing_rate
          - client_activity
          - client_ledger
          - clio_payments_deposit
          - clio_payments_ledger
          - clio_payments_monthly_statement
          - clio_payments_sales_tax
          - clio_payments_transaction
          - contact_information
          - disbursement_payment
          - fee_allocation
          - general_ledger
          - grant_matters
          - invoice_payments_v2
          - law_society_of_alberta
          - law_society_of_alberta_al
          - law_society_of_alberta_bar
          - law_society_of_alberta_tl
          - law_society_of_alberta_tt
          - matter
          - matter_balance_summary
          - matter_productivity_by_user
          - matters_by_responsible_attorney
          - originating_attorney_revenue
          - other_revenue
          - productivity_by_client
          - productivity_by_user
          - revenue
          - task_productivity_by_user
          - task_progress_by_user
          - trust_ledger
          - trust_ledger_nsw
          - trust_listing
          - trust_management
          - work_in_progress
          title: kind
          type: string
        matter:
          $ref: '#/components/schemas/Report_create_request_data_matter'
        originating_attorney:
          $ref: '#/components/schemas/Report_create_request_data_originating_attorney'
        practice_area:
          $ref: '#/components/schemas/Report_create_request_data_practice_area'
        responsible_attorney:
          $ref: '#/components/schemas/Report_create_request_data_originating_attorney'
        start_date:
          description: Filters Report data by date. (Expects an ISO-8601 date).
          format: date
          title: start_date
          type: string
        user:
          $ref: '#/components/schemas/Report_create_request_data_originating_attorney'
        year:
          description: Filters Report data by year. Sets start_date and end_date.
            (Expects a year).
          title: year
          type: string
      required:
      - format
      - kind
      title: Report_create_request_data
      type: object
    Report_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Report_create_request_data'
      required:
      - data
      title: Report_create_request
      type: object
    ReportPreset_create_request_data:
      properties:
        format:
          description: What format the report will be generated in.
          enum:
          - csv
          - html
          - json
          - pdf
          - xlsx
          - zip
          title: format
          type: string
        kind:
          description: What kind of report will be generated.
          enum:
          - accounts_receivable
          - accounts_receivable_aging
          - bank_account_activity
          - billing_history
          - billing_rate
          - client_activity
          - client_ledger
          - clio_payments_deposit
          - clio_payments_ledger
          - clio_payments_monthly_statement
          - clio_payments_sales_tax
          - clio_payments_transaction
          - contact_information
          - disbursement_payment
          - fee_allocation
          - general_ledger
          - grant_matters
          - invoice_payments_v2
          - law_society_of_alberta
          - law_society_of_alberta_al
          - law_society_of_alberta_bar
          - law_society_of_alberta_tl
          - law_society_of_alberta_tt
          - matter
          - matter_balance_summary
          - matter_productivity_by_user
          - matters_by_responsible_attorney
          - originating_attorney_revenue
          - other_revenue
          - productivity_by_client
          - productivity_by_user
          - revenue
          - task_productivity_by_user
          - task_progress_by_user
          - trust_ledger
          - trust_ledger_nsw
          - trust_listing
          - trust_management
          - work_in_progress
          title: kind
          type: string
        name:
          description: Name of the ReportPreset.
          title: name
          type: string
        options:
          description: "What the report generation parameters are. See [Creating a\
            \ Report Preset](#section/Creating-a-Report-Preset) for a sample request."
          title: options
          type: string
      required:
      - format
      - kind
      - name
      - options
      title: ReportPreset_create_request_data
      type: object
    ReportPreset_create_request:
      properties:
        data:
          $ref: '#/components/schemas/ReportPreset_create_request_data'
      required:
      - data
      title: ReportPreset_create_request
      type: object
    ReportPreset_update_request_data:
      properties:
        format:
          description: What format the report will be generated in.
          enum:
          - csv
          - html
          - json
          - pdf
          - xlsx
          - zip
          title: format
          type: string
        kind:
          description: What kind of report will be generated.
          enum:
          - accounts_receivable
          - accounts_receivable_aging
          - bank_account_activity
          - billing_history
          - billing_rate
          - client_activity
          - client_ledger
          - clio_payments_deposit
          - clio_payments_ledger
          - clio_payments_monthly_statement
          - clio_payments_sales_tax
          - clio_payments_transaction
          - contact_information
          - disbursement_payment
          - fee_allocation
          - general_ledger
          - grant_matters
          - invoice_payments_v2
          - law_society_of_alberta
          - law_society_of_alberta_al
          - law_society_of_alberta_bar
          - law_society_of_alberta_tl
          - law_society_of_alberta_tt
          - matter
          - matter_balance_summary
          - matter_productivity_by_user
          - matters_by_responsible_attorney
          - originating_attorney_revenue
          - other_revenue
          - productivity_by_client
          - productivity_by_user
          - revenue
          - task_productivity_by_user
          - task_progress_by_user
          - trust_ledger
          - trust_ledger_nsw
          - trust_listing
          - trust_management
          - work_in_progress
          title: kind
          type: string
        name:
          description: Name of the ReportPreset.
          title: name
          type: string
        options:
          description: "What the report generation parameters are. See [Creating a\
            \ Report Preset](#section/Creating-a-Report-Preset) for a sample request."
          title: options
          type: string
      title: ReportPreset_update_request_data
      type: object
    ReportPreset_update_request:
      properties:
        data:
          $ref: '#/components/schemas/ReportPreset_update_request_data'
      required:
      - data
      title: ReportPreset_update_request
      type: object
    ReportSchedule_create_request_data:
      properties:
        day_of_month:
          description: "If the frequency is monthly, which day of the month the Report\
            \ Schedule should run. 32 is used to represent the last day of the month."
          format: int32
          title: day_of_month
          type: integer
        days_of_week:
          description: "If the frequency is weekly, which days of the week the Report\
            \ Schedule should run. Values are 0 to 6, representing Sunday to Saturday."
          items:
            format: int32
            type: integer
          title: days_of_week
          type: array
        effective_from:
          description: Date the Report Schedule should be enabled. (Expects an ISO-8601
            date).
          format: date
          title: effective_from
          type: string
        every_no_of_months:
          description: "If the frequency is monthly, how many months between each\
            \ run of the Report Schedule."
          format: int32
          title: every_no_of_months
          type: integer
        frequency:
          description: How often to run the Report Schedule.
          enum:
          - daily
          - weekly
          - monthly
          title: frequency
          type: string
        report_preset_id:
          description: What Report Preset the Report Schedule should use to generate
            a report.
          format: int64
          title: report_preset_id
          type: integer
        time_of_day:
          description: "What time the Report Schedule should run. Although the entire\
            \ datetime is sent, only the time information is used."
          format: date-time
          title: time_of_day
          type: string
        time_zone:
          description: Used in conjunction with `time_of_day` to determine when the
            Report Schedule should be run.
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Asmera
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Timbuktu
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/ComodRivadavia
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Atka
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Buenos_Aires
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Catamarca
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Ciudad_Juarez
          - America/Coral_Harbour
          - America/Cordoba
          - America/Costa_Rica
          - America/Coyhaique
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Ensenada
          - America/Fort_Nelson
          - America/Fort_Wayne
          - America/Fortaleza
          - America/Glace_Bay
          - America/Godthab
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Indianapolis
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Jujuy
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Knox_IN
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Louisville
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Mendoza
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montreal
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nipigon
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Pangnirtung
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Acre
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rainy_River
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Rosario
          - America/Santa_Isabel
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Shiprock
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Thunder_Bay
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Virgin
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/South_Pole
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Ashkhabad
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Calcutta
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Chongqing
          - Asia/Chungking
          - Asia/Colombo
          - Asia/Dacca
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Harbin
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Istanbul
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kashgar
          - Asia/Kathmandu
          - Asia/Katmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macao
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Rangoon
          - Asia/Riyadh
          - Asia/Saigon
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Tel_Aviv
          - Asia/Thimbu
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ujung_Pandang
          - Asia/Ulaanbaatar
          - Asia/Ulan_Bator
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faeroe
          - Atlantic/Faroe
          - Atlantic/Jan_Mayen
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/ACT
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Canberra
          - Australia/Currie
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/LHI
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/NSW
          - Australia/North
          - Australia/Perth
          - Australia/Queensland
          - Australia/South
          - Australia/Sydney
          - Australia/Tasmania
          - Australia/Victoria
          - Australia/West
          - Australia/Yancowinna
          - Brazil/Acre
          - Brazil/DeNoronha
          - Brazil/East
          - Brazil/West
          - CET
          - CST6CDT
          - Canada/Atlantic
          - Canada/Central
          - Canada/Eastern
          - Canada/Mountain
          - Canada/Newfoundland
          - Canada/Pacific
          - Canada/Saskatchewan
          - Canada/Yukon
          - Chile/Continental
          - Chile/EasterIsland
          - Cuba
          - EET
          - EST
          - EST5EDT
          - Egypt
          - Eire
          - Etc/GMT
          - Etc/GMT+0
          - Etc/GMT+1
          - Etc/GMT+10
          - Etc/GMT+11
          - Etc/GMT+12
          - Etc/GMT+2
          - Etc/GMT+3
          - Etc/GMT+4
          - Etc/GMT+5
          - Etc/GMT+6
          - Etc/GMT+7
          - Etc/GMT+8
          - Etc/GMT+9
          - Etc/GMT-0
          - Etc/GMT-1
          - Etc/GMT-10
          - Etc/GMT-11
          - Etc/GMT-12
          - Etc/GMT-13
          - Etc/GMT-14
          - Etc/GMT-2
          - Etc/GMT-3
          - Etc/GMT-4
          - Etc/GMT-5
          - Etc/GMT-6
          - Etc/GMT-7
          - Etc/GMT-8
          - Etc/GMT-9
          - Etc/GMT0
          - Etc/Greenwich
          - Etc/UCT
          - Etc/UTC
          - Etc/Universal
          - Etc/Zulu
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belfast
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kiev
          - Europe/Kirov
          - Europe/Kyiv
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Nicosia
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Tiraspol
          - Europe/Ulyanovsk
          - Europe/Uzhgorod
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zaporozhye
          - Europe/Zurich
          - Factory
          - GB
          - GB-Eire
          - GMT
          - GMT+0
          - GMT-0
          - GMT0
          - Greenwich
          - HST
          - Hongkong
          - Iceland
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Iran
          - Israel
          - Jamaica
          - Japan
          - Kwajalein
          - Libya
          - MET
          - MST
          - MST7MDT
          - Mexico/BajaNorte
          - Mexico/BajaSur
          - Mexico/General
          - NZ
          - NZ-CHAT
          - Navajo
          - PRC
          - PST8PDT
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Enderbury
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Johnston
          - Pacific/Kanton
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Ponape
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Samoa
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Truk
          - Pacific/Wake
          - Pacific/Wallis
          - Pacific/Yap
          - Poland
          - Portugal
          - ROC
          - ROK
          - Singapore
          - Turkey
          - UCT
          - US/Alaska
          - US/Aleutian
          - US/Arizona
          - US/Central
          - US/East-Indiana
          - US/Eastern
          - US/Hawaii
          - US/Indiana-Starke
          - US/Michigan
          - US/Mountain
          - US/Pacific
          - US/Samoa
          - UTC
          - Universal
          - W-SU
          - WET
          - Zulu
          title: time_zone
          type: string
      required:
      - frequency
      - report_preset_id
      - time_of_day
      - time_zone
      title: ReportSchedule_create_request_data
      type: object
    ReportSchedule_create_request:
      properties:
        data:
          $ref: '#/components/schemas/ReportSchedule_create_request_data'
      required:
      - data
      title: ReportSchedule_create_request
      type: object
    ReportSchedule_update_request_data:
      properties:
        day_of_month:
          description: "If the frequency is monthly, which day of the month the Report\
            \ Schedule should run. 32 is used to represent the last day of the month."
          format: int32
          title: day_of_month
          type: integer
        days_of_week:
          description: "If the frequency is weekly, which days of the week the Report\
            \ Schedule should run. Values are 0 to 6, representing Sunday to Saturday."
          items:
            format: int32
            type: integer
          title: days_of_week
          type: array
        effective_from:
          description: Date the Report Schedule should be enabled. (Expects an ISO-8601
            date).
          format: date
          title: effective_from
          type: string
        every_no_of_months:
          description: "If the frequency is monthly, how many months between each\
            \ run of the Report Schedule."
          format: int32
          title: every_no_of_months
          type: integer
        frequency:
          description: How often to run the Report Schedule.
          enum:
          - daily
          - weekly
          - monthly
          title: frequency
          type: string
        report_preset_id:
          description: What Report Preset the Report Schedule should use to generate
            a report.
          format: int64
          title: report_preset_id
          type: integer
        time_of_day:
          description: "What time the Report Schedule should run. Although the entire\
            \ datetime is sent, only the time information is used."
          format: date-time
          title: time_of_day
          type: string
        time_zone:
          description: Used in conjunction with `time_of_day` to determine when the
            Report Schedule should be run.
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Asmera
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Timbuktu
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/ComodRivadavia
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Atka
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Buenos_Aires
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Catamarca
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Ciudad_Juarez
          - America/Coral_Harbour
          - America/Cordoba
          - America/Costa_Rica
          - America/Coyhaique
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Ensenada
          - America/Fort_Nelson
          - America/Fort_Wayne
          - America/Fortaleza
          - America/Glace_Bay
          - America/Godthab
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Indianapolis
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Jujuy
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Knox_IN
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Louisville
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Mendoza
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montreal
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nipigon
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Pangnirtung
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Acre
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rainy_River
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Rosario
          - America/Santa_Isabel
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Shiprock
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Thunder_Bay
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Virgin
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/South_Pole
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Ashkhabad
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Calcutta
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Chongqing
          - Asia/Chungking
          - Asia/Colombo
          - Asia/Dacca
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Harbin
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Istanbul
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kashgar
          - Asia/Kathmandu
          - Asia/Katmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macao
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Rangoon
          - Asia/Riyadh
          - Asia/Saigon
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Tel_Aviv
          - Asia/Thimbu
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ujung_Pandang
          - Asia/Ulaanbaatar
          - Asia/Ulan_Bator
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faeroe
          - Atlantic/Faroe
          - Atlantic/Jan_Mayen
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/ACT
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Canberra
          - Australia/Currie
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/LHI
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/NSW
          - Australia/North
          - Australia/Perth
          - Australia/Queensland
          - Australia/South
          - Australia/Sydney
          - Australia/Tasmania
          - Australia/Victoria
          - Australia/West
          - Australia/Yancowinna
          - Brazil/Acre
          - Brazil/DeNoronha
          - Brazil/East
          - Brazil/West
          - CET
          - CST6CDT
          - Canada/Atlantic
          - Canada/Central
          - Canada/Eastern
          - Canada/Mountain
          - Canada/Newfoundland
          - Canada/Pacific
          - Canada/Saskatchewan
          - Canada/Yukon
          - Chile/Continental
          - Chile/EasterIsland
          - Cuba
          - EET
          - EST
          - EST5EDT
          - Egypt
          - Eire
          - Etc/GMT
          - Etc/GMT+0
          - Etc/GMT+1
          - Etc/GMT+10
          - Etc/GMT+11
          - Etc/GMT+12
          - Etc/GMT+2
          - Etc/GMT+3
          - Etc/GMT+4
          - Etc/GMT+5
          - Etc/GMT+6
          - Etc/GMT+7
          - Etc/GMT+8
          - Etc/GMT+9
          - Etc/GMT-0
          - Etc/GMT-1
          - Etc/GMT-10
          - Etc/GMT-11
          - Etc/GMT-12
          - Etc/GMT-13
          - Etc/GMT-14
          - Etc/GMT-2
          - Etc/GMT-3
          - Etc/GMT-4
          - Etc/GMT-5
          - Etc/GMT-6
          - Etc/GMT-7
          - Etc/GMT-8
          - Etc/GMT-9
          - Etc/GMT0
          - Etc/Greenwich
          - Etc/UCT
          - Etc/UTC
          - Etc/Universal
          - Etc/Zulu
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belfast
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kiev
          - Europe/Kirov
          - Europe/Kyiv
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Nicosia
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Tiraspol
          - Europe/Ulyanovsk
          - Europe/Uzhgorod
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zaporozhye
          - Europe/Zurich
          - Factory
          - GB
          - GB-Eire
          - GMT
          - GMT+0
          - GMT-0
          - GMT0
          - Greenwich
          - HST
          - Hongkong
          - Iceland
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Iran
          - Israel
          - Jamaica
          - Japan
          - Kwajalein
          - Libya
          - MET
          - MST
          - MST7MDT
          - Mexico/BajaNorte
          - Mexico/BajaSur
          - Mexico/General
          - NZ
          - NZ-CHAT
          - Navajo
          - PRC
          - PST8PDT
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Enderbury
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Johnston
          - Pacific/Kanton
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Ponape
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Samoa
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Truk
          - Pacific/Wake
          - Pacific/Wallis
          - Pacific/Yap
          - Poland
          - Portugal
          - ROC
          - ROK
          - Singapore
          - Turkey
          - UCT
          - US/Alaska
          - US/Aleutian
          - US/Arizona
          - US/Central
          - US/East-Indiana
          - US/Eastern
          - US/Hawaii
          - US/Indiana-Starke
          - US/Michigan
          - US/Mountain
          - US/Pacific
          - US/Samoa
          - UTC
          - Universal
          - W-SU
          - WET
          - Zulu
          title: time_zone
          type: string
      title: ReportSchedule_update_request_data
      type: object
    ReportSchedule_update_request:
      properties:
        data:
          $ref: '#/components/schemas/ReportSchedule_update_request_data'
      required:
      - data
      title: ReportSchedule_update_request
      type: object
    TextSnippet_create_request_data:
      properties:
        phrase:
          description: The phrase expanded to from a TextSnippet.
          title: phrase
          type: string
        snippet:
          description: The abbreviation that expands to a phrase.
          title: snippet
          type: string
        whole_word:
          description: Whether or not the TextSnippet requires a space after to trigger
            the expansion.
          title: whole_word
          type: boolean
      required:
      - phrase
      - snippet
      title: TextSnippet_create_request_data
      type: object
    TextSnippet_create_request:
      properties:
        data:
          $ref: '#/components/schemas/TextSnippet_create_request_data'
      required:
      - data
      title: TextSnippet_create_request
      type: object
    TextSnippet_update_request_data:
      properties:
        phrase:
          description: The phrase expanded to from a TextSnippet.
          title: phrase
          type: string
        snippet:
          description: The abbreviation that expands to a phrase.
          title: snippet
          type: string
        whole_word:
          description: Whether or not the TextSnippet requires a space after to trigger
            the expansion.
          title: whole_word
          type: boolean
      title: TextSnippet_update_request_data
      type: object
    TextSnippet_update_request:
      properties:
        data:
          $ref: '#/components/schemas/TextSnippet_update_request_data'
      required:
      - data
      title: TextSnippet_update_request
      type: object
    Task_create_request_data_assignee:
      properties:
        id:
          description: The unique identifier for a single User or Contact associated
            with the Task. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        type:
          description: Model type of the assignee.
          enum:
          - User
          - Contact
          title: type
          type: string
      required:
      - id
      - type
      title: Task_create_request_data_assignee
      type: object
    Task_create_request_data_matter:
      properties:
        id:
          description: The unique identifier for a single Matter associated with the
            Task. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Task_create_request_data_matter
      type: object
    Task_create_request_data_task_type:
      properties:
        id:
          description: The unique identifier for a single TaskType associated with
            the Task. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: Task_create_request_data_task_type
      type: object
    Task_create_request_data:
      properties:
        assignee:
          $ref: '#/components/schemas/Task_create_request_data_assignee'
        cascading:
          description: "Determines if the Task has a due date that is derived from\
            \ another Task. (Note that if false, no other cascading information will\
            \ be checked)"
          title: cascading
          type: boolean
        cascading_offset:
          description: The amount of time that will differentiate the cascaded Task
            from its parent.
          format: int32
          title: cascading_offset
          type: integer
        cascading_offset_polarity:
          description: Determines whether or not the cascading_offset occurs before
            or after its parent.
          enum:
          - CalendarDays
          - CalendarWeeks
          - CalendarMonths
          - CalendarYears
          - BusinessDays
          title: cascading_offset_polarity
          type: string
        cascading_offset_type:
          description: "Determines the quantity of the cascading offset (e.g. CalendarDays,\
            \ CalendarWeeks etc.)"
          enum:
          - Before
          - After
          title: cascading_offset_type
          type: string
        cascading_source:
          description: The parent Task that is used to determine the due_at property
            of the cascaded Task
          format: int32
          title: cascading_source
          type: integer
        description:
          description: "Longer description of the Task. This Task supports rich text\
            \ when the `description_text_type` field is set to `rich_text`. With supported\
            \ tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`,\
            \ `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Task also supports\
            \ attributes such as `href`, `rel`, `type`, and `target`."
          title: description
          type: string
        description_text_type:
          default: plain_text
          description: The type of text in the description field.
          enum:
          - plain_text
          - rich_text
          title: description_text_type
          type: string
        due_at:
          description: Date when the Task must be completed by. (Expects an ISO-8601
            date).
          format: date-time
          title: due_at
          type: string
        matter:
          $ref: '#/components/schemas/Task_create_request_data_matter'
        name:
          description: Name of the Task.
          title: name
          type: string
        notify_assignee:
          description: Whether or not the Task should notify the assignee on creation.
          title: notify_assignee
          type: boolean
        notify_completion:
          description: Whether or not the Task should notify the assigner on completion.
          title: notify_completion
          type: boolean
        permission:
          default: public
          description: Permission of the Task. Defaults to `public`
          enum:
          - private
          - public
          title: permission
          type: string
        priority:
          default: Normal
          description: Priority of the Task.
          enum:
          - High
          - Normal
          - Low
          title: priority
          type: string
        status:
          default: pending
          description: Task status. Users without advanced tasks are allowed to select
            `Complete` or `Pending` only.
          enum:
          - pending
          - in_progress
          - in_review
          - complete
          title: status
          type: string
        statute_of_limitations:
          description: Whether or not the Task should be a statute of limitations.
          title: statute_of_limitations
          type: boolean
        task_type:
          $ref: '#/components/schemas/Task_create_request_data_task_type'
        time_estimated:
          description: Time the Task should take to complete.
          format: int32
          title: time_estimated
          type: integer
      required:
      - assignee
      - description
      - name
      title: Task_create_request_data
      type: object
    Task_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Task_create_request_data'
      required:
      - data
      title: Task_create_request
      type: object
    Task_update_request_data_assignee:
      properties:
        id:
          description: The unique identifier for a single User or Contact associated
            with the Task. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        type:
          description: Model type of the assignee.
          enum:
          - User
          - Contact
          title: type
          type: string
      title: Task_update_request_data_assignee
      type: object
    Task_update_request_data:
      properties:
        assignee:
          $ref: '#/components/schemas/Task_update_request_data_assignee'
        cascading:
          description: "Determines if the Task has a due date that is derived from\
            \ another Task. (Note that if false, no other cascading information will\
            \ be checked)"
          title: cascading
          type: boolean
        cascading_offset:
          description: The amount of time that will differentiate the cascaded Task
            from its parent.
          format: int32
          title: cascading_offset
          type: integer
        cascading_offset_polarity:
          description: Determines whether or not the cascading_offset occurs before
            or after its parent.
          enum:
          - CalendarDays
          - CalendarWeeks
          - CalendarMonths
          - CalendarYears
          - BusinessDays
          title: cascading_offset_polarity
          type: string
        cascading_offset_type:
          description: "Determines the quantity of the cascading offset (e.g. CalendarDays,\
            \ CalendarWeeks etc.)"
          enum:
          - Before
          - After
          title: cascading_offset_type
          type: string
        cascading_source:
          description: The parent Task that is used to determine the due_at property
            of the cascaded Task
          format: int32
          title: cascading_source
          type: integer
        description:
          description: "Longer description of the Task. This Task supports rich text\
            \ when the `description_text_type` field is set to `rich_text`. With supported\
            \ tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`,\
            \ `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Task also supports\
            \ attributes such as `href`, `rel`, `type`, and `target`."
          title: description
          type: string
        description_text_type:
          default: plain_text
          description: The type of text in the description field.
          enum:
          - plain_text
          - rich_text
          title: description_text_type
          type: string
        due_at:
          description: Date when the Task must be completed by. (Expects an ISO-8601
            date).
          format: date-time
          title: due_at
          type: string
        matter:
          $ref: '#/components/schemas/Task_create_request_data_matter'
        name:
          description: Name of the Task.
          title: name
          type: string
        notify_assignee:
          description: Whether or not the Task should notify the assignee on creation.
          title: notify_assignee
          type: boolean
        notify_completion:
          description: Whether or not the Task should notify the assigner on completion.
          title: notify_completion
          type: boolean
        permission:
          default: public
          description: Permission of the Task. Defaults to `public`
          enum:
          - private
          - public
          title: permission
          type: string
        priority:
          default: Normal
          description: Priority of the Task.
          enum:
          - High
          - Normal
          - Low
          title: priority
          type: string
        status:
          default: pending
          description: Task status. Users without advanced tasks are allowed to select
            `Complete` or `Pending` only.
          enum:
          - pending
          - in_progress
          - in_review
          - complete
          title: status
          type: string
        task_type:
          $ref: '#/components/schemas/Task_create_request_data_task_type'
        time_estimated:
          description: Time the Task should take to complete.
          format: int32
          title: time_estimated
          type: integer
      title: Task_update_request_data
      type: object
    Task_update_request:
      properties:
        data:
          $ref: '#/components/schemas/Task_update_request_data'
      required:
      - data
      title: Task_update_request
      type: object
    CalendarVisibility_update_request_data:
      properties:
        color:
          description: Calendar color as seen in the Clio Web UI.
          enum:
          - '#367B9C'
          - '#FFA5A4'
          - '#83D17F'
          - '#FFAC7B'
          - '#8E3F64'
          - '#C75300'
          - '#009CEC'
          - '#62D6B1'
          - '#9EEDCB'
          - '#F9A2C4'
          - '#616161'
          - '#BBDA81'
          - '#DFD3F8'
          - '#D6C4A5'
          - '#FFD478'
          - '#6AC9DE'
          - '#EABBB0'
          - '#BFC2E1'
          - '#DADADA'
          - '#CDE2F5'
          title: color
          type: string
        visible:
          description: Whether or not the CalendarVisibility should be visible by
            default in the Clio Web UI.
          title: visible
          type: string
      title: CalendarVisibility_update_request_data
      type: object
    CalendarVisibility_update_request:
      properties:
        data:
          $ref: '#/components/schemas/CalendarVisibility_update_request_data'
      required:
      - data
      title: CalendarVisibility_update_request
      type: object
    TaskTemplate_create_request_data_cascading_source:
      properties:
        id:
          description: The unique identifier for a single TaskTemplate associated
            with the TaskTemplate. The keyword `null` is not valid for this field.
          format: int32
          title: id
          type: integer
      title: TaskTemplate_create_request_data_cascading_source
      type: object
    TaskTemplate_create_request_data_reminder_templates_inner:
      properties:
        duration_value:
          description: Time measured in `duration_unit` to remind user before the
            subject.
          format: int32
          title: duration_value
          type: integer
        duration_unit:
          description: Unit to measure the duration value in.
          title: duration_unit
          type: string
        notification_type:
          description: Notification method.
          enum:
          - Email
          - Popup
          title: notification_type
          type: string
      required:
      - duration_unit
      - duration_value
      - notification_type
      title: TaskTemplate_create_request_data_reminder_templates_inner
      type: object
    TaskTemplate_create_request_data_task_template_list:
      properties:
        id:
          description: The unique identifier for a single TaskTemplateList associated
            with the TaskTemplate. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: TaskTemplate_create_request_data_task_template_list
      type: object
    TaskTemplate_create_request_data:
      properties:
        cascading:
          description: "Determines if the TaskTemplate has a due date that is derived\
            \ from another TaskTemplate. (Note that if false, no other cascading information\
            \ will be checked)"
          title: cascading
          type: boolean
        cascading_offset:
          description: The amount of time that will differentiate the cascaded TaskTemplate
            from its parent.
          format: int32
          title: cascading_offset
          type: integer
        cascading_offset_polarity:
          description: Determines whether or not the cascading_offset occurs before
            or after its parent.
          enum:
          - Before
          - After
          title: cascading_offset_polarity
          type: string
        cascading_offset_type:
          description: "Determines the quantity of the cascading offset (e.g. CalendarDays,\
            \ CalendarWeeks etc.)"
          enum:
          - CalendarDays
          - CalendarWeeks
          - CalendarMonths
          - CalendarYears
          - BusinessDays
          title: cascading_offset_type
          type: string
        cascading_source:
          $ref: '#/components/schemas/TaskTemplate_create_request_data_cascading_source'
        description:
          description: "Longer description of the TaskTemplate. This TaskTemplate\
            \ supports rich text when the `description_text_type` field is set to\
            \ `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`,\
            \ `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`.\
            \ This TaskTemplate also supports attributes such as `href`, `rel`, `type`,\
            \ and `target`."
          title: description
          type: string
        description_text_type:
          default: plain_text
          description: The type of text in the description field.
          enum:
          - plain_text
          - rich_text
          title: description_text_type
          type: string
        name:
          description: Short name for the TaskTemplate.
          title: name
          type: string
        priority:
          default: Normal
          description: Priority of the task.
          enum:
          - High
          - Normal
          - Low
          title: priority
          type: string
        private:
          description: Whether or not this TaskTemplate should be private.
          title: private
          type: boolean
        reminder_templates:
          items:
            $ref: '#/components/schemas/TaskTemplate_create_request_data_reminder_templates_inner'
          title: reminder_templates
          type: array
        task_template_list:
          $ref: '#/components/schemas/TaskTemplate_create_request_data_task_template_list'
      required:
      - name
      title: TaskTemplate_create_request_data
      type: object
    TaskTemplate_create_request:
      properties:
        data:
          $ref: '#/components/schemas/TaskTemplate_create_request_data'
      required:
      - data
      title: TaskTemplate_create_request
      type: object
    TaskTemplate_update_request_data_reminder_templates_inner:
      properties:
        duration_value:
          description: Time measured in `duration_unit` to remind user before the
            subject.
          format: int32
          title: duration_value
          type: integer
        duration_unit:
          description: Unit to measure the duration value in.
          title: duration_unit
          type: string
        notification_type:
          description: Notification method.
          enum:
          - Email
          - Popup
          title: notification_type
          type: string
        id:
          description: The unique identifier for a single ReminderTemplate associated
            with the TaskTemplate. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated ReminderTemplate is present, the ReminderTemplate\
            \ is deleted from the TaskTemplate."
          title: _destroy
          type: boolean
      title: TaskTemplate_update_request_data_reminder_templates_inner
      type: object
    TaskTemplate_update_request_data:
      properties:
        cascading:
          description: "Determines if the TaskTemplate has a due date that is derived\
            \ from another TaskTemplate. (Note that if false, no other cascading information\
            \ will be checked)"
          title: cascading
          type: boolean
        cascading_offset:
          description: The amount of time that will differentiate the cascaded TaskTemplate
            from its parent.
          format: int32
          title: cascading_offset
          type: integer
        cascading_offset_polarity:
          description: Determines whether or not the cascading_offset occurs before
            or after its parent.
          enum:
          - Before
          - After
          title: cascading_offset_polarity
          type: string
        cascading_offset_type:
          description: "Determines the quantity of the cascading offset (e.g. CalendarDays,\
            \ CalendarWeeks etc.)"
          enum:
          - CalendarDays
          - CalendarWeeks
          - CalendarMonths
          - CalendarYears
          - BusinessDays
          title: cascading_offset_type
          type: string
        cascading_source:
          $ref: '#/components/schemas/TaskTemplate_create_request_data_cascading_source'
        description:
          description: "Longer description of the TaskTemplate. This TaskTemplate\
            \ supports rich text when the `description_text_type` field is set to\
            \ `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`,\
            \ `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`.\
            \ This TaskTemplate also supports attributes such as `href`, `rel`, `type`,\
            \ and `target`."
          title: description
          type: string
        description_text_type:
          default: plain_text
          description: The type of text in the description field.
          enum:
          - plain_text
          - rich_text
          title: description_text_type
          type: string
        name:
          description: Short name for the TaskTemplate.
          title: name
          type: string
        priority:
          default: Normal
          description: Priority of the task.
          enum:
          - High
          - Normal
          - Low
          title: priority
          type: string
        private:
          description: Whether or not this TaskTemplate should be private.
          title: private
          type: boolean
        reminder_templates:
          items:
            $ref: '#/components/schemas/TaskTemplate_update_request_data_reminder_templates_inner'
          title: reminder_templates
          type: array
      title: TaskTemplate_update_request_data
      type: object
    TaskTemplate_update_request:
      properties:
        data:
          $ref: '#/components/schemas/TaskTemplate_update_request_data'
      required:
      - data
      title: TaskTemplate_update_request
      type: object
    TaskTemplateList_copy_request_data_practice_area:
      properties:
        id:
          description: The unique identifier for the practice area of the TaskTemplateList
            copy.
          format: int64
          title: id
          type: integer
      title: TaskTemplateList_copy_request_data_practice_area
      type: object
    TaskTemplateList_copy_request_data:
      properties:
        description:
          description: The description of the TaskTemplateList copy.
          title: description
          type: string
        name:
          description: The name of the TaskTemplateList copy.
          title: name
          type: string
        practice_area:
          $ref: '#/components/schemas/TaskTemplateList_copy_request_data_practice_area'
      title: TaskTemplateList_copy_request_data
      type: object
    TaskTemplateList_copy_request:
      properties:
        data:
          $ref: '#/components/schemas/TaskTemplateList_copy_request_data'
      required:
      - data
      title: TaskTemplateList_copy_request
      type: object
    TaskTemplateList_create_request_data_practice_area:
      properties:
        id:
          description: The unique identifier for a single PracticeArea associated
            with the TaskTemplateList. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: TaskTemplateList_create_request_data_practice_area
      type: object
    TaskTemplateList_create_request_data:
      properties:
        description:
          description: Description of the TaskTemplateList.
          title: description
          type: string
        name:
          description: Name of the TaskTemplateList.
          title: name
          type: string
        practice_area:
          $ref: '#/components/schemas/TaskTemplateList_create_request_data_practice_area'
      required:
      - description
      - name
      title: TaskTemplateList_create_request_data
      type: object
    TaskTemplateList_create_request:
      properties:
        data:
          $ref: '#/components/schemas/TaskTemplateList_create_request_data'
      required:
      - data
      title: TaskTemplateList_create_request
      type: object
    TaskTemplateList_update_request_data:
      properties:
        description:
          description: Description of the TaskTemplateList.
          title: description
          type: string
        name:
          description: Name of the TaskTemplateList.
          title: name
          type: string
        practice_area:
          $ref: '#/components/schemas/TaskTemplateList_create_request_data_practice_area'
      title: TaskTemplateList_update_request_data
      type: object
    TaskTemplateList_update_request:
      properties:
        data:
          $ref: '#/components/schemas/TaskTemplateList_update_request_data'
      required:
      - data
      title: TaskTemplateList_update_request
      type: object
    TaskType_create_request_data:
      properties:
        deleted_at:
          description: Date the TaskType was disabled. (Expects an ISO-8601 timestamp).
          format: date
          title: deleted_at
          type: string
        name:
          description: Name of the TaskType.
          title: name
          type: string
      required:
      - name
      title: TaskType_create_request_data
      type: object
    TaskType_create_request:
      properties:
        data:
          $ref: '#/components/schemas/TaskType_create_request_data'
      required:
      - data
      title: TaskType_create_request
      type: object
    TaskType_update_request_data:
      properties:
        deleted_at:
          description: Date the TaskType was disabled. (Expects an ISO-8601 timestamp).
          format: date
          title: deleted_at
          type: string
        name:
          description: Name of the TaskType.
          title: name
          type: string
      title: TaskType_update_request_data
      type: object
    TaskType_update_request:
      properties:
        data:
          $ref: '#/components/schemas/TaskType_update_request_data'
      required:
      - data
      title: TaskType_update_request
      type: object
    Timer_create_request_data_activity:
      properties:
        id:
          description: The unique identifier for a single Activity associated with
            the Timer. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: Timer_create_request_data_activity
      type: object
    Timer_create_request_data:
      properties:
        activity:
          $ref: '#/components/schemas/Timer_create_request_data_activity'
      required:
      - activity
      title: Timer_create_request_data
      type: object
    Timer_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Timer_create_request_data'
      required:
      - data
      title: Timer_create_request
      type: object
    TrustLineItem_update_request_data:
      properties:
        date:
          description: Date for the TrustLineItem. (Expects an ISO-8601 date).
          format: date
          title: date
          type: string
        note:
          description: Note for the TrustLineItem.
          title: note
          type: string
        total:
          description: Total amount the TrustLineItem is for.
          format: double
          title: total
          type: number
      title: TrustLineItem_update_request_data
      type: object
    TrustLineItem_update_request:
      properties:
        data:
          $ref: '#/components/schemas/TrustLineItem_update_request_data'
      required:
      - data
      title: TrustLineItem_update_request
      type: object
    TrustRequest_create_request_data_matter_inner:
      properties:
        id:
          description: The matter id associated to the TrustRequest
          format: int64
          title: id
          type: integer
        trust_amount:
          description: The matter level TrustRequest's amount
          format: int32
          title: trust_amount
          type: integer
        note:
          description: The client level TrustRequest note
          title: note
          type: string
      title: TrustRequest_create_request_data_matter_inner
      type: object
    TrustRequest_create_request_data:
      properties:
        approved:
          description: Whether or not the TrustRequest should be automatically approved.
          title: approved
          type: boolean
        client_id:
          description: The client_id associated to the TrustRequest
          format: int64
          title: client_id
          type: integer
        currency_id:
          description: The currency_id associated to the TrustRequest
          format: int64
          title: currency_id
          type: integer
        due_date:
          description: The date the TrustRequest is due (Expects an ISO-8601 date).
          format: date
          title: due_date
          type: string
        issue_date:
          description: The date the TrustRequest is issued (Expects an ISO-8601 date).
          format: date
          title: issue_date
          type: string
        matter:
          items:
            $ref: '#/components/schemas/TrustRequest_create_request_data_matter_inner'
          title: matter
          type: array
        note:
          description: The client level TrustRequest note
          title: note
          type: string
        trust_amount:
          description: The TrustRequest's amount
          format: double
          title: trust_amount
          type: number
        trust_type:
          description: The type of TrustRequest
          enum:
          - client
          - matter
          title: trust_type
          type: string
      required:
      - approved
      - client_id
      - due_date
      - issue_date
      - trust_amount
      - trust_type
      title: TrustRequest_create_request_data
      type: object
    TrustRequest_create_request:
      properties:
        data:
          $ref: '#/components/schemas/TrustRequest_create_request_data'
      required:
      - data
      title: TrustRequest_create_request
      type: object
    Webhook_create_request_data:
      properties:
        events:
          description: The events your webhook is subscribed to.
          items:
            enum:
            - created
            - updated
            - deleted
            - matter_opened
            - matter_pended
            - matter_closed
            type: string
          title: events
          type: array
        expires_at:
          description: The date and time when the Webhook will expire. (Expects an
            ISO-8601 timestamp).
          format: date-time
          title: expires_at
          type: string
        fields:
          description: Fields to be included in the Webhook request.
          title: fields
          type: string
        model:
          description: "What model the Webhook is for. This field accepts either [the\
            \ string identifier of the model or its ID](#section/Supported-Models)"
          enum:
          - activity
          - bill
          - calendar_entry
          - clio_payments_payment
          - communication
          - contact
          - document
          - folder
          - matter
          - task
          title: model
          type: string
        url:
          description: The URL of where to POST the Webhook. Note that only URLs using
            the `https` protocol will be accepted.
          title: url
          type: string
      required:
      - fields
      - model
      - url
      title: Webhook_create_request_data
      type: object
    Webhook_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Webhook_create_request_data'
      required:
      - data
      title: Webhook_create_request
      type: object
    Webhook_update_request_data:
      properties:
        events:
          description: The events your webhook is subscribed to.
          items:
            enum:
            - created
            - updated
            - deleted
            - matter_opened
            - matter_pended
            - matter_closed
            type: string
          title: events
          type: array
        expires_at:
          description: The date and time when the Webhook will expire. (Expects an
            ISO-8601 timestamp).
          format: date-time
          title: expires_at
          type: string
        fields:
          description: Fields to be included in the Webhook request.
          title: fields
          type: string
        model:
          description: "What model the Webhook is for. This field accepts either [the\
            \ string identifier of the model or its ID](#section/Supported-Models)"
          enum:
          - activity
          - bill
          - calendar_entry
          - clio_payments_payment
          - communication
          - contact
          - document
          - folder
          - matter
          - task
          title: model
          type: string
        url:
          description: The URL of where to POST the Webhook. Note that only URLs using
            the `https` protocol will be accepted.
          title: url
          type: string
      title: Webhook_update_request_data
      type: object
    Webhook_update_request:
      properties:
        data:
          $ref: '#/components/schemas/Webhook_update_request_data'
      required:
      - data
      title: Webhook_update_request
      type: object
    Comment_create_request_data_item:
      properties:
        id:
          description: The unique identifier of the Document or Folder to which the
            Comment is associated.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: Comment_create_request_data_item
      type: object
    Comment_create_request_data:
      properties:
        item:
          $ref: '#/components/schemas/Comment_create_request_data_item'
        message:
          description: The content of the Comment.
          title: message
          type: string
      required:
      - item
      - message
      title: Comment_create_request_data
      type: object
    Comment_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Comment_create_request_data'
      required:
      - data
      title: Comment_create_request
      type: object
    Comment_update_request_data_item:
      properties:
        id:
          description: The unique identifier of the Document or Folder to which the
            Comment is associated.
          format: int64
          title: id
          type: integer
      title: Comment_update_request_data_item
      type: object
    Comment_update_request_data:
      properties:
        item:
          $ref: '#/components/schemas/Comment_update_request_data_item'
        message:
          description: The content of the Comment.
          title: message
          type: string
      title: Comment_update_request_data
      type: object
    Comment_update_request:
      properties:
        data:
          $ref: '#/components/schemas/Comment_update_request_data'
      required:
      - data
      title: Comment_update_request
      type: object
    DocumentArchive_create_request_data_items_inner:
      properties:
        id:
          description: The unique identifier for a single Document or Folder associated
            with the DocumentArchive. Use the keyword `null` to specify no association.
          format: int64
          title: id
          type: integer
        type:
          description: The type of the item to download
          format: int32
          title: type
          type: integer
      required:
      - id
      - type
      title: DocumentArchive_create_request_data_items_inner
      type: object
    DocumentArchive_create_request_data:
      properties:
        items:
          items:
            $ref: '#/components/schemas/DocumentArchive_create_request_data_items_inner'
          title: items
          type: array
      required:
      - items
      title: DocumentArchive_create_request_data
      type: object
    DocumentArchive_create_request:
      properties:
        data:
          $ref: '#/components/schemas/DocumentArchive_create_request_data'
      required:
      - data
      title: DocumentArchive_create_request
      type: object
    Document_copy_request_data_document_category:
      properties:
        id:
          description: The unique identifier for a single DocumentCategory associated
            with the Document. Use the keyword `null` to specify no association.
          format: int64
          title: id
          type: integer
      title: Document_copy_request_data_document_category
      type: object
    Document_copy_request_data_external_properties_inner:
      properties:
        id:
          description: The unique identifier for a single ExternalProperty associated
            with the Document. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        name:
          description: "The ExternalProperty name. Note: **there is a limit of 5 external_properties\
            \ per Document**"
          title: name
          type: string
        value:
          description: The ExternalProperty value.
          title: value
          type: string
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated ExternalProperty is present, the ExternalProperty\
            \ is deleted from the Document."
          title: _destroy
          type: boolean
      title: Document_copy_request_data_external_properties_inner
      type: object
    Document_copy_request_data_parent:
      properties:
        id:
          description: The unique identifier of the parent object.
          format: int64
          title: id
          type: integer
        type:
          description: |
            Type of parent object:
            * "Document" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.
            * "Folder" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.
            * "Contact" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.
            * "Matter" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.
          enum:
          - Document
          - Folder
          - Contact
          - Matter
          title: type
          type: string
      required:
      - id
      - type
      title: Document_copy_request_data_parent
      type: object
    Document_copy_request_data:
      properties:
        communication_id:
          description: Related communication record.
          format: int64
          title: communication_id
          type: integer
        document_category:
          $ref: '#/components/schemas/Document_copy_request_data_document_category'
        external_properties:
          items:
            $ref: '#/components/schemas/Document_copy_request_data_external_properties_inner'
          title: external_properties
          type: array
        filename:
          default: name
          description: Name of the original file.
          title: filename
          type: string
        name:
          description: Document name.
          title: name
          type: string
        parent:
          $ref: '#/components/schemas/Document_copy_request_data_parent'
        received_at:
          description: Date and time the document was received (Expects an ISO-8601
            timestamp).
          format: date-time
          title: received_at
          type: string
      required:
      - parent
      title: Document_copy_request_data
      type: object
    Document_copy_request:
      properties:
        data:
          $ref: '#/components/schemas/Document_copy_request_data'
      required:
      - data
      title: Document_copy_request
      type: object
    Document_create_request_data_external_properties_inner:
      properties:
        name:
          description: "The ExternalProperty name. Note: **there is a limit of 5 external_properties\
            \ per Document**"
          title: name
          type: string
        value:
          description: The ExternalProperty value.
          title: value
          type: string
      title: Document_create_request_data_external_properties_inner
      type: object
    Document_create_request_data_multiparts_inner:
      properties:
        part_number:
          description: |
            The part number of multipart upload. It must be an integer between 1 to 10,000, inclusive.

            Multipart upload supports upload a single file as a set of parts.
            Each part is a contiguous portion of the data.
            A `part_number` uniquely identifies a part and also defines its position within the document being uploaded.
            Each part must be at least 5 MB in size, except the last part.
            There is no minimum size limit on the last part.

            The URLs of multipart upload are returned in the field, `put_url`, with the corresponding `multipart`

            The API handles maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts,
            make a PUT request with `fully_uploaded` equal to `false`, and another set of part numbers.
          format: int32
          title: part_number
          type: integer
        content_length:
          description: The size of the part of the upload file in bytes.
          title: content_length
          type: string
        content_md5:
          description: "The base64-encoded 128-bit MD5 digest of the part data. This\
            \ header can be used as a message integrity check to verify that the part\
            \ data is the same data that was originally sent. Although it is optional,\
            \ we recommend using the Content-MD5 mechanism as an end-to-end integrity\
            \ check."
          title: content_md5
          type: string
      required:
      - content_length
      - part_number
      title: Document_create_request_data_multiparts_inner
      type: object
    Document_create_request_data:
      properties:
        communication_id:
          description: Related communication record.
          format: int64
          title: communication_id
          type: integer
        content_type:
          description: "A standard MIME type describing the format of the object data.\
            \ If the field is not specified, it is determined by the file extension."
          title: content_type
          type: string
        document_category:
          $ref: '#/components/schemas/Document_copy_request_data_document_category'
        external_properties:
          items:
            $ref: '#/components/schemas/Document_create_request_data_external_properties_inner'
          title: external_properties
          type: array
        filename:
          default: name
          description: Name of the original file.
          title: filename
          type: string
        multiparts:
          items:
            $ref: '#/components/schemas/Document_create_request_data_multiparts_inner'
          title: multiparts
          type: array
        name:
          description: Document name.
          title: name
          type: string
        parent:
          $ref: '#/components/schemas/Document_copy_request_data_parent'
        received_at:
          description: Date and time the document was received (Expects an ISO-8601
            timestamp).
          format: date-time
          title: received_at
          type: string
      required:
      - name
      - parent
      title: Document_create_request_data
      type: object
    Document_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Document_create_request_data'
      required:
      - data
      title: Document_create_request
      type: object
    Document_update_request_data_multiparts_inner:
      properties:
        part_number:
          description: |
            The part number of multipart upload. It must be an integer between 1 to 10,000, inclusive.

            Multipart upload supports upload a single file as a set of parts.
            Each part is a contiguous portion of the data.
            A `part_number` uniquely identifies a part and also defines its position within the document being uploaded.
            Each part must be at least 5 MB in size, except the last part.
            There is no minimum size limit on the last part.

            The URLs of multipart upload are returned in the field, `put_url`, with the corresponding `multipart`

            The API handles maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts,
            make a PUT request with `fully_uploaded` equal to `false`, and another set of part numbers.
          format: int32
          title: part_number
          type: integer
        content_length:
          description: The size of the part of the upload file in bytes.
          title: content_length
          type: string
        content_md5:
          description: "The base64-encoded 128-bit MD5 digest of the part data. This\
            \ header can be used as a message integrity check to verify that the part\
            \ data is the same data that was originally sent. Although it is optional,\
            \ we recommend using the Content-MD5 mechanism as an end-to-end integrity\
            \ check."
          title: content_md5
          type: string
      title: Document_update_request_data_multiparts_inner
      type: object
    Document_update_request_data_parent:
      properties:
        id:
          description: The unique identifier of the parent object.
          format: int64
          title: id
          type: integer
        type:
          description: |
            Type of parent object:
            * "Document" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.
            * "Folder" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.
            * "Contact" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.
            * "Matter" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.
          enum:
          - Document
          - Folder
          - Contact
          - Matter
          title: type
          type: string
      title: Document_update_request_data_parent
      type: object
    Document_update_request_data:
      properties:
        communication_id:
          description: Related communication record.
          format: int64
          title: communication_id
          type: integer
        copy_version:
          description: "Indicates whether to create a new version with the updated\
            \ filename on rename. This is intended to handle cases where the document\
            \ extension has been changed; if the document extension has not changed,\
            \ no new version will be created."
          title: copy_version
          type: boolean
        document_category:
          $ref: '#/components/schemas/Document_copy_request_data_document_category'
        external_properties:
          items:
            $ref: '#/components/schemas/Document_copy_request_data_external_properties_inner'
          title: external_properties
          type: array
        fully_uploaded:
          description: |
            Indicates whether document is uploaded.

            When marking the document fully uploaded, it arises errors when:
            * The file is not successfully uploaded.
            * Not all the file parts are uploaded.
            * The document is already marked as fully uploaded.
          title: fully_uploaded
          type: boolean
        multiparts:
          items:
            $ref: '#/components/schemas/Document_update_request_data_multiparts_inner'
          title: multiparts
          type: array
        name:
          description: Document name.
          title: name
          type: string
        parent:
          $ref: '#/components/schemas/Document_update_request_data_parent'
        received_at:
          description: Date and time the document was received (Expects an ISO-8601
            timestamp).
          format: date-time
          title: received_at
          type: string
        restore:
          description: Whether or not a trashed Document should be restored.
          title: restore
          type: boolean
        uuid:
          description: UUID associated with the document version. UUID is required
            to mark a document fully uploaded.
          title: uuid
          type: string
      title: Document_update_request_data
      type: object
    Document_update_request:
      properties:
        data:
          $ref: '#/components/schemas/Document_update_request_data'
      required:
      - data
      title: Document_update_request
      type: object
    DocumentAutomation_create_request_data_document_template:
      properties:
        id:
          description: The unique identifier for a single DocumentTemplate associated
            with the DocumentAutomation. The keyword `null` is not valid for this
            field.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: DocumentAutomation_create_request_data_document_template
      type: object
    DocumentAutomation_create_request_data_matter:
      properties:
        id:
          description: The unique identifier for a single Matter associated with the
            DocumentAutomation. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      required:
      - id
      title: DocumentAutomation_create_request_data_matter
      type: object
    DocumentAutomation_create_request_data:
      properties:
        document_template:
          $ref: '#/components/schemas/DocumentAutomation_create_request_data_document_template'
        filename:
          description: The filename the generated document should have.
          title: filename
          type: string
        formats:
          description: The formats the document should be generated as. It can either
            be generated as a PDF and/or in whatever type the document template is.
          items:
            enum:
            - pdf
            - original
            type: string
          title: formats
          type: array
        matter:
          $ref: '#/components/schemas/DocumentAutomation_create_request_data_matter'
      required:
      - document_template
      - filename
      - formats
      - matter
      title: DocumentAutomation_create_request_data
      type: object
    DocumentAutomation_create_request:
      properties:
        data:
          $ref: '#/components/schemas/DocumentAutomation_create_request_data'
      required:
      - data
      title: DocumentAutomation_create_request
      type: object
    DocumentCategory_create_request_data:
      properties:
        name:
          description: What the DocumentCategory should be called.
          title: name
          type: string
      required:
      - name
      title: DocumentCategory_create_request_data
      type: object
    DocumentCategory_create_request:
      properties:
        data:
          $ref: '#/components/schemas/DocumentCategory_create_request_data'
      required:
      - data
      title: DocumentCategory_create_request
      type: object
    DocumentCategory_update_request_data:
      properties:
        name:
          description: What the DocumentCategory should be called.
          title: name
          type: string
      title: DocumentCategory_update_request_data
      type: object
    DocumentCategory_update_request:
      properties:
        data:
          $ref: '#/components/schemas/DocumentCategory_update_request_data'
      required:
      - data
      title: DocumentCategory_update_request
      type: object
    DocumentTemplate_create_request_data_document_category:
      properties:
        id:
          description: The unique identifier for a single DocumentCategory associated
            with the DocumentTemplate. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
      title: DocumentTemplate_create_request_data_document_category
      type: object
    DocumentTemplate_create_request_data:
      properties:
        document_category:
          $ref: '#/components/schemas/DocumentTemplate_create_request_data_document_category'
        file:
          description: |
            A file that contains the DocumentTemplate. The file can be uploaded through a form as application/x-www-form-urlencoded or multipart/form-data request.
            Alternatively, the file can be converted to a BASE64-encoded string and serialized to JSON.
          title: file
          type: string
        filename:
          description: The name of the file. The field is required when the file is
            BASE64-encoded string.
          title: filename
          type: string
      required:
      - file
      title: DocumentTemplate_create_request_data
      type: object
    DocumentTemplate_create_request:
      properties:
        data:
          $ref: '#/components/schemas/DocumentTemplate_create_request_data'
      required:
      - data
      title: DocumentTemplate_create_request
      type: object
    DocumentTemplate_update_request_data:
      properties:
        document_category:
          $ref: '#/components/schemas/DocumentTemplate_create_request_data_document_category'
        file:
          description: |
            A file that contains the DocumentTemplate. The file can be uploaded through a form as application/x-www-form-urlencoded or multipart/form-data request.
            Alternatively, the file can be converted to a BASE64-encoded string and serialized to JSON.
          title: file
          type: string
        filename:
          description: The name of the file. The field is required when the file is
            BASE64-encoded string.
          title: filename
          type: string
      title: DocumentTemplate_update_request_data
      type: object
    DocumentTemplate_update_request:
      properties:
        data:
          $ref: '#/components/schemas/DocumentTemplate_update_request_data'
      required:
      - data
      title: DocumentTemplate_update_request
      type: object
    Folder_create_request_data_document_category:
      properties:
        id:
          description: The unique identifier for a single DocumentCategory associated
            with the Folder. Use the keyword `null` to specify no association.
          format: int64
          title: id
          type: integer
      title: Folder_create_request_data_document_category
      type: object
    Folder_create_request_data_external_properties_inner:
      properties:
        name:
          description: "The ExternalProperty name. Note: **there is a limit of 5 external_properties\
            \ per Folder**"
          title: name
          type: string
        value:
          description: The ExternalProperty value.
          title: value
          type: string
      title: Folder_create_request_data_external_properties_inner
      type: object
    Folder_create_request_data_parent:
      properties:
        id:
          description: The unique identifier of the parent object.
          format: int64
          title: id
          type: integer
        type:
          description: |
            Type of parent object:
            * "Folder" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.
            * "Contact" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.
            * "Matter" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.
          enum:
          - Folder
          - Contact
          - Matter
          title: type
          type: string
      required:
      - id
      - type
      title: Folder_create_request_data_parent
      type: object
    Folder_create_request_data:
      properties:
        document_category:
          $ref: '#/components/schemas/Folder_create_request_data_document_category'
        external_properties:
          items:
            $ref: '#/components/schemas/Folder_create_request_data_external_properties_inner'
          title: external_properties
          type: array
        name:
          description: Name of the Folder
          title: name
          type: string
        parent:
          $ref: '#/components/schemas/Folder_create_request_data_parent'
        restore:
          description: Whether or not a trashed Folder should be restored.
          title: restore
          type: boolean
      required:
      - name
      - parent
      title: Folder_create_request_data
      type: object
    Folder_create_request:
      properties:
        data:
          $ref: '#/components/schemas/Folder_create_request_data'
      required:
      - data
      title: Folder_create_request
      type: object
    Folder_update_request_data_external_properties_inner:
      properties:
        id:
          description: The unique identifier for a single ExternalProperty associated
            with the Folder. The keyword `null` is not valid for this field.
          format: int64
          title: id
          type: integer
        name:
          description: "The ExternalProperty name. Note: **there is a limit of 5 external_properties\
            \ per Folder**"
          title: name
          type: string
        value:
          description: The ExternalProperty value.
          title: value
          type: string
        _destroy:
          description: "The destroy flag. If the flag is set to `true` and the unique\
            \ identifier of the associated ExternalProperty is present, the ExternalProperty\
            \ is deleted from the Folder."
          title: _destroy
          type: boolean
      title: Folder_update_request_data_external_properties_inner
      type: object
    Folder_update_request_data_parent:
      properties:
        id:
          description: The unique identifier of the parent object.
          format: int64
          title: id
          type: integer
        type:
          description: |
            Type of parent object:
            * "Folder" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.
            * "Contact" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.
            * "Matter" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.
          enum:
          - Folder
          - Contact
          - Matter
          title: type
          type: string
      title: Folder_update_request_data_parent
      type: object
    Folder_update_request_data:
      properties:
        document_category:
          $ref: '#/components/schemas/Folder_create_request_data_document_category'
        external_properties:
          items:
            $ref: '#/components/schemas/Folder_update_request_data_external_properties_inner'
          title: external_properties
          type: array
        name:
          description: Name of the Folder
          title: name
          type: string
        parent:
          $ref: '#/components/schemas/Folder_update_request_data_parent'
        restore:
          description: Whether or not a trashed Folder should be restored.
          title: restore
          type: boolean
      title: Folder_update_request_data
      type: object
    Folder_update_request:
      properties:
        data:
          $ref: '#/components/schemas/Folder_update_request_data'
      required:
      - data
      title: Folder_update_request
      type: object
x-tagGroups:
- name: Api
  tags:
  - Custom Actions
  - Webhooks
- name: Activities
  tags:
  - Activities
  - Activity Descriptions
  - Activity Rates
  - Expense Categories
  - Timers
  - Utbms Codes
  - Utbms Sets
- name: Accounting
  tags:
  - Bank Accounts
  - Bank Transactions
  - Bank Transfers
- name: Billing
  tags:
  - Bills
  - Billable Clients
  - Billable Matters
  - Bill Themes
  - Interest Charges
  - Line Items
  - Outstanding Client Balances
- name: Calendars
  tags:
  - Calendars
  - Calendar Entries
  - Calendar Entry Event Types
  - Calendar Visibilities
  - Reminders
- name: Clio Payments
  tags:
  - Clio Payments Links
  - Clio Payments Payments
- name: Communications
  tags:
  - Communications
  - Conversations
  - Conversation Messages
- name: Contacts
  tags:
  - Contacts
  - Email Addresses
  - Phone Numbers
  - Notes
  - Log Entries
- name: Court Rules
  tags:
  - Jurisdictions To Triggers
  - Jurisdictions
  - Matter Dockets
  - Service Types
- name: Custom Fields
  tags:
  - Custom Fields
  - Custom Field Sets
- name: Documents
  tags:
  - Documents
  - Document Versions
  - Folders
  - Document Archives
  - Document Automations
  - Document Categories
  - Document Templates
  - Comments
- name: In-app Notifications
  tags:
  - My Events
  - Event Metrics
- name: Matters
  tags:
  - Matters
  - Relationships
  - Clients
  - Related Contacts
  - Matter Contacts
  - Notes
  - Practice Areas
  - Log Entries
  - Matter Stages
  - Medical Records Details
  - Medical Records
  - Medical Bills
  - Damages
- name: Payments
  tags:
  - Allocations
  - Credit Memos
- name: Reporting
  tags:
  - Reports
  - Report Presets
  - Report Schedules
- name: Settings
  tags:
  - Text Snippets
  - Billing Settings
  - Currencies
- name: Tasks
  tags:
  - Tasks
  - Task Templates
  - Task Template Lists
  - Task Types
- name: Trust
  tags:
  - Trust Line Items
  - Trust Requests
- name: Users
  tags:
  - Users
  - Groups
- name: Legal Aid US
  tags:
  - Grants
  - Grant Funding Sources
- name: Legal Aid England & Wales
  tags:
  - Civil Controlled Rates
  - Civil Certificated Rates
  - Criminal Controlled Rates
  - Expense Categories
