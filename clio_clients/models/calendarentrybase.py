# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from decimal import Decimal
from enum import Enum
from typing import Any
from typing import Dict
from typing import List
from typing import Optional

from pydantic import BaseModel
from pydantic import Field

class CalendarEntryBase(BaseModel):
    all_day: Optional[bool] = Field(None, description="Whether the event is all day")
    calendar_owner_id: Optional[int] = Field(
        None, description="The id of the calendar owner."
    )
    court_rule: Optional[bool] = Field(
        None, description="Whether this event is associated with a Court Rule"
    )
    created_at: Optional[str] = Field(
        None,
        description="The time the *CalendarEntry* was created (as a ISO-8601 timestamp)",
    )
    description: Optional[str] = Field(
        None, description="A detailed description of the *CalendarEntry*"
    )
    end_at: Optional[str] = Field(
        None, description="The time the *CalendarEntry* ends (as an ISO-8601 timestamp)"
    )
    etag: Optional[str] = Field(None, description="ETag for the *CalendarEntry*")
    id: Optional[str] = Field(
        None, description="Unique identifier for the *CalendarEntry*"
    )
    location: Optional[str] = Field(
        None, description="The geographic location of the *CalendarEntry*"
    )
    parent_calendar_entry_id: Optional[int] = Field(
        None, description="Identifier for the parent *CalendarEntry*"
    )
    permission: Optional[str] = Field(
        None,
        description="The view permission for the current user, will return 'viewer' when permission is 'limited_viewer' and the user is an attendee.",
    )
    recurrence_rule: Optional[str] = Field(
        None, description="Recurrence rule for expanding"
    )
    start_at: Optional[str] = Field(
        None,
        description="The time the *CalendarEntry* starts (as an ISO-8601 timestamp)",
    )
    start_at_time_zone: Optional[str] = Field(
        None, description="Original start at time zone of the event."
    )
    summary: Optional[str] = Field(
        None, description="A short summary of the *CalendarEntry*"
    )
    time_entries_count: Optional[int] = Field(
        None,
        description="The number of `TimeEntry` activities associated with the *CalendarEntry*",
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *CalendarEntry* was last updated (as a ISO-8601 timestamp)",
    )
