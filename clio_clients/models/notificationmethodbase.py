# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from decimal import Decimal
from enum import Enum
from typing import Any
from typing import Dict
from typing import List
from typing import Optional

from pydantic import BaseModel
from pydantic import Field

class NotificationMethodBase(BaseModel):
    created_at: Optional[str] = Field(
        None,
        description="The time the *NotificationMethod* was created (as a ISO-8601 timestamp)",
    )
    email_address: Optional[str] = Field(
        None,
        description="Email address to send the notification to (only for email type)",
    )
    etag: Optional[str] = Field(None, description="ETag for the *NotificationMethod*")
    id: Optional[int] = Field(
        None, description="Unique identifier for the *NotificationMethod*"
    )
    is_default_email_address: Optional[bool] = Field(
        None,
        description="A boolean that is returned only on notification method objects that are relevant e.g. Email notification or Alternative Email",
    )
    type: Optional[Type23] = Field(
        None, description="Human readable description of the type of notification"
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *NotificationMethod* was last updated (as a ISO-8601 timestamp)",
    )
