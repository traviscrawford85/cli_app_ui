# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class ReportBase(BaseModel):
    category: Optional[Category2] = Field(
        None, description="The category of the report"
    )
    created_at: Optional[str] = Field(
        None, description="The time the *Report* was created (as a ISO-8601 timestamp)"
    )
    etag: Optional[str] = Field(None, description="ETag for the *Report*")
    format: Optional[Format1] = Field(
        None, description="The requested format of the report"
    )
    id: Optional[int] = Field(None, description="Unique identifier for the *Report*")
    kind: Optional[Kind3] = Field(None, description="The kind of report to generate")
    name: Optional[str] = Field(None, description="A specified name for the report")
    progress: Optional[int] = Field(
        None, description="The integer percentage of how complete the report is."
    )
    source: Optional[Source1] = Field(None, description="The source of the report")
    state: Optional[State5] = Field(None, description="The current state of the report")
    updated_at: Optional[str] = Field(
        None,
        description="The time the *Report* was last updated (as a ISO-8601 timestamp)",
    )
