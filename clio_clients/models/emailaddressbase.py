# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class EmailAddressBase(BaseModel):
    address: Optional[str] = Field(
        None, description="The address of the *EmailAddress*"
    )
    created_at: Optional[str] = Field(
        None,
        description="The time the *EmailAddress* was created (as a ISO-8601 timestamp)",
    )
    etag: Optional[str] = Field(None, description="ETag for the *EmailAddress*")
    id: Optional[int] = Field(
        None, description="Unique identifier for the *EmailAddress*"
    )
    name: Optional[str] = Field(
        None,
        description="A descriptive name for the *EmailAddress. Common values include `Home`, `Work`, and `Other`, as these are the only selectable options within Clio Manage, but other values may be returned for this field.",
    )
    primary: Optional[bool] = Field(
        None, description="Whether it is the default for this contact"
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *EmailAddress* was last updated (as a ISO-8601 timestamp)",
    )
