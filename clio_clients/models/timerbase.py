# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class TimerBase(BaseModel):
    created_at: Optional[str] = Field(
        None, description="The time the *Timer* was created (as a ISO-8601 timestamp)"
    )
    elapsed_time: Optional[float] = Field(
        None,
        description="How much time has elapsed, in hours, since the timer was started",
    )
    etag: Optional[str] = Field(None, description="ETag for the *Timer*")
    id: Optional[int] = Field(None, description="Unique identifier for the *Timer*")
    start_time: Optional[str] = Field(
        None, description="The time the *Timer* was started (as ISO-8601 timestamp)"
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *Timer* was last updated (as a ISO-8601 timestamp)",
    )
