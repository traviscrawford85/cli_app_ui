# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from decimal import Decimal
from enum import Enum
from typing import Any
from typing import Dict
from typing import List
from typing import Optional

from pydantic import BaseModel
from pydantic import Field

class ExpenseCategoryBase(BaseModel):
    accessible_to_user: Optional[bool] = Field(
        None, description="Determines if expense category is accessible to user"
    )
    created_at: Optional[str] = Field(
        None,
        description="The time the *ExpenseCategory* was created (as a ISO-8601 timestamp)",
    )
    entry_type: Optional[str] = Field(
        None,
        description='The type of expense entry the category is associated to. Can be either "hard_cost", "soft_cost" or "unassociated"',
    )
    etag: Optional[str] = Field(None, description="ETag for the *ExpenseCategory*")
    id: Optional[int] = Field(
        None, description="Unique identifier for the *ExpenseCategory*"
    )
    name: Optional[str] = Field(None, description="The name of the expense category")
    rate: Optional[int] = Field(None, description="The price charged per unit cost")
    tax_setting: Optional[str] = Field(
        None, description="The type of tax rate applied to the expense category."
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *ExpenseCategory* was last updated (as a ISO-8601 timestamp)",
    )
    xero_expense_code: Optional[str] = Field(
        None, description="Custom Xero expense code for an expense category"
    )
