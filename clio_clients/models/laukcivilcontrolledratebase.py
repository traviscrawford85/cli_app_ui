# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from decimal import Decimal
from typing import Optional

from pydantic import BaseModel, Field


class LaukCivilControlledRateBase(BaseModel):
    activity: Optional[str] = Field(
        None, description="Activity of the *LaukCivilControlledRate*"
    )
    activity_type: Optional[str] = Field(None, description="Activity type")
    category_of_law: Optional[str] = Field(None, description="Category of law")
    created_at: Optional[str] = Field(
        None,
        description="The time the *LaukCivilControlledRate* was created (as a ISO-8601 timestamp)",
    )
    etag: Optional[str] = Field(
        None, description="ETag for the *LaukCivilControlledRate*"
    )
    exceptional: Optional[Decimal] = Field(
        None, description="Fee applied for high activity count"
    )
    fee: Optional[Decimal] = Field(None, description="Fee amount")
    fee_scheme: Optional[str] = Field(None, description="Fee scheme")
    id: Optional[int] = Field(
        None, description="Unique identifier for the *LaukCivilControlledRate*"
    )
    key: Optional[str] = Field(None, description="Unique key")
    rate_type: Optional[str] = Field(None, description="Rate type")
    region: Optional[str] = Field(None, description="Region")
    updated_at: Optional[str] = Field(
        None,
        description="The time the *LaukCivilControlledRate* was last updated (as a ISO-8601 timestamp)",
    )
