# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class ClioPaymentsLinkBase(BaseModel):
    active: Optional[bool] = Field(
        None, description="Whether or not the payment link is active."
    )
    amount: Optional[float] = Field(
        None, description="The defined amount of the payment link, if set."
    )
    created_at: Optional[str] = Field(
        None,
        description="The time the *ClioPaymentsLink* was created (as a ISO-8601 timestamp)",
    )
    currency: Optional[str] = Field(
        None, description="The currency the payment link will collect."
    )
    description: Optional[str] = Field(
        None, description="The defined description of the payment link, if set."
    )
    email_address: Optional[str] = Field(
        None,
        description="The email address to pre-fill the field on the the payment link, if set.",
    )
    etag: Optional[str] = Field(None, description="ETag for the *ClioPaymentsLink*")
    expires_at: Optional[str] = Field(
        None, description="The ISO 8601 date and time the payment link will expire."
    )
    id: Optional[int] = Field(
        None, description="Unique identifier for the *ClioPaymentsLink*"
    )
    is_allocated_as_revenue: Optional[bool] = Field(
        None, description="Whether the payment link is allocated as revenue."
    )
    redirect_url: Optional[str] = Field(
        None,
        description="The URL to redirect the client to after the payment has been made.",
    )
    url: Optional[str] = Field(None, description="The URL of the payment link.")
