# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class TaskTemplateListBase(BaseModel):
    created_at: Optional[str] = Field(
        None,
        description="The time the *TaskTemplateList* was created (as a ISO-8601 timestamp)",
    )
    description: Optional[str] = Field(
        None, description="A detailed description of the *TaskTemplateList*"
    )
    etag: Optional[str] = Field(None, description="ETag for the *TaskTemplateList*")
    id: Optional[int] = Field(
        None, description="Unique identifier for the *TaskTemplateList*"
    )
    name: Optional[str] = Field(None, description="The name of the *TaskTemplateList*")
    templates_count: Optional[int] = Field(
        None,
        description="How many task templates exist as an association to the *TaskTemplateList*",
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *TaskTemplateList* was last updated (as a ISO-8601 timestamp)",
    )
