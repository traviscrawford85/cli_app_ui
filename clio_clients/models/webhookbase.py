# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from decimal import Decimal
from enum import Enum
from typing import Any
from typing import Dict
from typing import List
from typing import Optional

from pydantic import BaseModel
from pydantic import Field

class WebhookBase(BaseModel):
    created_at: Optional[str] = Field(
        None, description="The time the *Webhook* was created (as a ISO-8601 timestamp)"
    )
    etag: Optional[str] = Field(None, description="ETag for the *Webhook*")
    events: Optional[List[Event1]] = Field(
        None, description="The events your webhook is subscribed to."
    )
    expires_at: Optional[str] = Field(
        None, description="The time webhook will expire (as a ISO-8601 timestamp)"
    )
    fields: Optional[str] = Field(
        None, description="Fields to be included in the webhook request"
    )
    id: Optional[int] = Field(None, description="Unique identifier for the *Webhook*")
    model: Optional[Model] = Field(
        None, description="What kind of records the webhook is for"
    )
    shared_secret: Optional[str] = Field(
        None, description="A shared secret used to create a signature for the payload"
    )
    status: Optional[Status3] = Field(
        None, description="The current status of the webhook."
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *Webhook* was last updated (as a ISO-8601 timestamp)",
    )
    url: Optional[str] = Field(
        None,
        description="The `https` URL to send the data to when the events are triggered",
    )
