# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class MatterBudgetBase(BaseModel):
    budget: Optional[float] = Field(
        None, description="The amount allocated for the matter."
    )
    created_at: Optional[str] = Field(
        None,
        description="The time the *MatterBudget* was created (as a ISO-8601 timestamp)",
    )
    etag: Optional[str] = Field(None, description="ETag for the *MatterBudget*")
    id: Optional[int] = Field(
        None, description="Unique identifier for the *MatterBudget*"
    )
    include_expenses: Optional[bool] = Field(
        None, description="Whether the budget includes expenses."
    )
    notification_threshold: Optional[int] = Field(
        None,
        description="Percentage of the budget when it starts notifying users. The number must be between 0 and 100.",
    )
    notify_users: Optional[bool] = Field(
        None,
        description="Whether to notify users when the matter reaches the notification threshold.",
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *MatterBudget* was last updated (as a ISO-8601 timestamp)",
    )
