# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class CustomFieldValueBase(BaseModel):
    created_at: Optional[str] = Field(
        None,
        description="The time the *CustomFieldValue* was created (as a ISO-8601 timestamp)",
    )
    etag: Optional[str] = Field(None, description="ETag for the *CustomFieldValue*")
    field_display_order: Optional[int] = Field(
        None, description="The display position of the *CustomFieldValue*"
    )
    field_displayed: Optional[bool] = Field(
        None, description="Whether the *CustomFieldValue* is displayed by default"
    )
    field_name: Optional[str] = Field(None, description="The name of the custom field")
    field_required: Optional[bool] = Field(
        None, description="Whether the *CustomFieldValue* requires a value"
    )
    field_type: Optional[FieldType] = Field(
        None, description="The type of the *CustomFieldValue*"
    )
    id: Optional[str] = Field(
        None, description="Unique identifier for the *CustomFieldValue*"
    )
    soft_deleted: Optional[bool] = Field(
        None, description="Whether the value is associated with a deleted custom field"
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *CustomFieldValue* was last updated (as a ISO-8601 timestamp)",
    )
    value: Optional[str] = Field(
        None, description="The value of the *CustomFieldValue*"
    )
