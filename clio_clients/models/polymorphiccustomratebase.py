# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from decimal import Decimal
from enum import Enum
from typing import Any
from typing import Dict
from typing import List
from typing import Optional

from pydantic import BaseModel
from pydantic import Field

class PolymorphicCustomRateBase(BaseModel):
    award: Optional[float] = Field(
        None, description="The value of the ContingencyFee award."
    )
    created_at: Optional[str] = Field(
        None,
        description="The time the *PolymorphicCustomRate* was created (as a ISO-8601 timestamp)",
    )
    date: Optional[str] = Field(
        None, description="The date of the ContingencyFee award."
    )
    etag: Optional[str] = Field(
        None, description="ETag for the *PolymorphicCustomRate*"
    )
    id: Optional[int] = Field(
        None, description="The unique identifier for the custom rate"
    )
    note: Optional[str] = Field(
        None, description="Details about the ContingencyFee award."
    )
    rate: Optional[float] = Field(
        None,
        description="If `custom_rate.type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.\n\nIf `custom_rate.type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.\n\nIf `custom_rate.type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter. The value may also be expressed as string that represents a rational number such as `1/3`.\n\nIf the user does not have sufficient rate visibility, the rates are hidden.\n",
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *PolymorphicCustomRate* was last updated (as a ISO-8601 timestamp)",
    )
