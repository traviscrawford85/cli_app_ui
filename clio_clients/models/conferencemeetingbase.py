# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class ConferenceMeetingBase(BaseModel):
    conference_id: Optional[int] = Field(
        None, description="Third-party provider unique meeting ID"
    )
    conference_password: Optional[str] = Field(
        None, description="Third-party provider meeting password"
    )
    created_at: Optional[str] = Field(
        None,
        description="The time the *ConferenceMeeting* was created (as a ISO-8601 timestamp)",
    )
    etag: Optional[str] = Field(None, description="ETag for the *ConferenceMeeting*")
    id: Optional[int] = Field(
        None, description="Unique identifier for the *ConferenceMeeting*"
    )
    join_url: Optional[str] = Field(
        None, description="URL for participants to join the video conference"
    )
    source_id: Optional[int] = Field(
        None, description="The external ID of the video conference meeting"
    )
    type: Optional[str] = Field(None, description="The type of video conference")
    updated_at: Optional[str] = Field(
        None,
        description="The time the *ConferenceMeeting* was last updated (as a ISO-8601 timestamp)",
    )
