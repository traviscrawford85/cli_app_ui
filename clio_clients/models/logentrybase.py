# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from clio_clients.models.type.type19 import (
    Type19,
)  # Assuming Type19 is defined in this module
from pydantic import BaseModel, Field


class LogEntryBase(BaseModel):
    accessed_at: Optional[str] = Field(
        None,
        description="The time the item was last accessed (as a ISO-8601 timestamp)",
    )
    created_at: Optional[str] = Field(
        None,
        description="The time the *LogEntry* was created (as a ISO-8601 timestamp)",
    )
    etag: Optional[str] = Field(None, description="ETag for the *LogEntry*")
    id: Optional[int] = Field(None, description="Unique identifier for the *LogEntry*")
    type: Optional[Type19] = Field(None, description="The type of the *LogEntry*")
    updated_at: Optional[str] = Field(
        None,
        description="The time the *LogEntry* was last updated (as a ISO-8601 timestamp)",
    )
