# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field

from clio_clients.models.type.type10 import Type10


class ContactBase(BaseModel):
    client_connect_user_id: Optional[int] = Field(
        None,
        description="The ID for the Clio Connect user associated with this *Contact*",
    )
    clio_connect_email: Optional[str] = Field(
        None, description="Clio Connect email if the *Contact* is a ClioConnect User"
    )
    created_at: Optional[str] = Field(
        None, description="The time the *Contact* was created (as a ISO-8601 timestamp)"
    )
    date_of_birth: Optional[str] = Field(None, description="Date of birth")
    etag: Optional[str] = Field(None, description="ETag for the *Contact*")
    first_name: Optional[str] = Field(None, description="First name of the Person")
    has_clio_for_clients_permission: Optional[bool] = Field(
        None,
        description="True if at least one resource has been shared with the contact using Clio for Clients.",
    )
    id: Optional[int] = Field(None, description="Unique identifier for the *Contact*")
    initials: Optional[str] = Field(None, description="The initials of the *Contact*")
    is_bill_recipient: Optional[bool] = Field(
        None,
        description="Whether the Contact is a bill recipient on at least one matter.",
    )
    is_client: Optional[bool] = Field(
        None, description="Whether or not the Contact is a client"
    )
    is_clio_for_client_user: Optional[bool] = Field(
        None,
        description="Whether or not this contact has client_login and client_user (can be created due to addition to client portal or client_share_permissions)",
    )
    is_co_counsel: Optional[bool] = Field(
        None, description="Whether or not the Contact has matters shared as co-counsel"
    )
    last_name: Optional[str] = Field(None, description="Last name of the Person")
    ledes_client_id: Optional[str] = Field(
        None, description="LEDES client id of the Contact"
    )
    locked_clio_connect_email: Optional[bool] = Field(
        None,
        description="A boolean indicating if the ability to modify this *Contacts Clio connect email is locked.",
    )
    middle_name: Optional[str] = Field(None, description="Middle name of the Person")
    name: Optional[str] = Field(None, description="The full name of the *Contact*")
    prefix: Optional[str] = Field(
        None, description="The prefix of the *Contact* (Mr, Mrs, etc)"
    )
    primary_email_address: Optional[str] = Field(
        None, description="The primary email address associated with this *Contact*."
    )
    primary_phone_number: Optional[str] = Field(
        None, description="The primary phone number associated with this *Contact*."
    )
    sales_tax_number: Optional[str] = Field(
        None, description="The sales tax number of the *Contact*"
    )
    secondary_email_address: Optional[str] = Field(
        None, description="The secondary email address associated with this *Contact*."
    )
    secondary_phone_number: Optional[str] = Field(
        None, description="The secondary phone number of the *Contact*."
    )
    title: Optional[str] = Field(
        None, description="The designated title of the *Contact*"
    )
    type: Optional[Type10] = Field(None, description="The type of the *Contact*")
    updated_at: Optional[str] = Field(
        None,
        description="The time the *Contact* was last updated (as a ISO-8601 timestamp)",
    )

ContactBase.model_rebuild()
