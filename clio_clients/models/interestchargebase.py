# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class InterestChargeBase(BaseModel):
    created_at: Optional[str] = Field(
        None,
        description="The time the *InterestCharge* was created (as a ISO-8601 timestamp)",
    )
    date: Optional[str] = Field(
        None, description="The *InterestCharge* date (as a ISO-8601 date)"
    )
    description: Optional[str] = Field(
        None, description="The description for the *InterestCharge*"
    )
    etag: Optional[str] = Field(None, description="ETag for the *InterestCharge*")
    id: Optional[int] = Field(
        None, description="Unique identifier for the *InterestCharge*"
    )
    total: Optional[float] = Field(
        None, description="The total amount for the *InterestCharge*"
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *InterestCharge* was last updated (as a ISO-8601 timestamp)",
    )
