# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class JurisdictionsToTriggerBase(BaseModel):
    created_at: Optional[str] = Field(
        None,
        description="The time the *JurisdictionsToTrigger* was created (as a ISO-8601 timestamp)",
    )
    description: Optional[str] = Field(
        None, description="A detailed description of the *JurisdictionsToTrigger*"
    )
    do_not_recalculate: Optional[bool] = Field(
        None, description="Whether the associated dates should not be recalculated"
    )
    etag: Optional[str] = Field(
        None, description="ETag for the *JurisdictionsToTrigger*"
    )
    id: Optional[int] = Field(
        None, description="Unique identifier for the *JurisdictionsToTrigger*"
    )
    is_requirements_required: Optional[bool] = Field(
        None, description="Whether the trigger has requirements"
    )
    is_served: Optional[bool] = Field(
        None, description="Whether the user must select a Date Offset (Service Type)"
    )
    system_id: Optional[int] = Field(None, description="Server id")
    updated_at: Optional[str] = Field(
        None,
        description="The time the *JurisdictionsToTrigger* was last updated (as a ISO-8601 timestamp)",
    )
