# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from decimal import Decimal
from typing import Optional

from pydantic import BaseModel, Field


class LaukExpenseCategoryBase(BaseModel):
    certificated: Optional[bool] = Field(
        None, description="Certificated boolean identifier for expense"
    )
    civil: Optional[bool] = Field(
        None, description="Civil boolean identifier for expense"
    )
    created_at: Optional[str] = Field(
        None,
        description="The time the *LaukExpenseCategory* was created (as a ISO-8601 timestamp)",
    )
    criminal: Optional[bool] = Field(
        None, description="Criminal boolean identifier for expense"
    )
    etag: Optional[str] = Field(None, description="ETag for the *LaukExpenseCategory*")
    id: Optional[int] = Field(
        None, description="Unique identifier for the *LaukExpenseCategory*"
    )
    key: Optional[str] = Field(None, description="Unique key")
    name: Optional[str] = Field(None, description="Expense name")
    rate: Optional[Decimal] = Field(
        None, description="Determines rate based on region param"
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *LaukExpenseCategory* was last updated (as a ISO-8601 timestamp)",
    )
