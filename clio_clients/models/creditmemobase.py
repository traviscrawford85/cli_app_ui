# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class CreditMemoBase(BaseModel):
    amount: Optional[float] = Field(None, description="Total amount credited")
    created_at: Optional[str] = Field(
        None,
        description="The time the *CreditMemo* was created (as a ISO-8601 timestamp)",
    )
    date: Optional[str] = Field(
        None, description="Date the *CreditMemo* was recorded (as a ISO-8601 date)"
    )
    description: Optional[str] = Field(
        None, description="A detailed description for the *CreditMemo*"
    )
    discount: Optional[bool] = Field(
        None, description="Whether the *CreditMemo* is applied as discount"
    )
    etag: Optional[str] = Field(None, description="ETag for the *CreditMemo*")
    id: Optional[int] = Field(
        None, description="Unique identifier for the *CreditMemo*"
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *CreditMemo* was last updated (as a ISO-8601 timestamp)",
    )
    voided_at: Optional[str] = Field(
        None, description="Time the *CreditMemo* was voided (as a ISO-8601 timestamp)"
    )
